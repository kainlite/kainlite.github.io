{
  "version": "https://jsonfeed.org/version/1",
  "title": "Kubernetes, CI/CD, Git, Linux, Containers, Golang... and more",
  "home_page_url": "https://techsquad.rocks/",
  "feed_url": "https://techsquad.rocks/index.json",
  "items": [
    
    {
      "id": "https://techsquad.rocks/blog/ssh_socks_proxy/",
      "url": "https://techsquad.rocks/blog/ssh_socks_proxy/",
      "title": "SSH Socks Proxy",
      "date_published": "2019-03-10T00:00:00Z",
      "tags": ["openssh","tips-and-tricks","linux"],
      "content_html": "\n\n\u003ch5 id=\"introduction\"\u003e\u003cstrong\u003eIntroduction\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eSSH is a great tool not only to connect and interact with remote servers, in this article we will explore SSH Socks proxy and what it means, we also will explore \u003ca href=\"https://techsquad.rocks/blog/ssh_remote_port_forward/\"\u003eSSH Remote Port Forward\u003c/a\u003e and \u003ca href=\"https://techsquad.rocks/blog/ssh_local_port_forward/\"\u003eSSH Local Port Forward\u003c/a\u003e and how to use that functionality.\u003c/p\u003e\n\n\u003ch5 id=\"explanation\"\u003e\u003cstrong\u003eExplanation\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eSOCKS is an Internet protocol that exchanges network packets between a client and server through a proxy server (Extracted from Wikipedia). So basically it allows our remote server to become a VPNey likey thingy using SSH, so let\u0026rsquo;s see the different options of how and when to use it. But we will need to tell the application to use that SOCKS proxy, for example our browser or curl.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eThe command\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003essh -D \u003cspan style=\"color:#ae81ff\"\u003e9999\u003c/span\u003e -Nn ec2-user@54.210.37.203\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cp\u003eFor example I started a EC2 instance for this example and this is the output from curl:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e$ curl --socks4 localhost:9999 icanhazip.com\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# 54.210.37.203\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003ch5 id=\"the-parameters-and-their-meaning\"\u003e\u003cstrong\u003eThe parameters and their meaning\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eI extracted a portion of the meaning of parameter from the man page, but in a nutshell it means dynamic port forward without a shell.\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e-N Do not execute a remote command. This is useful for just forwarding ports.\n-n Redirects stdin from /dev/null (actually, prevents reading from stdin). This must be used when ssh is run in the background.\n-D Specifies a local “dynamic” application-level port forwarding.  This works by allocating a socket to listen to port on the local side, optionally bound to the specified bind_address.\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003ch5 id=\"closing-notes\"\u003e\u003cstrong\u003eClosing notes\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eAs you can see this option can be really handy to have a temporary VPN or proxy, also if you want to make this automatic and not so temporary you can check autossh or any real VPN solution like OpenVPN. You can use this kind of proxy in any App that supports SOCKS, most browsers do for example.\u003c/p\u003e\n\n\u003ch3 id=\"errata\"\u003eErrata\u003c/h3\u003e\n\n\u003cp\u003eIf you spot any error or have any suggestion, please send me a message so it gets fixed.\u003c/p\u003e\n\n\u003cp\u003eAlso, you can check the source code and changes in the \u003ca href=\"https://github.com/kainlite/kainlite.github.io\"\u003egenerated code\u003c/a\u003e and the \u003ca href=\"https://github.com/kainlite/blog\"\u003esources here\u003c/a\u003e\u003c/p\u003e\n"
    }, 
    {
      "id": "https://techsquad.rocks/blog/ssh_remote_port_forward/",
      "url": "https://techsquad.rocks/blog/ssh_remote_port_forward/",
      "title": "SSH Remote Port Forward",
      "date_published": "2019-03-09T00:00:00Z",
      "tags": ["openssh","tips-and-tricks","linux"],
      "content_html": "\n\n\u003ch5 id=\"introduction\"\u003e\u003cstrong\u003eIntroduction\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eSSH is a great tool not only to connect and interact with remote servers, in this article we will explore SSH Remote port forward and what it means, we also will explore \u003ca href=\"https://techsquad.rocks/blog/ssh_local_port_forward/\"\u003eSSH Local Port Forward\u003c/a\u003e and \u003ca href=\"https://techsquad.rocks/blog/ssh_socks_proxy/\"\u003eSSH Socks Proxy\u003c/a\u003e and how to use that functionality.\u003c/p\u003e\n\n\u003ch5 id=\"explanation\"\u003e\u003cstrong\u003eExplanation\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eRemote port forward basically let\u0026rsquo;s you forward one port from your machine to a remote machine, for example you want to connect to a local service from a remote server but just temporarily, let\u0026rsquo;s say you want to connect to a mysql instance on the default port (3306).\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eThe command\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003essh -Nn -R \u003cspan style=\"color:#ae81ff\"\u003e3306\u003c/span\u003e:localhost:3306 user@example.com\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eThe parameters and their meaning\u003c/strong\u003e\nI extracted a portion of the meaning of parameter from the man page, but in a nutshell it means remote port forward without a shell.\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e-N Do not execute a remote command. This is useful for just forwarding ports.\n-n Redirects stdin from /dev/null (actually, prevents reading from stdin). This must be used when ssh is run in the background.\n-R Specifies that connections to the given TCP port or Unix socket on the remote (server) host are to be forwarded to the local side.\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003ch5 id=\"server-configuration\"\u003e\u003cstrong\u003eServer configuration\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eThere are two configuration parameters that can change the behaviour of remote and local forwarded ports, those parameters are \u003ccode\u003eGatewayPorts\u003c/code\u003e and \u003ccode\u003eAllowTcpForwarding\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch5 id=\"gatewayports\"\u003e\u003cstrong\u003eGatewayPorts\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eBy default this option is \u003ccode\u003eno\u003c/code\u003e which means that only the remote computer will be able to connect to the forwarded port, you can set it to \u003ccode\u003eyes\u003c/code\u003e or \u003ccode\u003eclientspecified\u003c/code\u003e to allow other machines use that remote port-forward (handy and dangerous).\u003c/p\u003e\n\n\u003ch5 id=\"allowtcpforwarding\"\u003e\u003cstrong\u003eAllowTcpForwarding\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eBy default this option is set to \u003ccode\u003eyes\u003c/code\u003e, you can restrict remote and local port forwarding by setting it to \u003ccode\u003eno\u003c/code\u003e or allow only local by setting it to \u003ccode\u003elocal\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch3 id=\"closing-notes\"\u003e\u003cstrong\u003eClosing notes\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cp\u003eAs you can see this option can be really handy to bypass firewalls for example or have a temporary port forward, also if you want to make this automatic and not so temporary you can check autossh. You can use nc (netcat) if you don\u0026rsquo;t want to install anything to test the connections and the tunnels (nc -l -p PORT) in the server side and (nc HOST PORT) in the client.\u003c/p\u003e\n\n\u003ch3 id=\"errata\"\u003eErrata\u003c/h3\u003e\n\n\u003cp\u003eIf you spot any error or have any suggestion, please send me a message so it gets fixed.\u003c/p\u003e\n\n\u003cp\u003eAlso, you can check the source code and changes in the \u003ca href=\"https://github.com/kainlite/kainlite.github.io\"\u003egenerated code\u003c/a\u003e and the \u003ca href=\"https://github.com/kainlite/blog\"\u003esources here\u003c/a\u003e\u003c/p\u003e\n"
    }, 
    {
      "id": "https://techsquad.rocks/blog/ssh_local_port_forward/",
      "url": "https://techsquad.rocks/blog/ssh_local_port_forward/",
      "title": "SSH Local Port Forward",
      "date_published": "2019-03-08T00:00:00Z",
      "tags": ["openssh","tips-and-tricks","linux"],
      "content_html": "\n\n\u003ch5 id=\"introduction\"\u003e\u003cstrong\u003eIntroduction\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eSSH is a great tool not only to connect and interact with remote servers, in this article we will explore SSH Local port forward and what it means, we also will explore \u003ca href=\"https://techsquad.rocks/blog/ssh_remote_port_forward/\"\u003eSSH Remote Port Forward\u003c/a\u003e and \u003ca href=\"https://techsquad.rocks/blog/ssh_socks_proxy/\"\u003eSSH Socks Proxy\u003c/a\u003e and how to use that functionality.\u003c/p\u003e\n\n\u003ch5 id=\"explanation\"\u003e\u003cstrong\u003eExplanation\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eLocal port forward basically let\u0026rsquo;s you forward one port from a remote machine to your local machine, for example you want to connect to a remote service from machine but just temporarily or there is a firewall that won\u0026rsquo;t let you do it, let\u0026rsquo;s say you want to connect to a mysql instance on the default port (3306).\u003c/p\u003e\n\n\u003ch5 id=\"the-command\"\u003e\u003cstrong\u003eThe command\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cscript type=\"application/javascript\" src=\"//gist.github.com/kainlite/a3db371793effeb50fbc5341166c686c.js?file=snippet1.sh\"\u003e\u003c/script\u003e\n\n\u003cp\u003eHere we are forwarding localhost:3306 in the remote machine to localhost:3306, but you can specify another address in the network for example 172.16.16.200 and the command would look like this:\u003c/p\u003e\n\n\u003cp\u003e\u003cscript type=\"application/javascript\" src=\"//gist.github.com/kainlite/a3db371793effeb50fbc5341166c686c.js?file=snippet2.sh\"\u003e\u003c/script\u003e\nThis will give you access to the ip 172.16.16.200 and port 3306 in the remote network.\u003c/p\u003e\n\n\u003ch5 id=\"the-parameters-and-their-meaning\"\u003e\u003cstrong\u003eThe parameters and their meaning\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eI extracted a portion of the meaning of parameter from the man page, but in a nutshell it means local port forward without a shell.\n\u003cscript type=\"application/javascript\" src=\"//gist.github.com/kainlite/a3db371793effeb50fbc5341166c686c.js?file=snippet3.txt\"\u003e\u003c/script\u003e\u003c/p\u003e\n\n\u003ch5 id=\"server-configuration\"\u003e\u003cstrong\u003eServer configuration\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eThere is a configuration parameter that can change the behaviour of remote and local forwarded ports, that parameter is \u003ccode\u003eAllowTcpForwarding\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch5 id=\"allowtcpforwarding\"\u003e\u003cstrong\u003eAllowTcpForwarding\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eBy default this option is set to \u003ccode\u003eyes\u003c/code\u003e, you can restrict remote and local port forwarding by setting it to \u003ccode\u003eno\u003c/code\u003e or allow only local by setting it to \u003ccode\u003elocal\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch5 id=\"closing-notes\"\u003e\u003cstrong\u003eClosing notes\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eAs you can see this option can be really handy to bypass firewalls for example or have a temporary port forward, also if you want to make this automatic and not so temporary you can check autossh. You can use nc (netcat) if you don\u0026rsquo;t want to install anything to test the connections and the tunnels (nc -l -p PORT) in the server side and (nc HOST PORT) in the client.\u003c/p\u003e\n\n\u003ch3 id=\"errata\"\u003eErrata\u003c/h3\u003e\n\n\u003cp\u003eIf you spot any error or have any suggestion, please send me a message so it gets fixed.\u003c/p\u003e\n\n\u003cp\u003eAlso, you can check the source code and changes in the \u003ca href=\"https://github.com/kainlite/kainlite.github.io\"\u003egenerated code\u003c/a\u003e and the \u003ca href=\"https://github.com/kainlite/blog\"\u003esources here\u003c/a\u003e\u003c/p\u003e\n"
    }, 
    {
      "id": "https://techsquad.rocks/blog/create_an_aws_lambda_function_in_go/",
      "url": "https://techsquad.rocks/blog/create_an_aws_lambda_function_in_go/",
      "title": "Create an AWS lambda function in Go",
      "date_published": "2019-02-16T00:00:00Z",
      "tags": ["go","development","serverless","linux"],
      "content_html": "\n\n\u003ch5 id=\"introduction\"\u003e\u003cstrong\u003eIntroduction\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eIn this article we will create a lambda function and an API Gateway route like we did with the serverless framework but only using AWS tools, we will be using the same generated code for our function from the last article \u003ca href=\"https://techsquad.rocks/blog/what_does_the_serverless_framework_does_for_me/\"\u003eWhat does the serverless framework does for me\u003c/a\u003e, so refer to that one before starting this one if you want to know how did we get here. Also as a side note this is a very basic example on how to get started with lambda without any additional tool.\u003c/p\u003e\n\n\u003ch5 id=\"let-s-see-the-code-one-more-time\"\u003e\u003cstrong\u003eLet\u0026rsquo;s see the code one more time\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"color:#f92672\"\u003epackage\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e\n\n\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e (\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;bytes\u0026#34;\u003c/span\u003e\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;context\u0026#34;\u003c/span\u003e\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;encoding/json\u0026#34;\u003c/span\u003e\n\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;github.com/aws/aws-lambda-go/events\u0026#34;\u003c/span\u003e\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;github.com/aws/aws-lambda-go/lambda\u0026#34;\u003c/span\u003e\n)\n\n\u003cspan style=\"color:#75715e\"\u003e// Response is of type APIGatewayProxyResponse since we\u0026#39;re leveraging the\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e// AWS Lambda Proxy Request functionality (default behavior)\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e//\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e// https://serverless.com/framework/docs/providers/aws/events/apigateway/#lambda-proxy-integration\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003etype\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eResponse\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eevents\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eAPIGatewayProxyResponse\u003c/span\u003e\n\n\u003cspan style=\"color:#75715e\"\u003e// Handler is our lambda handler invoked by the `lambda.Start` function call\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eHandler\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ectx\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003econtext\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eContext\u003c/span\u003e) (\u003cspan style=\"color:#a6e22e\"\u003eResponse\u003c/span\u003e, \u003cspan style=\"color:#66d9ef\"\u003eerror\u003c/span\u003e) {\n    \u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ebuf\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ebytes\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eBuffer\u003c/span\u003e\n\n    \u003cspan style=\"color:#a6e22e\"\u003ebody\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ejson\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eMarshal\u003c/span\u003e(\u003cspan style=\"color:#66d9ef\"\u003emap\u003c/span\u003e[\u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e]\u003cspan style=\"color:#66d9ef\"\u003einterface\u003c/span\u003e{}{\n        \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;message\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Go Serverless v1.0! Your function executed successfully!\u0026#34;\u003c/span\u003e,\n    })\n    \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e!=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e {\n        \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eResponse\u003c/span\u003e{\u003cspan style=\"color:#a6e22e\"\u003eStatusCode\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e404\u003c/span\u003e}, \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e\n    }\n    \u003cspan style=\"color:#a6e22e\"\u003ejson\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eHTMLEscape\u003c/span\u003e(\u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003ebuf\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003ebody\u003c/span\u003e)\n\n    \u003cspan style=\"color:#a6e22e\"\u003eresp\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eResponse\u003c/span\u003e{\n        \u003cspan style=\"color:#a6e22e\"\u003eStatusCode\u003c/span\u003e:      \u003cspan style=\"color:#ae81ff\"\u003e200\u003c/span\u003e,\n        \u003cspan style=\"color:#a6e22e\"\u003eIsBase64Encoded\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003efalse\u003c/span\u003e,\n        \u003cspan style=\"color:#a6e22e\"\u003eBody\u003c/span\u003e:            \u003cspan style=\"color:#a6e22e\"\u003ebuf\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eString\u003c/span\u003e(),\n        \u003cspan style=\"color:#a6e22e\"\u003eHeaders\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003emap\u003c/span\u003e[\u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e]\u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e{\n            \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Content-Type\u0026#34;\u003c/span\u003e:           \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;application/json\u0026#34;\u003c/span\u003e,\n            \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;X-MyCompany-Func-Reply\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;hello-handler\u0026#34;\u003c/span\u003e,\n        },\n    }\n\n    \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eresp\u003c/span\u003e, \u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e\n}\n\n\u003cspan style=\"color:#66d9ef\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e() {\n    \u003cspan style=\"color:#a6e22e\"\u003elambda\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eStart\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eHandler\u003c/span\u003e)\n}\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\u003cp\u003eWith that code as a starting point, now we need to build, package, upload, and deploy our function:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eBuild\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eGOOS\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003elinux go build main.go\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003ePackage\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ezip main.zip ./main\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#   adding: main (deflated 51%)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eCreate the role\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eGo to IAM \u0026gt; Roles \u0026gt; Create.\nThen select Lambda, assign a name and a description and then get the ARN for this role. Note that with the serverless framework this is done automatically for us, so we don\u0026rsquo;t need to create a new role for each\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eUpload / Deploy\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eaws lambda create-function \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e  --region us-east-1 \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e  --function-name helloworld \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e  --memory \u003cspan style=\"color:#ae81ff\"\u003e128\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e  --role arn:aws:iam::894527626897:role/testing-aws-go \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e  --runtime go1.x \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e  --zip-file fileb://main.zip \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e  --handler main\n\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;FunctionName\u0026#34;: \u0026#34;helloworld\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;FunctionArn\u0026#34;: \u0026#34;arn:aws:lambda:us-east-1:894527626897:function:helloworld\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;Runtime\u0026#34;: \u0026#34;go1.x\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;Role\u0026#34;: \u0026#34;arn:aws:iam::894527626897:role/testing-aws-go\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;Handler\u0026#34;: \u0026#34;main\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;CodeSize\u0026#34;: 4346283,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;Description\u0026#34;: \u0026#34;\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;Timeout\u0026#34;: 3,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;MemorySize\u0026#34;: 128,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;LastModified\u0026#34;: \u0026#34;2019-02-16T15:44:10.610+0000\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;CodeSha256\u0026#34;: \u0026#34;02/PQBeQuCC8JS1TLjyU38oiUwiyQSmKJXjya25XpFA=\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;Version\u0026#34;: \u0026#34;$LATEST\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;TracingConfig\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;Mode\u0026#34;: \u0026#34;PassThrough\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     },\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;RevisionId\u0026#34;: \u0026#34;7c9030e5-4a26-4f7e-968d-3a4f65dfde21\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# }\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nNote that your function-name must match the name of your Lambda handler name (Handler). Note that this role might be insecure in some scenarios if you grant too much permissions, so try to restrict it as much as possible as with any role and policy.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eTest the function\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eaws lambda invoke --function-name helloworld --log-type Tail /dev/stdout\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# {\u0026#34;statusCode\u0026#34;:200,\u0026#34;headers\u0026#34;:{\u0026#34;Content-Type\u0026#34;:\u0026#34;application/json\u0026#34;,\u0026#34;X-MyCompany-Func-Reply\u0026#34;:\u0026#34;hello-handler\u0026#34;},\u0026#34;body\u0026#34;:\u0026#34;{\\\u0026#34;message\\\u0026#34;:\\\u0026#34;Go Serverless v1.0! Your function executed successfully!\\\u0026#34;}\u0026#34;}{\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;StatusCode\u0026#34;: 200,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;LogResult\u0026#34;: \u0026#34;U1RBUlQgUmVxdWVzdElkOiBmZTRmMWE4Zi1kYzAyLTQyYWQtYjBlYy0wMjA5YjY4MDY1YWQgVmVyc2lvbjogJExBVEVTVApFTkQgUmVxdWVzdElkOiBmZTRmMWE4Zi1kYzAyLTQyYWQtYjBlYy0wMjA5YjY4MDY1YWQKUkVQT1JUIFJlcXVlc3RJZDogZmU0ZjFhOGYtZGMwMi00MmFkLWIwZWMtMDIwOWI2ODA2NWFkCUR1cmF0aW9uOiAxMy4xOSBtcwlCaWxsZWQgRHVyYXRpb246IDEwMCBtcyAJTWVtb3J5IFNpemU6IDEyOCBNQglNYXggTWVtb3J5IFVzZWQ6IDQ1IE1CCQo=\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;ExecutedVersion\u0026#34;: \u0026#34;$LATEST\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# }\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nEverything looks about right, so what\u0026rsquo;s next? We will eventually need to communicate with this code from an external source, so let\u0026rsquo;s see how we can do that with the API Gateway. Also the log is encoded in base64, so if you want to see what the log result was do the following.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eCheck the logs\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eecho \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;U1RBUlQgUmVxdWVzdElkOiBmZTRmMWE4Zi1kYzAyLTQyYWQtYjBlYy0wMjA5YjY4MDY1YWQgVmVyc2lvbjogJExBVEVTVApFTkQgUmVxdWVzdElkOiBmZTRmMWE4Zi1kYzAyLTQyYWQtYjBlYy0wMjA5YjY4MDY1YWQKUkVQT1JUIFJlcXVlc3RJZDogZmU0ZjFhOGYtZGMwMi00MmFkLWIwZWMtMDIwOWI2ODA2NWFkCUR1cmF0aW9uOiAxMy4xOSBtcwlCaWxsZWQgRHVyYXRpb246IDEwMCBtcyAJTWVtb3J5IFNpemU6IDEyOCBNQglNYXggTWVtb3J5IFVzZWQ6IDQ1IE1CCQo=\u0026#34;\u003c/span\u003e | base64 -d\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# START RequestId: fe4f1a8f-dc02-42ad-b0ec-0209b68065ad Version: $LATEST\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# END RequestId: fe4f1a8f-dc02-42ad-b0ec-0209b68065ad\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# REPORT RequestId: fe4f1a8f-dc02-42ad-b0ec-0209b68065ad  Duration: 13.19 ms      Billed Duration: 100 ms         Memory Size: 128 MB     Max Memory Used: 45 MB\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nYou should also be able to see this same output in CloudWatch.\u003c/p\u003e\n\n\u003ch5 id=\"api-gateway\"\u003e\u003cstrong\u003eAPI Gateway\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eTo make this step simpler I decided to use the AWS Console instead of the CLI it will also cut down the size of this article substantially.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eNow we need to create the API Gateway endpoint\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eNote that you only have to go to Lambda-\u0026gt;Functions-\u0026gt;helloworld-\u0026gt;Add triggers-\u0026gt;API Gateway. And then complete as shown in the image, when you save this new trigger you will get the resource that then can be used to test the API Gateway integration.\n\u003cfigure\u003e\n    \u003cimg src=\"/img/lambda-helloworld-example.png\" width=\"100%\"/\u003e \n\u003c/figure\u003e\n\u003c/p\u003e\n\n\u003cp\u003eThe endpoint will show as follows (Click on API Gateway):\n\u003cfigure\u003e\n    \u003cimg src=\"/img/lambda-helloworld-example-endpoint.png\" width=\"100%\"/\u003e \n\u003c/figure\u003e\n\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eTest the API\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ecurl -v https://r8efasfb26.execute-api.us-east-1.amazonaws.com/default/helloworld\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# *   Trying 54.236.123.239...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * TCP_NODELAY set\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * Connected to r8efasfb26.execute-api.us-east-1.amazonaws.com (54.236.123.239) port 443 (#0)\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * ALPN, offering h2\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * ALPN, offering http/1.1\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * successfully set certificate verify locations:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# *   CAfile: /etc/ssl/certs/ca-certificates.crt\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#   CApath: none\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * TLSv1.3 (OUT), TLS handshake, Client hello (1):\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * TLSv1.3 (IN), TLS handshake, Server hello (2):\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * TLSv1.2 (IN), TLS handshake, Certificate (11):\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * TLSv1.2 (IN), TLS handshake, Server key exchange (12):\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * TLSv1.2 (IN), TLS handshake, Server finished (14):\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * TLSv1.2 (OUT), TLS handshake, Client key exchange (16):\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * TLSv1.2 (OUT), TLS change cipher, Change cipher spec (1):\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * TLSv1.2 (OUT), TLS handshake, Finished (20):\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * TLSv1.2 (IN), TLS handshake, Finished (20):\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * SSL connection using TLSv1.2 / ECDHE-RSA-AES128-GCM-SHA256\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * ALPN, server accepted to use h2\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * Server certificate:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# *  subject: CN=*.execute-api.us-east-1.amazonaws.com\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# *  start date: Sep 20 00:00:00 2018 GMT\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# *  expire date: Oct 20 12:00:00 2019 GMT\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# *  subjectAltName: host \u0026#34;r8efasfb26.execute-api.us-east-1.amazonaws.com\u0026#34; matched cert\u0026#39;s \u0026#34;*.execute-api.us-east-1.amazonaws.com\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# *  issuer: C=US; O=Amazon; OU=Server CA 1B; CN=Amazon\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# *  SSL certificate verify ok.\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * Using HTTP2, server supports multi-use\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * Connection state changed (HTTP/2 confirmed)\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * Using Stream ID: 1 (easy handle 0x56394c766db0)\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026gt; GET /default/helloworld HTTP/2\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026gt; Host: r8efasfb26.execute-api.us-east-1.amazonaws.com\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026gt; User-Agent: curl/7.63.0\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026gt; Accept: */*\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026gt;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * Connection state changed (MAX_CONCURRENT_STREAMS == 128)!\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026lt; HTTP/2 200\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026lt; date: Sat, 16 Feb 2019 17:17:58 GMT\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026lt; content-type: application/json\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026lt; content-length: 70\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026lt; x-amzn-requestid: ce5c5863-320e-11e9-9e76-875e7540974c\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026lt; x-amz-apigw-id: VM_XAGhoIAMFqoQ=\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026lt; x-mycompany-func-reply: hello-handler\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026lt; x-amzn-trace-id: Root=1-5c6845c6-920cfc7da3cfd94f3e644647;Sampled=0\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026lt;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * Connection #0 to host r8efasfb26.execute-api.us-east-1.amazonaws.com left intact\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# {\u0026#34;message\u0026#34;:\u0026#34;Go Serverless v1.0! Your function executed successfully!\u0026#34;}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cp\u003eIf you ask me that was a lot of effort to handle without automation, maybe AWS SAM or the serverless framework can make things easier and let you focus on your application rather than the boilerplate required for it to run.\u003c/p\u003e\n\n\u003ch3 id=\"clean-up\"\u003eClean up\u003c/h3\u003e\n\n\u003cp\u003eAlways remember to clean up and delete everything that you created (to avoid surprises and save money), in this article I will leave that as an exercise for the reader :)\u003c/p\u003e\n\n\u003ch3 id=\"errata\"\u003eErrata\u003c/h3\u003e\n\n\u003cp\u003eIf you spot any error or have any suggestion, please send me a message so it gets fixed.\u003c/p\u003e\n\n\u003cp\u003eAlso, you can check the source code and changes in the \u003ca href=\"https://github.com/kainlite/kainlite.github.io\"\u003egenerated code\u003c/a\u003e and the \u003ca href=\"https://github.com/kainlite/blog\"\u003esources here\u003c/a\u003e\u003c/p\u003e\n"
    }, 
    {
      "id": "https://techsquad.rocks/blog/what_does_the_serverless_framework_does_for_me/",
      "url": "https://techsquad.rocks/blog/what_does_the_serverless_framework_does_for_me/",
      "title": "What does the serverless framework does for me",
      "date_published": "2019-02-15T00:00:00Z",
      "tags": ["development","serverless","go"],
      "content_html": "\n\n\u003ch3 id=\"introduction\"\u003e\u003cstrong\u003eIntroduction\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://serverless.com/\"\u003eserverless framework\u003c/a\u003e is a nice tool to manage all your cloud functions. from their page:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe Serverless Framework helps you develop and deploy your AWS Lambda functions, along with the AWS infrastructure resources they require. It\u0026rsquo;s a CLI that offers structure, automation and best practices out-of-the-box, allowing you to focus on building sophisticated, event-driven, serverless architectures, comprised of Functions and Events.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3 id=\"let-s-take-the-golang-example-for-a-spin\"\u003e\u003cstrong\u003eLet\u0026rsquo;s take the golang example for a spin\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cp\u003eSo let\u0026rsquo;s generate a project with the serverless framework and see everything that it does for us.\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003emkdir foo \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e cd \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$_\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e  serverless create -t aws-go\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Generating boilerplate...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#  _______                             __\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# |   _   .-----.----.--.--.-----.----|  .-----.-----.-----.\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# |   |___|  -__|   _|  |  |  -__|   _|  |  -__|__ --|__ --|\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# |____   |_____|__|  \\___/|_____|__| |__|_____|_____|_____|\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# |   |   |             The Serverless Application Framework\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# |       |                           serverless.com, v1.36.1\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#  -------\u0026#39;\u003c/span\u003e\n#\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Successfully generated boilerplate for template: \u0026#34;aws-go\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: NOTE: Please update the \u0026#34;service\u0026#34; property in serverless.yml with your service name\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nGot you a bit of command line fu right there with the \u0026ldquo;$_\u0026rdquo; (it means the first parameter of the previous command)\u003c/p\u003e\n\n\u003cp\u003eOkay all peachy but what just happened? We initialized a serverless framework project with the template aws-go (as you probably figured by now) the serverless framework can handle different languages and cloud providers, in this example we picked aws and go (there is another template for go called aws-go-dep which as the name indicates uses dep to manage dependencies), enough talking.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eLet\u0026rsquo;s take a look at the files\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003etree .\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# ├── hello\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# │   └── main.go\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# ├── Makefile\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# ├── serverless.yml\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# └── world\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     └── main.go\u003c/span\u003e\n#\n\u003cspan style=\"color:#75715e\"\u003e# 2 directories, 4 files\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nWe got a manifest \u003ccode\u003eserverless.yml\u003c/code\u003e a \u003ccode\u003eMakefile\u003c/code\u003e (which you can use to build your functions (to validate syntax errors for instance or run in test mode before pushing them to AWS, it will also be used to build them while deploying)\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eThe manifest file indicates a lot of things, I will add comments to the \u003cem\u003ecode\u003c/em\u003e\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eframeworkVersion: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026gt;=1.28.0 \u0026lt;2.0.0\u0026#34;\u003c/span\u003e\n\nprovider:\n  name: aws\n  runtime: go1.x\n\n\u003cspan style=\"color:#75715e\"\u003e# Which files needs to be included and which to be ignored\u003c/span\u003e\npackage:\n exclude:\n   - ./**\n include:\n   - ./bin/**\n\n\u003cspan style=\"color:#75715e\"\u003e# The functions and the handlers (the actual function definition in the code), and events which then will be translated into API Gateway endpoints for your functions\u003c/span\u003e\nfunctions:\n  hello:\n    handler: bin/hello\n    events:\n      - http:\n          path: hello\n          method: get\n  world:\n    handler: bin/world\n    events:\n      - http:\n          path: world\n          method: get\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eLet\u0026rsquo;s take a look at the hello function / file\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003epackage main\n\nimport \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;bytes\u0026#34;\u003c/span\u003e\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;context\u0026#34;\u003c/span\u003e\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;encoding/json\u0026#34;\u003c/span\u003e\n\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;github.com/aws/aws-lambda-go/events\u0026#34;\u003c/span\u003e\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;github.com/aws/aws-lambda-go/lambda\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\n// Response is of type APIGatewayProxyResponse since we\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e\u0026#39;\u003c/span\u003ere leveraging the\n// AWS Lambda Proxy Request functionality \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003edefault behavior\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n//\n// https://serverless.com/framework/docs/providers/aws/events/apigateway/#lambda-proxy-integration\ntype Response events.APIGatewayProxyResponse\n\n// Handler is our lambda handler invoked by the \u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003elambda.Start\u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e call\nfunc Handler\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003ectx context.Context\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eResponse, error\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n    var buf bytes.Buffer\n\n    body, err :\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e json.Marshal\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003emap\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003estring\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003einterface\u003cspan style=\"color:#f92672\"\u003e{}{\u003c/span\u003e\n        \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;message\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Go Serverless v1.0! Your function executed successfully!\u0026#34;\u003c/span\u003e,\n    \u003cspan style=\"color:#f92672\"\u003e})\u003c/span\u003e\n    \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e err !\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e nil \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n        \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e Response\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003eStatusCode: \u003cspan style=\"color:#ae81ff\"\u003e404\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e, err\n    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n    json.HTMLEscape\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u0026amp;buf, body\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\n    resp :\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e Response\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n        StatusCode:      \u003cspan style=\"color:#ae81ff\"\u003e200\u003c/span\u003e,\n        IsBase64Encoded: false,\n        Body:            buf.String\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e,\n        Headers: map\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003estring\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003estring\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n            \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Content-Type\u0026#34;\u003c/span\u003e:           \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;application/json\u0026#34;\u003c/span\u003e,\n            \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;X-MyCompany-Func-Reply\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;hello-handler\u0026#34;\u003c/span\u003e,\n        \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\n    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\n    \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e resp, nil\n\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\nfunc main\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n    lambda.Start\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eHandler\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nThis function only returns some text with some headers, every lambda function requires the lambda.Start with your function name as an entrypoint, in this case Handler, the context is usually used to pass data between calls or functions. The rest of the code is pretty straight forward go code, it builds a json object and returns it along with some headers.\u003c/p\u003e\n\n\u003ch5 id=\"let-s-deploy-it\"\u003e\u003cstrong\u003eLet\u0026rsquo;s deploy it\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eserverless deploy\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: WARNING: Missing \u0026#34;tenant\u0026#34; and \u0026#34;app\u0026#34; properties in serverless.yml. Without these properties, you can not publish the service to the Serverless Platform.\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Packaging service...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Excluding development dependencies...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Uploading CloudFormation file to S3...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Uploading artifacts...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Uploading service .zip file to S3 (10.88 MB)...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Validating template...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Updating Stack...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Checking Stack update progress...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# ............\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Stack update finished...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Service Information\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# service: aws-go\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# stage: dev\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# region: us-east-1\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# stack: aws-go-dev\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# api keys:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#   None\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# endpoints:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#   GET - https://cfr9zyw3r1.execute-api.us-east-1.amazonaws.com/dev/hello\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#   GET - https://cfr9zyw3r1.execute-api.us-east-1.amazonaws.com/dev/world\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# functions:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#   hello: aws-go-dev-hello\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#   world: aws-go-dev-world\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# layers:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#   None\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nSo a lot happened here, the deploy function compiled our binary, packaged it, uploaded that package to s3, created a cloudformation stack and after everything was completed, returned the endpoints that were defined, as you can see the framework enabled us to create and deploy a function (two actually) really easily which totally simplifies the process of managing functions and events.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eAnd test it\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ecurl -v https://cfr9zyw3r1.execute-api.us-east-1.amazonaws.com/dev/hello\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# *   Trying 99.84.27.2...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * TCP_NODELAY set\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * Connected to cfr9zyw3r1.execute-api.us-east-1.amazonaws.com (99.84.27.2) port 443 (#0)\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * ALPN, offering h2\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * ALPN, offering http/1.1\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * successfully set certificate verify locations:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# *   CAfile: /etc/ssl/certs/ca-certificates.crt\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#   CApath: none\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * TLSv1.3 (OUT), TLS handshake, Client hello (1):\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * TLSv1.3 (IN), TLS handshake, Server hello (2):\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * TLSv1.2 (IN), TLS handshake, Certificate (11):\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * TLSv1.2 (IN), TLS handshake, Server key exchange (12):\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * TLSv1.2 (IN), TLS handshake, Server finished (14):\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * TLSv1.2 (OUT), TLS handshake, Client key exchange (16):\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * TLSv1.2 (OUT), TLS change cipher, Change cipher spec (1):\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * TLSv1.2 (OUT), TLS handshake, Finished (20):\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * TLSv1.2 (IN), TLS handshake, Finished (20):\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * SSL connection using TLSv1.2 / ECDHE-RSA-AES128-GCM-SHA256\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * ALPN, server accepted to use h2\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * Server certificate:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# *  subject: CN=*.execute-api.us-east-1.amazonaws.com\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# *  start date: Oct  9 00:00:00 2018 GMT\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# *  expire date: Oct  9 12:00:00 2019 GMT\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# *  subjectAltName: host \u0026#34;cfr9zyw3r1.execute-api.us-east-1.amazonaws.com\u0026#34; matched cert\u0026#39;s \u0026#34;*.execute-api.us-east-1.amazonaws.com\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# *  issuer: C=US; O=Amazon; OU=Server CA 1B; CN=Amazon\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# *  SSL certificate verify ok.\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * Using HTTP2, server supports multi-use\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * Connection state changed (HTTP/2 confirmed)\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * Using Stream ID: 1 (easy handle 0x55944b9d7db0)\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026gt; GET /dev/hello HTTP/2\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026gt; Host: cfr9zyw3r1.execute-api.us-east-1.amazonaws.com\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026gt; User-Agent: curl/7.63.0\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026gt; Accept: */*\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026gt;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * Connection state changed (MAX_CONCURRENT_STREAMS == 128)!\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026lt; HTTP/2 200\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026lt; content-type: application/json\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026lt; content-length: 70\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026lt; date: Sat, 16 Feb 2019 04:32:04 GMT\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026lt; x-amzn-requestid: cf4c6094-31a3-11e9-b61e-bb2138b2f390\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026lt; x-amz-apigw-id: VLPKmHj4oAMFbbw=\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026lt; x-mycompany-func-reply: hello-handler\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026lt; x-amzn-trace-id: Root=1-5c679243-d4f945debb1a2b675c41675f;Sampled=0\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026lt; x-cache: Miss from cloudfront\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026lt; via: 1.1 655473215401ef909f449b92f216caa1.cloudfront.net (CloudFront)\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026lt; x-amz-cf-id: LOHG0oG-WbGKpTnlGz-VDVqb9DxXQX-kgJJEUkchh1v_zLfUqNCpEQ==\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026lt;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# * Connection #0 to host cfr9zyw3r1.execute-api.us-east-1.amazonaws.com left intact\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# {\u0026#34;message\u0026#34;:\u0026#34;Go Serverless v1.0! Your function executed successfully!\u0026#34;}%\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nAs expected we can see the headers x-my-company-func-reply and the json object that it created for us.\u003c/p\u003e\n\n\u003ch3 id=\"cleanup\"\u003e\u003cstrong\u003eCleanup\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cp\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eserverless remove\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: WARNING: Missing \u0026#34;tenant\u0026#34; and \u0026#34;app\u0026#34; properties in serverless.yml. Without these properties, you can not publish the service to the Serverless Platform.\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Getting all objects in S3 bucket...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Removing objects in S3 bucket...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Removing Stack...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Checking Stack removal progress...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# ...............\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Stack removal finished...\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nThis will as you expect remove everything that was created with the deploy command.\u003c/p\u003e\n\n\u003cp\u003eIn the next article we will explore how to do create and deploy a function like this one by hand.\u003c/p\u003e\n\n\u003ch3 id=\"errata\"\u003eErrata\u003c/h3\u003e\n\n\u003cp\u003eIf you spot any error or have any suggestion, please send me a message so it gets fixed.\u003c/p\u003e\n\n\u003cp\u003eAlso, you can check the source code and changes in the \u003ca href=\"https://github.com/kainlite/kainlite.github.io\"\u003egenerated code\u003c/a\u003e and the \u003ca href=\"https://github.com/kainlite/blog\"\u003esources here\u003c/a\u003e\u003c/p\u003e\n"
    }, 
    {
      "id": "https://techsquad.rocks/blog/sending_emails_with_lambda_and_ses/",
      "url": "https://techsquad.rocks/blog/sending_emails_with_lambda_and_ses/",
      "title": "Sending emails with AWS Lambda and SES from a HTML form",
      "date_published": "2019-02-03T00:00:00Z",
      "tags": ["go","development","serverless","linux"],
      "content_html": "\n\n\u003ch5 id=\"serverless-series\"\u003e\u003cstrong\u003eServerless series\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003ePart I: \u003ca href=\"https://techsquad.rocks/blog/serving_static_sites_with_s3_and_cloudfront/\"\u003eServing static websites with s3 and cloudfront\u003c/a\u003e, so refer to that one before starting this one if you want to know how did we get here.\u003c/p\u003e\n\n\u003cp\u003ePart II: \u003ca href=\"https://techsquad.rocks/blog/sending_emails_with_lambda_and_ses/\"\u003eSending emails with AWS Lambda and SES from a HTML form\u003c/a\u003e, \u003cstrong\u003eYou are here\u003c/strong\u003e.\u003c/p\u003e\n\n\u003ch5 id=\"introduction\"\u003e\u003cstrong\u003eIntroduction\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eThis article is part of the serverless series, in this article we will see how to create a serverless function in AWS Lambda to send an email coming from the HTML form in the site the source code can be \u003ca href=\"https://github.com/kainlite/aws-serverless-go-ses-example\"\u003efound here\u003c/a\u003e, that is the go version but if you prefer node you can use \u003ca href=\"https://github.com/kainlite/aws-serverless-nodejs-ses-example\"\u003ethis one\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch5 id=\"serverless-framework\"\u003e\u003cstrong\u003eServerless framework\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003e\u003cstrong\u003eAs usual I will be using the serverless framework to manage our functions, create the project\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003emkdir techsquad-functions \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e cd techsquad-functions \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e serverless create -t aws-go\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Generating boilerplate...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#  _______                             __\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# |   _   .-----.----.--.--.-----.----|  .-----.-----.-----.\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# |   |___|  -__|   _|  |  |  -__|   _|  |  -__|__ --|__ --|\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# |____   |_____|__|  \\___/|_____|__| |__|_____|_____|_____|\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# |   |   |             The Serverless Application Framework\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# |       |                           serverless.com, v1.36.1\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#  -------\u0026#39;\u003c/span\u003e\n#\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Successfully generated boilerplate for template: \u0026#34;aws-go\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: NOTE: Please update the \u0026#34;service\u0026#34; property in serverless.yml with your service name\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cp\u003eAfter creating the project we can update the serverless manifest as follow:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eservice: sendMail\n\nframeworkVersion: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026gt;=1.28.0 \u0026lt;2.0.0\u0026#34;\u003c/span\u003e\n\nprovider:\n  name: aws\n  runtime: go1.x\n  region: us-east-1\n  memorySize: \u003cspan style=\"color:#ae81ff\"\u003e128\u003c/span\u003e\n  versionFunctions: false\n  stage: \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;prod\u0026#39;\u003c/span\u003e\n\n  iamRoleStatements:\n    - Effect: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Allow\u0026#34;\u003c/span\u003e\n      Action:\n        - \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;ses:*\u0026#34;\u003c/span\u003e\n        - \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;lambda:*\u0026#34;\u003c/span\u003e\n      Resource:\n        - \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;*\u0026#34;\u003c/span\u003e\n\npackage:\n exclude:\n   - ./**\n include:\n   - ./send_mail/send_mail\n\nfunctions:\n  send_mail:\n    handler: send_mail/send_mail\n    events:\n      - http:\n          path: sendMail\n          method: post\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nThe interesting parts here are the IAM permissions and the function send_mail, the rest is pretty much standard, we define a function and the event HTTP POST for the API Gateway, where our executable can be found and we also request permissions to send emails via SES.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eDeploy the function\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003emake deploy\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# rm -rf ./send_mail/send_mail\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# env GOOS=linux go build -ldflags=\u0026#34;-s -w\u0026#34; -o send_mail/send_mail send_mail/main.go\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# sls deploy --verbose\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: WARNING: Missing \u0026#34;tenant\u0026#34; and \u0026#34;app\u0026#34; properties in serverless.yml. Without these properties, you can not publish the service to the Serverless Platform.\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Packaging service...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Excluding development dependencies...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Uploading CloudFormation file to S3...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Uploading artifacts...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Uploading service .zip file to S3 (7.31 MB)...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Validating template...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Updating Stack...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Checking Stack update progress...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# CloudFormation - UPDATE_IN_PROGRESS - AWS::CloudFormation::Stack - sendMail-prod\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# CloudFormation - UPDATE_IN_PROGRESS - AWS::Lambda::Function - SendUnderscoremailLambdaFunction\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# CloudFormation - UPDATE_COMPLETE - AWS::Lambda::Function - SendUnderscoremailLambdaFunction\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# CloudFormation - CREATE_IN_PROGRESS - AWS::ApiGateway::Deployment - ApiGatewayDeployment1549246566486\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# CloudFormation - CREATE_IN_PROGRESS - AWS::ApiGateway::Deployment - ApiGatewayDeployment1549246566486\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# CloudFormation - CREATE_COMPLETE - AWS::ApiGateway::Deployment - ApiGatewayDeployment1549246566486\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# CloudFormation - UPDATE_COMPLETE_CLEANUP_IN_PROGRESS - AWS::CloudFormation::Stack - sendMail-prod\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# CloudFormation - DELETE_IN_PROGRESS - AWS::ApiGateway::Deployment - ApiGatewayDeployment1549246013644\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# CloudFormation - DELETE_COMPLETE - AWS::ApiGateway::Deployment - ApiGatewayDeployment1549246013644\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# CloudFormation - UPDATE_COMPLETE - AWS::CloudFormation::Stack - sendMail-prod\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Stack update finished...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Service Information\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# service: sendMail\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# stage: prod\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# region: us-east-1\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# stack: sendMail-prod\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# api keys:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#   None\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# endpoints:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#   POST - https://m8ebtlirjg.execute-api.us-east-1.amazonaws.com/prod/sendMail\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# functions:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#   send_mail: sendMail-prod-send_mail\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# layers:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#   None\u003c/span\u003e\n#\n\u003cspan style=\"color:#75715e\"\u003e# Stack Outputs\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# ServiceEndpoint: https://m8ebtlirjg.execute-api.us-east-1.amazonaws.com/prod\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# ServerlessDeploymentBucketName: sendmail-prod-serverlessdeploymentbucket-1vbmb6gwt8559\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nEverything looks right, so what\u0026rsquo;s next? the source code.\u003c/p\u003e\n\n\u003ch5 id=\"lambda\"\u003e\u003cstrong\u003eLambda\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eThis is basically the full source code for this function, as you will see it\u0026rsquo;s really simple:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"color:#f92672\"\u003epackage\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e\n\n\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e (\n\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;context\u0026#34;\u003c/span\u003e\n\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;encoding/json\u0026#34;\u003c/span\u003e\n\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\n\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;github.com/aws/aws-lambda-go/events\u0026#34;\u003c/span\u003e\n\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;github.com/aws/aws-lambda-go/lambda\u0026#34;\u003c/span\u003e\n\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;github.com/aws/aws-sdk-go/aws\u0026#34;\u003c/span\u003e\n\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;github.com/aws/aws-sdk-go/aws/awserr\u0026#34;\u003c/span\u003e\n\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;github.com/aws/aws-sdk-go/aws/session\u0026#34;\u003c/span\u003e\n\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;github.com/aws/aws-sdk-go/service/ses\u0026#34;\u003c/span\u003e\n)\n\n\u003cspan style=\"color:#66d9ef\"\u003etype\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eResponse\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eevents\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eAPIGatewayProxyResponse\u003c/span\u003e\n\n\u003cspan style=\"color:#66d9ef\"\u003etype\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eRequestData\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estruct\u003c/span\u003e {\n\t\u003cspan style=\"color:#a6e22e\"\u003eEmail\u003c/span\u003e   \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e\n\t\u003cspan style=\"color:#a6e22e\"\u003eMessage\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e\n}\n\n\u003cspan style=\"color:#75715e\"\u003e// This could be env vars\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003econst\u003c/span\u003e (\n\t\u003cspan style=\"color:#a6e22e\"\u003eSender\u003c/span\u003e    = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;web@serverless.techsquad.rocks\u0026#34;\u003c/span\u003e\n\t\u003cspan style=\"color:#a6e22e\"\u003eRecipient\u003c/span\u003e = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;kainlite@gmail.com\u0026#34;\u003c/span\u003e\n\t\u003cspan style=\"color:#a6e22e\"\u003eCharSet\u003c/span\u003e   = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;UTF-8\u0026#34;\u003c/span\u003e\n)\n\n\u003cspan style=\"color:#66d9ef\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eHandler\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ectx\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003econtext\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eContext\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003erequest\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eevents\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eAPIGatewayProxyRequest\u003c/span\u003e) (\u003cspan style=\"color:#a6e22e\"\u003eResponse\u003c/span\u003e, \u003cspan style=\"color:#66d9ef\"\u003eerror\u003c/span\u003e) {\n\t\u003cspan style=\"color:#a6e22e\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ePrintf\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Request: %+v\\n\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003erequest\u003c/span\u003e)\n\n\t\u003cspan style=\"color:#a6e22e\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ePrintf\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Processing request data for request %s.\\n\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003erequest\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eRequestContext\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eRequestID\u003c/span\u003e)\n\t\u003cspan style=\"color:#a6e22e\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ePrintf\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Body size = %d.\\n\u0026#34;\u003c/span\u003e, len(\u003cspan style=\"color:#a6e22e\"\u003erequest\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eBody\u003c/span\u003e))\n\n\t\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003erequestData\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eRequestData\u003c/span\u003e\n\t\u003cspan style=\"color:#a6e22e\"\u003ejson\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eUnmarshal\u003c/span\u003e([]byte(\u003cspan style=\"color:#a6e22e\"\u003erequest\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eBody\u003c/span\u003e), \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003erequestData\u003c/span\u003e)\n\n\t\u003cspan style=\"color:#a6e22e\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ePrintf\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;RequestData: %+v\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003erequestData\u003c/span\u003e)\n\t\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eresult\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e\n\t\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e len(\u003cspan style=\"color:#a6e22e\"\u003erequestData\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eEmail\u003c/span\u003e) \u0026gt; \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e len(\u003cspan style=\"color:#a6e22e\"\u003erequestData\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eMessage\u003c/span\u003e) \u0026gt; \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e {\n\t\t\u003cspan style=\"color:#a6e22e\"\u003eresult\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003e_\u003c/span\u003e = \u003cspan style=\"color:#a6e22e\"\u003esend\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003erequestData\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eEmail\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003erequestData\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eMessage\u003c/span\u003e)\n\t}\n\n\t\u003cspan style=\"color:#a6e22e\"\u003eresp\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eResponse\u003c/span\u003e{\n\t\t\u003cspan style=\"color:#a6e22e\"\u003eStatusCode\u003c/span\u003e:      \u003cspan style=\"color:#ae81ff\"\u003e200\u003c/span\u003e,\n\t\t\u003cspan style=\"color:#a6e22e\"\u003eIsBase64Encoded\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003efalse\u003c/span\u003e,\n\t\t\u003cspan style=\"color:#a6e22e\"\u003eBody\u003c/span\u003e:            \u003cspan style=\"color:#a6e22e\"\u003eresult\u003c/span\u003e,\n\t\t\u003cspan style=\"color:#a6e22e\"\u003eHeaders\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003emap\u003c/span\u003e[\u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e]\u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e{\n\t\t\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Content-Type\u0026#34;\u003c/span\u003e:           \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;application/json\u0026#34;\u003c/span\u003e,\n\t\t\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;X-MyCompany-Func-Reply\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;send-mail-handler\u0026#34;\u003c/span\u003e,\n\t\t},\n\t}\n\n\t\u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eresp\u003c/span\u003e, \u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e\n}\n\n\u003cspan style=\"color:#66d9ef\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esend\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eEmail\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eMessage\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e) (\u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e, \u003cspan style=\"color:#66d9ef\"\u003eerror\u003c/span\u003e) {\n\t\u003cspan style=\"color:#75715e\"\u003e// This could be an env var\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\u003cspan style=\"color:#a6e22e\"\u003esess\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esession\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eNewSession\u003c/span\u003e(\u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eaws\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eConfig\u003c/span\u003e{\n\t\t\u003cspan style=\"color:#a6e22e\"\u003eRegion\u003c/span\u003e: \u003cspan style=\"color:#a6e22e\"\u003eaws\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eString\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;us-east-1\u0026#34;\u003c/span\u003e)},\n\t)\n\n\t\u003cspan style=\"color:#75715e\"\u003e// Create an SES session.\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\u003cspan style=\"color:#a6e22e\"\u003esvc\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eses\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eNew\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003esess\u003c/span\u003e)\n\n\t\u003cspan style=\"color:#75715e\"\u003e// Assemble the email.\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\u003cspan style=\"color:#a6e22e\"\u003einput\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eses\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eSendEmailInput\u003c/span\u003e{\n\t\t\u003cspan style=\"color:#a6e22e\"\u003eDestination\u003c/span\u003e: \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eses\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eDestination\u003c/span\u003e{\n\t\t\t\u003cspan style=\"color:#a6e22e\"\u003eCcAddresses\u003c/span\u003e: []\u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e{},\n\t\t\t\u003cspan style=\"color:#a6e22e\"\u003eToAddresses\u003c/span\u003e: []\u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e{\n\t\t\t\t\u003cspan style=\"color:#a6e22e\"\u003eaws\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eString\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eRecipient\u003c/span\u003e),\n\t\t\t},\n\t\t},\n\t\t\u003cspan style=\"color:#a6e22e\"\u003eMessage\u003c/span\u003e: \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eses\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eMessage\u003c/span\u003e{\n\t\t\t\u003cspan style=\"color:#a6e22e\"\u003eBody\u003c/span\u003e: \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eses\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eBody\u003c/span\u003e{\n\t\t\t\t\u003cspan style=\"color:#a6e22e\"\u003eHtml\u003c/span\u003e: \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eses\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eContent\u003c/span\u003e{\n\t\t\t\t\t\u003cspan style=\"color:#a6e22e\"\u003eCharset\u003c/span\u003e: \u003cspan style=\"color:#a6e22e\"\u003eaws\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eString\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eCharSet\u003c/span\u003e),\n\t\t\t\t\t\u003cspan style=\"color:#a6e22e\"\u003eData\u003c/span\u003e:    \u003cspan style=\"color:#a6e22e\"\u003eaws\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eString\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eMessage\u003c/span\u003e),\n\t\t\t\t},\n\t\t\t\t\u003cspan style=\"color:#a6e22e\"\u003eText\u003c/span\u003e: \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eses\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eContent\u003c/span\u003e{\n\t\t\t\t\t\u003cspan style=\"color:#a6e22e\"\u003eCharset\u003c/span\u003e: \u003cspan style=\"color:#a6e22e\"\u003eaws\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eString\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eCharSet\u003c/span\u003e),\n\t\t\t\t\t\u003cspan style=\"color:#a6e22e\"\u003eData\u003c/span\u003e:    \u003cspan style=\"color:#a6e22e\"\u003eaws\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eString\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eMessage\u003c/span\u003e),\n\t\t\t\t},\n\t\t\t},\n\t\t\t\u003cspan style=\"color:#a6e22e\"\u003eSubject\u003c/span\u003e: \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eses\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eContent\u003c/span\u003e{\n\t\t\t\t\u003cspan style=\"color:#a6e22e\"\u003eCharset\u003c/span\u003e: \u003cspan style=\"color:#a6e22e\"\u003eaws\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eString\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eCharSet\u003c/span\u003e),\n\t\t\t\t\u003cspan style=\"color:#a6e22e\"\u003eData\u003c/span\u003e:    \u003cspan style=\"color:#a6e22e\"\u003eaws\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eString\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eEmail\u003c/span\u003e),\n\t\t\t},\n\t\t},\n\t\t\u003cspan style=\"color:#75715e\"\u003e// We are using the same sender because it needs to be validated in SES.\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\t\u003cspan style=\"color:#a6e22e\"\u003eSource\u003c/span\u003e: \u003cspan style=\"color:#a6e22e\"\u003eaws\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eString\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eSender\u003c/span\u003e),\n\n\t\t\u003cspan style=\"color:#75715e\"\u003e// Uncomment to use a configuration set\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\t\u003cspan style=\"color:#75715e\"\u003e//ConfigurationSetName: aws.String(ConfigurationSet),\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t}\n\n\t\u003cspan style=\"color:#75715e\"\u003e// Attempt to send the email.\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\u003cspan style=\"color:#a6e22e\"\u003eresult\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esvc\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eSendEmail\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003einput\u003c/span\u003e)\n\n\t\u003cspan style=\"color:#75715e\"\u003e// Display error messages if they occur.\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e!=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e {\n\t\t\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eaerr\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eok\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e.(\u003cspan style=\"color:#a6e22e\"\u003eawserr\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eError\u003c/span\u003e); \u003cspan style=\"color:#a6e22e\"\u003eok\u003c/span\u003e {\n\t\t\t\u003cspan style=\"color:#66d9ef\"\u003eswitch\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eaerr\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eCode\u003c/span\u003e() {\n\t\t\t\u003cspan style=\"color:#66d9ef\"\u003ecase\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eses\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eErrCodeMessageRejected\u003c/span\u003e:\n\t\t\t\t\u003cspan style=\"color:#a6e22e\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eses\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eErrCodeMessageRejected\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eaerr\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eError\u003c/span\u003e())\n\t\t\t\u003cspan style=\"color:#66d9ef\"\u003ecase\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eses\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eErrCodeMailFromDomainNotVerifiedException\u003c/span\u003e:\n\t\t\t\t\u003cspan style=\"color:#a6e22e\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eses\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eErrCodeMailFromDomainNotVerifiedException\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eaerr\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eError\u003c/span\u003e())\n\t\t\t\u003cspan style=\"color:#66d9ef\"\u003ecase\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eses\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eErrCodeConfigurationSetDoesNotExistException\u003c/span\u003e:\n\t\t\t\t\u003cspan style=\"color:#a6e22e\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eses\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eErrCodeConfigurationSetDoesNotExistException\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eaerr\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eError\u003c/span\u003e())\n\t\t\t\u003cspan style=\"color:#66d9ef\"\u003edefault\u003c/span\u003e:\n\t\t\t\t\u003cspan style=\"color:#a6e22e\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eaerr\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eError\u003c/span\u003e())\n\t\t\t}\n\t\t} \u003cspan style=\"color:#66d9ef\"\u003eelse\u003c/span\u003e {\n\t\t\t\u003cspan style=\"color:#75715e\"\u003e// Print the error, cast err to awserr.Error to get the Code and\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\t\t\u003cspan style=\"color:#75715e\"\u003e// Message from an error.\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\t\t\u003cspan style=\"color:#a6e22e\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eError\u003c/span\u003e())\n\t\t}\n\n\t\t\u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;there was an unexpected error\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e\n\t}\n\n\t\u003cspan style=\"color:#a6e22e\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Email Sent to address: \u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eRecipient\u003c/span\u003e)\n\t\u003cspan style=\"color:#a6e22e\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eresult\u003c/span\u003e)\n\t\u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;sent!\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e\n}\n\n\u003cspan style=\"color:#66d9ef\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e() {\n\t\u003cspan style=\"color:#a6e22e\"\u003elambda\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eStart\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eHandler\u003c/span\u003e)\n}\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nThe code is pretty much straight forward it only expects 2 parameters and it will send an email and return sent! if everything went well. You can debug and compile your function before uploading by issuing the command \u003ccode\u003emake\u003c/code\u003e (This is really useful), and if you use \u003ccode\u003emake deploy\u003c/code\u003e you will save lots of time by only deploying working files.\u003c/p\u003e\n\n\u003ch5 id=\"ses\"\u003e\u003cstrong\u003eSES\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eFor this to work you will need to verify/validate your domain in SES.\u003c/p\u003e\n\n\u003cp\u003eGo to \u003ccode\u003eSES-\u0026gt;Domains-\u0026gt;Verify a New Domain\u003c/code\u003e.\n\u003cfigure\u003e\n    \u003cimg src=\"/img/aws-ses-validate-domain.png\" width=\"100%\"/\u003e \n\u003c/figure\u003e\n\u003c/p\u003e\n\n\u003cp\u003eAfter putting your domain in, you will see something like this:\n\u003cfigure\u003e\n    \u003cimg src=\"/img/aws-ses-validation-and-dkim.png\" width=\"100%\"/\u003e \n\u003c/figure\u003e\n\u003c/p\u003e\n\n\u003cp\u003eAs I don\u0026rsquo;t have this domain in Route53 I don\u0026rsquo;t have a button to add the records to it (which makes everything simpler and faster), but it\u0026rsquo;s easy enough just create a few dns records and wait a few minutes until you get something like this:\n\u003cfigure\u003e\n    \u003cimg src=\"/img/aws-ses-validation-ok.png\" width=\"100%\"/\u003e \n\u003c/figure\u003e\n\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eAfter that just test it\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eserverless invoke -f send_mail -d \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;{ \u0026#34;Email\u0026#34;: \u0026#34;kainlite@gmail.com\u0026#34;, \u0026#34;Message\u0026#34;: \u0026#34;test\u0026#34; }\u0026#39;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;statusCode\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e200\u003c/span\u003e,\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;headers\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n        \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Content-Type\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;application/json\u0026#34;\u003c/span\u003e,\n        \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;X-MyCompany-Func-Reply\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;send-mail-handler\u0026#34;\u003c/span\u003e\n    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;body\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nAfter hitting enter the message popped up right away in my inbox :).\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eAnother option is to use \u003ca href=\"https://devhints.io/httpie\"\u003ehttpie\u003c/a\u003e\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eecho \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;{ \u0026#34;email\u0026#34;: \u0026#34;kainlite@gmail.com\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;test2\u0026#34; }\u0026#39;\u003c/span\u003e | http https://m8ebtlirjg.execute-api.us-east-1.amazonaws.com/prod/sendMail\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# HTTP/1.1 200 OK\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Access-Control-Allow-Origin: *\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Connection: keep-alive\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Content-Length: 32\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Content-Type: application/json\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Date: Sun, 03 Feb 2019 02:24:25 GMT\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Via: 1.1 3421ea0c15d4fdc0bcb792131861cb1f.cloudfront.net (CloudFront)\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# X-Amz-Cf-Id: kGK4R9kTpcWjZap8aeyPu0vdiCtpQ4gnhCAtCeeA6OJufzaTDL__0w==\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# X-Amzn-Trace-Id: Root=1-5c5650d9-7c3c8fcc5e303ca480739560;Sampled=0\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# X-Cache: Miss from cloudfront\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# x-amz-apigw-id: UgGR7FlWIAMF75Q=\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# x-amzn-RequestId: d2f45b14-275a-11e9-a8f3-47d675eed13e\u003c/span\u003e\n#\n\u003cspan style=\"color:#75715e\"\u003e# sent!\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eOR \u003ca href=\"https://devhints.io/curl\"\u003ecurl\u003c/a\u003e\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ecurl -i -X POST https://m8ebtlirjg.execute-api.us-east-1.amazonaws.com/prod/sendMail -d \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;{ \u0026#34;email\u0026#34;: \u0026#34;kainlite@gmail.com\u0026#34;, \u0026#34;message\u0026#34;: \u0026#34;test3\u0026#34; }\u0026#39;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# HTTP/2 200\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# content-type: application/json\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# content-length: 32\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# date: Sun, 03 Feb 2019 02:28:04 GMT\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# x-amzn-requestid: 55cc72d0-275b-11e9-99bd-91c3fab78a2f\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# access-control-allow-origin: *\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# x-amz-apigw-id: UgG0OEigoAMF-Yg=\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# x-amzn-trace-id: Root=1-5c5651b4-fc5427b4798e14dc61fe161e;Sampled=0\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# x-cache: Miss from cloudfront\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# via: 1.1 2167e4d6cf81822217c1ea31b3d3ba7e.cloudfront.net (CloudFront)\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# x-amz-cf-id: FttmBoeUaSwQ2AArTgVmI5br51zwVMfUrVpXPLGm1HacV4yS9IYMHA==\u003c/span\u003e\n#\n\u003cspan style=\"color:#75715e\"\u003e# sent!\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cp\u003eAnd that\u0026rsquo;s all for now, see you in the next article.\u003c/p\u003e\n\n\u003ch3 id=\"errata\"\u003eErrata\u003c/h3\u003e\n\n\u003cp\u003eIf you spot any error or have any suggestion, please send me a message so it gets fixed.\u003c/p\u003e\n\n\u003cp\u003eAlso, you can check the source code and changes in the \u003ca href=\"https://github.com/kainlite/kainlite.github.io\"\u003egenerated code\u003c/a\u003e and the \u003ca href=\"https://github.com/kainlite/blog\"\u003esources here\u003c/a\u003e\u003c/p\u003e\n"
    }, 
    {
      "id": "https://techsquad.rocks/blog/serving_static_sites_with_s3_and_cloudfront/",
      "url": "https://techsquad.rocks/blog/serving_static_sites_with_s3_and_cloudfront/",
      "title": "Serve your static website with S3 and CloudFront",
      "date_published": "2019-02-02T00:00:00Z",
      "tags": ["elm","development","serverless","aws"],
      "content_html": "\n\n\u003ch3 id=\"serverless-series\"\u003e\u003cstrong\u003eServerless series\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cp\u003ePart I: \u003ca href=\"https://techsquad.rocks/blog/serving_static_sites_with_s3_and_cloudfront/\"\u003eServing static websites with s3 and cloudfront\u003c/a\u003e, \u003cstrong\u003eYou\u0026rsquo;re here\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003ePart II: \u003ca href=\"https://techsquad.rocks/blog/sending_emails_with_lambda_and_ses/\"\u003eSending emails with AWS Lambda and SES from a HTML form\u003c/a\u003e\u003c/p\u003e\n\n\u003ch5 id=\"introduction\"\u003e\u003cstrong\u003eIntroduction\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eThis article will be part of a series, the idea is to get a fully serverless site up and running with login functionality, maybe a profile page, and some random utility, but as we are just starting with it we will host our first draft of the page with a contact form, for the distribution of the files we will see how to configure CloudFront and for storing the files we will be using S3, S3 is an object storage service that offers industry leading scalability, data availability, security and performance, and CloudFront is a fast content delivery network (CDN). The site that we will be using were written using \u003ca href=\"https://elm-lang.org/\"\u003eelm\u003c/a\u003e and can be \u003ca href=\"https://github.com/kainlite/aws-serverless-s3-elm-example\"\u003efound here\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch5 id=\"s3\"\u003e\u003cstrong\u003eS3\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003e\u003cstrong\u003eFirst of all we need to create a bucket\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eaws s3api create-bucket --bucket techsquad-serverless-site --region us-east-1\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;Location\u0026#34;: \u0026#34;/techsquad-serverless-site\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# }\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nWe could serve directly from S3 but that can be expensive in a site with lots of traffic (You can do it by \u003ca href=\"https://docs.aws.amazon.com/cli/latest/reference/s3/website.html\"\u003eenabling web hosting in the bucket\u003c/a\u003e).\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eFor this setup to work we first need to create a cloud-front-origin-access-identity\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003eaws cloudfront create-cloud-front-origin-access-identity --cloud-front-origin-access-identity-config CallerReference=techsquad-serverless-site-cloudfront-origin,Comment=techsquad-serverless-site-cloudfront-origin\n{\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Location\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;https://cloudfront.amazonaws.com/2018-11-05/origin-access-identity/cloudfront/E3IJG9M5PO9BYE\u0026#34;\u003c/span\u003e,\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;ETag\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;E2XHDQQ0DDY9IJ\u0026#34;\u003c/span\u003e,\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;CloudFrontOriginAccessIdentity\u0026#34;\u003c/span\u003e: {\n        \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Id\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;E3IJG9M5PO9BYE\u0026#34;\u003c/span\u003e,\n        \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;S3CanonicalUserId\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;c951e48af14afcf935c2455a6d503150c80f20df93b27af9ed0928eb48feb67d1b933aa1adb7e1bf88a7aacccccccccc\u0026#34;\u003c/span\u003e,\n        \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;CloudFrontOriginAccessIdentityConfig\u0026#34;\u003c/span\u003e: {\n            \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;CallerReference\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;techsquad-serverless-site-cloudfront-origin\u0026#34;\u003c/span\u003e,\n            \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Comment\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;techsquad-serverless-site-cloudfront-origin\u0026#34;\u003c/span\u003e\n        }\n    }\n}\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nOur origin access identity was successfully created, we need to grab the S3CanonicalUserId for our S3 bucket policy.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eLimit access to your bucket with the following policy (save as bucket-policy.json)\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e{\n   \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Version\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;2012-10-17\u0026#34;\u003c/span\u003e,\n   \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Id\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;PolicyForCloudFrontPrivateContent\u0026#34;\u003c/span\u003e,\n   \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Statement\u0026#34;\u003c/span\u003e:[\n        {\n               \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Sid\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;techsquad-serverless-site-cloudfront-origin\u0026#34;\u003c/span\u003e,\n               \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Effect\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Allow\u0026#34;\u003c/span\u003e,\n               \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Principal\u0026#34;\u003c/span\u003e:{\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;CanonicalUser\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;c951e48af14afcf935c2455a6d503150c80f20df93b27af9ed0928eb48feb67d1b933aa1adb7e1bf88a7aacccccccccc\u0026#34;\u003c/span\u003e},\n               \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Action\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;s3:GetObject\u0026#34;\u003c/span\u003e,\n               \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Resource\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;arn:aws:s3:::techsquad-serverless-site/*\u0026#34;\u003c/span\u003e\n             }\n      ]\n}\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nThis policy will only allow CloudFront to fetch the files from the S3 bucket, because we want to avoid users or anyone actually from hitting the bucket directly.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eAnd then just attach that policy to the bucket\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eaws s3api put-bucket-policy --bucket techsquad-serverless-site --policy file://bucket-policy.json\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eI\u0026rsquo;m using an old example I created and probably will continue building upon it, copy the files (the source files are in \u003ca href=\"https://github.com/kainlite/aws-serverless-s3-elm-example\"\u003ethis github repo\u003c/a\u003e)\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eaws s3 sync . s3://techsquad-serverless-site/\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nSo far so good, We have our S3 bucket ready.\u003c/p\u003e\n\n\u003ch5 id=\"cloudfront\"\u003e\u003cstrong\u003eCloudFront\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eWe will use this file to create our CF distribution (save it as distconfig.json or generate it with \u003ccode\u003eaws cloudfront create-distribution --generate-cli-skeleton \u0026gt; /tmp/distconfig.json\u003c/code\u003e and then replace the values: Id, DomainName, TargetOriginId, and the cname in Aliases.Items):\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n  \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;CallerReference\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;techsquad-serverless-site-distribution\u0026#34;\u003c/span\u003e,\n  \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Aliases\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Quantity\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e,\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Items\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e\n      \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;serverless.techsquad.rocks\u0026#34;\u003c/span\u003e\n         \u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n   \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\n  \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;DefaultRootObject\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;index.html\u0026#34;\u003c/span\u003e,\n  \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Origins\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Quantity\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e,\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Items\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e\n      \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n        \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Id\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;techsquad-serverless-site-cloudfront\u0026#34;\u003c/span\u003e,\n        \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;DomainName\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;techsquad-serverless-site.s3.amazonaws.com\u0026#34;\u003c/span\u003e,\n        \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;S3OriginConfig\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n          \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;OriginAccessIdentity\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;origin-access-identity/cloudfront/E3IJG9M5PO9BYE\u0026#34;\u003c/span\u003e\n        \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n      \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n    \u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n  \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\n  \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;DefaultCacheBehavior\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;TargetOriginId\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;techsquad-serverless-site-cloudfront\u0026#34;\u003c/span\u003e,\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;ForwardedValues\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n      \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;QueryString\u0026#34;\u003c/span\u003e: true,\n      \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Cookies\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n        \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Forward\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;none\u0026#34;\u003c/span\u003e\n      \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;TrustedSigners\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n      \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Enabled\u0026#34;\u003c/span\u003e: false,\n      \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Quantity\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e\n    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;ViewerProtocolPolicy\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;allow-all\u0026#34;\u003c/span\u003e,\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;MinTTL\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e3600\u003c/span\u003e\n  \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\n  \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;CacheBehaviors\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Quantity\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e\n  \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\n  \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Comment\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e,\n  \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Logging\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Enabled\u0026#34;\u003c/span\u003e: false,\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;IncludeCookies\u0026#34;\u003c/span\u003e: true,\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Bucket\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e,\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Prefix\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\n  \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\n  \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;PriceClass\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;PriceClass_All\u0026#34;\u003c/span\u003e,\n  \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Enabled\u0026#34;\u003c/span\u003e: true\n\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nWe will leave most values in their defaults, but if you want to know more or customize your deployment \u003ca href=\"https://docs.aws.amazon.com/cli/latest/reference/cloudfront/create-distribution.html\"\u003echeck here\u003c/a\u003e or type \u003ccode\u003eaws cloudfront create-distribution help\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eLet\u0026rsquo;s finally create the CloudFront distribution for our site\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eaws cloudfront create-distribution --distribution-config file://distconfig.json\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;Location\u0026#34;: \u0026#34;https://cloudfront.amazonaws.com/2018-11-05/distribution/E1M22XXNIJ5BLN\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;ETag\u0026#34;: \u0026#34;EW1AZUQ33NKQ7\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;Distribution\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;Id\u0026#34;: \u0026#34;E1M22XXNIJ5BLN\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;ARN\u0026#34;: \u0026#34;arn:aws:cloudfront::894527626897:distribution/E1M22XXNIJ5BLN\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;Status\u0026#34;: \u0026#34;InProgress\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;LastModifiedTime\u0026#34;: \u0026#34;2019-02-02T19:35:45.729Z\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;InProgressInvalidationBatches\u0026#34;: 0,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;DomainName\u0026#34;: \u0026#34;d3v3xtkl1l2ynj.cloudfront.net\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;ActiveTrustedSigners\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             \u0026#34;Enabled\u0026#34;: false,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             \u0026#34;Quantity\u0026#34;: 0\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         },\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;DistributionConfig\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             \u0026#34;CallerReference\u0026#34;: \u0026#34;techsquad-serverless-site-distribution\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             \u0026#34;Aliases\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 \u0026#34;Quantity\u0026#34;: 0\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             },\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             \u0026#34;DefaultRootObject\u0026#34;: \u0026#34;index.html\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             \u0026#34;Origins\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 \u0026#34;Quantity\u0026#34;: 1,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 \u0026#34;Items\u0026#34;: [\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                     {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                         \u0026#34;Id\u0026#34;: \u0026#34;techsquad-serverless-site-cloudfront\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                         \u0026#34;DomainName\u0026#34;: \u0026#34;techsquad-serverless-site.s3.amazonaws.com\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                         \u0026#34;OriginPath\u0026#34;: \u0026#34;\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                         \u0026#34;CustomHeaders\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                             \u0026#34;Quantity\u0026#34;: 0\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                         },\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                         \u0026#34;S3OriginConfig\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                             \u0026#34;OriginAccessIdentity\u0026#34;: \u0026#34;origin-access-identity/cloudfront/E3IJG9M5PO9BYE\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                         }\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                     }\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 ]\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             },\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             \u0026#34;OriginGroups\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 \u0026#34;Quantity\u0026#34;: 0,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 \u0026#34;Items\u0026#34;: []\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             },\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             \u0026#34;DefaultCacheBehavior\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 \u0026#34;TargetOriginId\u0026#34;: \u0026#34;techsquad-serverless-site-cloudfront\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 \u0026#34;ForwardedValues\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                     \u0026#34;QueryString\u0026#34;: true,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                     \u0026#34;Cookies\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                         \u0026#34;Forward\u0026#34;: \u0026#34;none\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                     },\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                     \u0026#34;Headers\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                         \u0026#34;Quantity\u0026#34;: 0\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                     },\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                     \u0026#34;QueryStringCacheKeys\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                         \u0026#34;Quantity\u0026#34;: 0\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                     }\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 },\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 \u0026#34;TrustedSigners\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                     \u0026#34;Enabled\u0026#34;: false,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                     \u0026#34;Quantity\u0026#34;: 0\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 },\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 \u0026#34;ViewerProtocolPolicy\u0026#34;: \u0026#34;allow-all\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 \u0026#34;MinTTL\u0026#34;: 3600,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 \u0026#34;AllowedMethods\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                     \u0026#34;Quantity\u0026#34;: 2,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                     \u0026#34;Items\u0026#34;: [\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                         \u0026#34;HEAD\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                         \u0026#34;GET\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                     ],\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                     \u0026#34;CachedMethods\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                         \u0026#34;Quantity\u0026#34;: 2,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                         \u0026#34;Items\u0026#34;: [\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                             \u0026#34;HEAD\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                             \u0026#34;GET\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                         ]\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                     }\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 },\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 \u0026#34;SmoothStreaming\u0026#34;: false,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 \u0026#34;DefaultTTL\u0026#34;: 86400,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 \u0026#34;MaxTTL\u0026#34;: 31536000,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 \u0026#34;Compress\u0026#34;: false,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 \u0026#34;LambdaFunctionAssociations\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                     \u0026#34;Quantity\u0026#34;: 0\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 },\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 \u0026#34;FieldLevelEncryptionId\u0026#34;: \u0026#34;\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             },\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             \u0026#34;CacheBehaviors\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 \u0026#34;Quantity\u0026#34;: 0\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             },\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             \u0026#34;CustomErrorResponses\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 \u0026#34;Quantity\u0026#34;: 0\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             },\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             \u0026#34;Comment\u0026#34;: \u0026#34;\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             \u0026#34;Logging\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 \u0026#34;Enabled\u0026#34;: false,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 \u0026#34;IncludeCookies\u0026#34;: false,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 \u0026#34;Bucket\u0026#34;: \u0026#34;\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 \u0026#34;Prefix\u0026#34;: \u0026#34;\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             },\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             \u0026#34;PriceClass\u0026#34;: \u0026#34;PriceClass_All\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             \u0026#34;Enabled\u0026#34;: true,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             \u0026#34;ViewerCertificate\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 \u0026#34;CloudFrontDefaultCertificate\u0026#34;: true,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 \u0026#34;MinimumProtocolVersion\u0026#34;: \u0026#34;TLSv1\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 \u0026#34;CertificateSource\u0026#34;: \u0026#34;cloudfront\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             },\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             \u0026#34;Restrictions\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 \u0026#34;GeoRestriction\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                     \u0026#34;RestrictionType\u0026#34;: \u0026#34;none\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                     \u0026#34;Quantity\u0026#34;: 0\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#                 }\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             },\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             \u0026#34;WebACLId\u0026#34;: \u0026#34;\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             \u0026#34;HttpVersion\u0026#34;: \u0026#34;http2\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#             \u0026#34;IsIPV6Enabled\u0026#34;: true\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         }\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     }\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# }\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nWoah a lot of details in there, but what we might need later is the ETAG if we want to download and update our distribution, so have that handy, also we can see our CloudFront URL in there which is: d3v3xtkl1l2ynj.cloudfront.net in this case.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eIt might take a few minutes to initialize the distribution, you can check the progress with\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eaws cloudfront list-distributions | jq \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;.DistributionList.Items[0].Status\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026#34;InProgress\u0026#34;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nOnce it\u0026rsquo;s ready the status will be: \u0026ldquo;Deployed\u0026rdquo;, and now if we go to the CloudFront url you should see the site :). The S3 bucket will only let CloudFront access to the files so the only way to serve the site is through CloudFront.\u003c/p\u003e\n\n\u003ch5 id=\"dns\"\u003e\u003cstrong\u003eDNS\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003e\u003cstrong\u003eThe only thing missing is the record in the DNS (I don\u0026rsquo;t have this domain name in Route53, shame on me but a CNAME will do for now), so let\u0026rsquo;s add it and verify it using dig.\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003edig serverless.techsquad.rocks\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# dig CNAME serverless.techsquad.rocks\u003c/span\u003e\n#\n\u003cspan style=\"color:#75715e\"\u003e# ; \u0026lt;\u0026lt;\u0026gt;\u0026gt; DiG 9.13.5 \u0026lt;\u0026lt;\u0026gt;\u0026gt; CNAME serverless.techsquad.rocks\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# ;; global options: +cmd\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# ;; Got answer:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# ;; -\u0026gt;\u0026gt;HEADER\u0026lt;\u0026lt;- opcode: QUERY, status: NOERROR, id: 52651\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# ;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\u003c/span\u003e\n#\n\u003cspan style=\"color:#75715e\"\u003e# ;; OPT PSEUDOSECTION:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# ; EDNS: version: 0, flags:; udp: 1452\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# ;; QUESTION SECTION:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# ;serverless.techsquad.rocks.    IN      CNAME\u003c/span\u003e\n#\n\u003cspan style=\"color:#75715e\"\u003e# ;; ANSWER SECTION:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# serverless.techsquad.rocks. 292 IN      CNAME   d3v3xtkl1l2ynj.cloudfront.net.\u003c/span\u003e\n#\n\u003cspan style=\"color:#75715e\"\u003e# ;; Query time: 20 msec\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# ;; SERVER: 1.1.1.1#53(1.1.1.1)\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# ;; WHEN: Sat Feb 02 17:47:11 -03 2019\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# ;; MSG SIZE  rcvd: 98\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nAs we can see the record is already there so we can go to \u003ca href=\"http://serverless.techsquad.rocks\"\u003ehttp://serverless.techsquad.rocks\u003c/a\u003e (note that this only works because we set that alias in the distribution), We could add SSL by creating a certificate using Amazon Certificate Manager, but we will leave that as an exercise or a future small article.\u003c/p\u003e\n\n\u003ch5 id=\"useful-commands\"\u003e\u003cstrong\u003eUseful commands\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eIn case you need to get some information some useful commands:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eThis command will give us the Id of our distribution\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eaws cloudfront list-distributions --output table --query \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;DistributionList.Items[*].Id\u0026#39;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# -------------------\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# |ListDistributions|\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# +-----------------+\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# |  EFJVJEPWAPGU2  |\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# +-----------------+\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eThis one the ETag (needed to perform updates for example)\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eaws cloudfront get-distribution-config --id EFJVJEPWAPGU2 | jq \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;. | .ETag\u0026#39;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# \u0026#34;E2TPQRAUPJL2P3\u0026#34;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eAnd this one will save the current config in /tmp so we can update it.\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eaws cloudfront get-distribution-config --id EFJVJEPWAPGU2 | jq \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;. | .DistributionConfig\u0026#39;\u003c/span\u003e \u0026gt; /tmp/curent-distribution-E2TPQRAUPJL2P\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003ch5 id=\"upcoming-articles\"\u003e\u003cstrong\u003eUpcoming articles\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eThis article is the first one in this series of serverless articles, the idea is to build a fully functional website using only serverless technologies, the next post will cover the AWS Lambda function used to send the contact form, also all code from the site can be \u003ca href=\"https://github.com/kainlite/aws-serverless-s3-elm-example\"\u003efound here\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3 id=\"errata\"\u003eErrata\u003c/h3\u003e\n\n\u003cp\u003eIf you spot any error or have any suggestion, please send me a message so it gets fixed.\u003c/p\u003e\n\n\u003cp\u003eAlso, you can check the source code and changes in the \u003ca href=\"https://github.com/kainjkjkjklite/kainlite.github.io\"\u003egenerated code\u003c/a\u003e and the \u003ca href=\"https://github.com/kainlite/blog\"\u003esources here\u003c/a\u003e\u003c/p\u003e\n"
    }, 
    {
      "id": "https://techsquad.rocks/blog/serving_static_sites_with_github/",
      "url": "https://techsquad.rocks/blog/serving_static_sites_with_github/",
      "title": "Serve your static website in Github",
      "date_published": "2019-01-29T00:00:00Z",
      "tags": ["development","serverless","git"],
      "content_html": "\n\n\u003ch3 id=\"introduction\"\u003e\u003cstrong\u003eIntroduction\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cp\u003eGitHub offers static web hosting for you and your apps this is called \u003ca href=\"https://pages.github.com/\"\u003eGitHub Pages\u003c/a\u003e, you can use markdown (\u003ca href=\"https://jekyllrb.com/\"\u003ejekyll\u003c/a\u003e or just plain html), for example for this blog I generate all the files with \u003ca href=\"https://gohugo.io/\"\u003eHugo.io\u003c/a\u003e and that gets deployed to GitHub Pages, the configuration is fairly simple as we will see in the following example (this blog setup).\u003c/p\u003e\n\n\u003cp\u003eGitHub pages offers some great examples that are really easy to follow, but if you want to know how I configured everything for this blog continue reading :), if you like it or have any comment use the disqus box at the bottom of the page.\u003c/p\u003e\n\n\u003ch3 id=\"pages\"\u003e\u003cstrong\u003ePages\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cp\u003eThe first step in order to use GH Pages is to create a repo (assuming that you already have an account) with the following name: username.github.io in my case is kainlite.github.io, as we can see in the following screenshot:\n\u003cfigure\u003e\n    \u003cimg src=\"/img/github-pages-repository.png\" width=\"100%\"/\u003e \n\u003c/figure\u003e\n\nThis repo already has the blog files, but as with any github repo you will see the default commands to push something to it, the next step is to configure the pages itself, for that you need to go to \u003ca href=\"https://github.com/username/username.github.io/settings\"\u003eSettings\u003c/a\u003e (be sure to replace username in the link), then scroll down to the GitHub Pages section. It will look something like this:\u003c/p\u003e\n\n\u003cp\u003e\u003cfigure\u003e\n    \u003cimg src=\"/img/github-pages-configuration.png\" width=\"100%\"/\u003e \n\u003c/figure\u003e\n\nAs you can see the configuration is fairly simple, you choose the branch that will be used to serve the site, you can even pick a theme if you are going to go with Jekyll, and you can also have a custom domain and https, in this case as I push the static html files to the master branch I selected that branch, you can have any branch you like but it\u0026rsquo;s common to use gh-pages.\u003c/p\u003e\n\n\u003ch5 id=\"dns\"\u003e\u003cstrong\u003eDNS\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eFor the custom domain you need to create the following entries in your DNS \u003ccode\u003edig techsquad.rocks\u003c/code\u003e, you can find these ips in \u003ca href=\"https://help.github.com/articles/setting-up-an-apex-domain/\"\u003ethis page\u003c/a\u003e:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003etechsquad.rocks.        \u003cspan style=\"color:#ae81ff\"\u003e300\u003c/span\u003e     IN      A       \u003cspan style=\"color:#ae81ff\"\u003e185\u003c/span\u003e.199.110.153\ntechsquad.rocks.        \u003cspan style=\"color:#ae81ff\"\u003e300\u003c/span\u003e     IN      A       \u003cspan style=\"color:#ae81ff\"\u003e185\u003c/span\u003e.199.111.153\ntechsquad.rocks.        \u003cspan style=\"color:#ae81ff\"\u003e300\u003c/span\u003e     IN      A       \u003cspan style=\"color:#ae81ff\"\u003e185\u003c/span\u003e.199.108.153\ntechsquad.rocks.        \u003cspan style=\"color:#ae81ff\"\u003e300\u003c/span\u003e     IN      A       \u003cspan style=\"color:#ae81ff\"\u003e185\u003c/span\u003e.199.109.153\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nAfter a few minutes it should start working, and whatever you have in that repo will be served as static files, there are some limits but they are really high so you can probably start your site or blog or whatever without having to worry to much about it. If you want to know what those limits are go \u003ca href=\"https://help.github.com/articles/what-is-github-pages/\"\u003ehere\u003c/a\u003e, as of now the repository size limit is 1Gb, and there is a soft bandwidth limit of 100GB per month, also 10 builds per hour.\u003c/p\u003e\n\n\u003ch5 id=\"go-hugo\"\u003e\u003cstrong\u003eGo Hugo\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eNow to the interesting part, \u003ca href=\"https://gohugo.io\"\u003eHugo\u003c/a\u003e let\u0026rsquo;s you configure and customize several aspects of the generated files, first be sure to install hugo with your package manager or with go, the steps to create a blog are fairly simple:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ehugo new site testing-hugo\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Congratulations! Your new Hugo site is created in /home/kainlite/Webs/testing-hugo.\u003c/span\u003e\n#\n\u003cspan style=\"color:#75715e\"\u003e# Just a few more steps and you\u0026#39;re ready to go:\u003c/span\u003e\n#\n\u003cspan style=\"color:#75715e\"\u003e# 1. Download a theme into the same-named folder.\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#    Choose a theme from https://themes.gohugo.io/, or\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#    create your own with the \u0026#34;hugo new theme \u0026lt;THEMENAME\u0026gt;\u0026#34; command.\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# 2. Perhaps you want to add some content. You can add single files\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#    with \u0026#34;hugo new \u0026lt;SECTIONNAME\u0026gt;/\u0026lt;FILENAME\u0026gt;.\u0026lt;FORMAT\u0026gt;\u0026#34;.\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# 3. Start the built-in live server via \u0026#34;hugo server\u0026#34;.\u003c/span\u003e\n#\n\u003cspan style=\"color:#75715e\"\u003e# Visit https://gohugo.io/ for quickstart guide and full documentation.\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nAs I have shown in the tmux article, I like to have 2 panes one small pane where I can see the files being rebuilt at each save and another pane with Vim to edit the source code. You can start the hugo webserver for development with \u003ccode\u003ehugo serve -D\u003c/code\u003e and it will listen by default in the port 1313. It is very common to use themes, so you can go to the \u003ca href=\"https://themes.gohugo.io/\"\u003ethemes page\u003c/a\u003e and start your project with one of those, there are several ways to install the themes, and you can see the installation steps at the theme page, for example for the blog I started with \u003ca href=\"https://themes.gohugo.io/hugo-sustain/\"\u003eSustain\u003c/a\u003e but then modified it to match my needs.\u003c/p\u003e\n\n\u003ch5 id=\"publishing-with-git-push\"\u003e\u003cstrong\u003ePublishing with git push\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eThe most interesting part of this setup is the simple automation that I use to publish with \u003ccode\u003egit push\u003c/code\u003e, I created the following hook in the blog repo \u003ccode\u003e.git/hooks/pre-push\u003c/code\u003e:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"color:#75715e\"\u003e#!/bin/bash\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\nCOMMIT_MESSAGE\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003egit log -n \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e --pretty\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eformat:%s \u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003elocal_ref\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003e\n\nhugo -d ~/Webs/kainlite.github.io\nANYTHING_CHANGED\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003ecd ~/Webs/kainlite.github.io \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e git diff --exit-code\u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003e\n\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e[[\u003c/span\u003e $? -gt \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e]]\u003c/span\u003e; \u003cspan style=\"color:#66d9ef\"\u003ethen\u003c/span\u003e\n    cd ~/Webs/kainlite.github.io \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e git add . \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e git commit -m \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003eCOMMIT_MESSAGE\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e git push origin master\n\u003cspan style=\"color:#66d9ef\"\u003efi\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nWhat this simple hook does is check if there is any change and push the changes with the same commit message than in the original repo, we first grab the commit message from the original repo, and then check if something changed with git, if it did then we just add all files and push that to the repo, that will trigger a build in github pages and once completed our page will be updated and visible (it can take a few seconds sometimes, but in general it\u0026rsquo;s pretty fast).\u003c/p\u003e\n\n\u003cp\u003eAnd that\u0026rsquo;s how this blog was configured, in the upcoming articles I will show you how to host your static website with S3 and serve it with cloudflare, after that we will use a go lambda function to send the form email, let me know any comments or anything that you might want me to write about.\u003c/p\u003e\n\n\u003ch5 id=\"pages-environment\"\u003e\u003cstrong\u003ePages Environment\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eIf you paid attention at the first screenshot you probably noticed that it says \u003cem\u003e1 Environment\u003c/em\u003e that means that GH Pages have been already configured and if we click it we can see something like this:\n\u003cfigure\u003e\n    \u003cimg src=\"/img/github-pages-environment.png\" width=\"100%\"/\u003e \n\u003c/figure\u003e\n\n\u003cbr /\u003e\nFor static html sites it would be unlikely to see a failure, but it can happen if you use Jekyll for example and there is any syntax error.\u003c/p\u003e\n\n\u003ch3 id=\"errata\"\u003eErrata\u003c/h3\u003e\n\n\u003cp\u003eIf you spot any error or have any suggestion, please send me a message so it gets fixed.\u003c/p\u003e\n\n\u003cp\u003eAlso, you can check the source code and changes in the \u003ca href=\"https://github.com/kainlite/kainlite.github.io\"\u003egenerated code\u003c/a\u003e and the \u003ca href=\"https://github.com/kainlite/blog\"\u003esources here\u003c/a\u003e\u003c/p\u003e\n"
    }, 
    {
      "id": "https://techsquad.rocks/blog/give_super_powers_to_your_terminal_with_tmux/",
      "url": "https://techsquad.rocks/blog/give_super_powers_to_your_terminal_with_tmux/",
      "title": "Give super powers to your terminal with tmux",
      "date_published": "2019-01-23T00:00:00Z",
      "tags": ["urxvt","vim","linux","tmux"],
      "content_html": "\n\n\u003ch3 id=\"introduction\"\u003e\u003cstrong\u003eIntroduction\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cp\u003eIn this article I want to introduce you to \u003ccode\u003etmux\u003c/code\u003e, you might have used \u003ccode\u003escreen\u003c/code\u003e in the past or heard about it, what tmux and screen are is terminal multiplexers, what does that mean? That you can have many windows/tabs and splits/panes in just one terminal window, this can really make things easier when using it as a development environment for example, you can detach from the terminal and leave things running indefinitely, or share your terminal with a colleague over ssh, for the examples I will be explaining bits of my configuration and how do I use it. The full configuration can be found \u003ca href=\"https://github.com/kainlite/dotfiles/blob/master/.tmux.conf\"\u003ehere\u003c/a\u003e. I\u0026rsquo;m using ZSH as shell and Vim as text editor.\u003c/p\u003e\n\n\u003ch3 id=\"tmux\"\u003e\u003cstrong\u003eTmux\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cp\u003eI also use tmux to maintain sessions, for example I can only have one terminal window open because with the help from ZSH it will attach automatically to a session thanks to \u003ca href=\"https://github.com/robbyrussell/oh-my-zsh\"\u003eoh-my-zsh\u003c/a\u003e and the plugin tmux, I use tabs aka windows a lot, sometimes I also use splits aka as panes.\u003c/p\u003e\n\n\u003cp\u003eNow you have some basic understanding of what tmux does and how does it name its things, let\u0026rsquo;s examine some bits of the config and how to use it.\u003c/p\u003e\n\n\u003ch5 id=\"attach-detach-from-a-session\"\u003e\u003cstrong\u003eAttach/detach from a session\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eIn order to create a session and attach to it you need to execute \u003ccode\u003etmux new -s my-session\u003c/code\u003e, then to detach from it: \u003ccode\u003eCTRL-a d\u003c/code\u003e and to re-attach \u003ccode\u003etmux a -t my-session\u003c/code\u003e, then kill it \u003ccode\u003etmux kill-session -t my-session\u003c/code\u003e or logout from all windows.\u003c/p\u003e\n\n\u003ch5 id=\"prefix\"\u003e\u003cstrong\u003ePrefix\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eI don\u0026rsquo;t use the default prefix that is: \u003ccode\u003eCTRL-b\u003c/code\u003e, I use \u003ccode\u003eCTRL-a\u003c/code\u003e like in screen.\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"color:#75715e\"\u003e# Use ctrl-a instead of ctrl-b\u003c/span\u003e\nset -g prefix C-a\nunbind C-b\nbind C-a send-prefix\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003ch5 id=\"example\"\u003e\u003cstrong\u003eExample\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eYou can print the numbers of the panes with \u003ccode\u003eCTRL-a q\u003c/code\u003e, and you can navigate windows and panes as a list with \u003ccode\u003eCTRL-a w\u003c/code\u003e.\n\u003cfigure class=\"zoom\"\u003e\n    \u003cimg src=\"/img/tmux-windows-panes.png\" width=\"100%\"/\u003e \n\u003c/figure\u003e\n\u003c/p\u003e\n\n\u003cp\u003eI usually like to have 3 panes, something like this:\n\u003cfigure class=\"zoom\"\u003e\n    \u003cimg src=\"/img/tmux-sample-usage.png\" width=\"100%\"/\u003e \n\u003c/figure\u003e\n\nI can edit the code or whatever in the pane 0, run commands if I need to in the pane 1, and have the webserver or code compiler, etc in the pane 2. This is very handy because I can write and test things at the same time without leaving the keyboard, or look at 2 different projects/files/etc side by side.\u003c/p\u003e\n\n\u003cp\u003eWith \u003ccode\u003etmux ls\u003c/code\u003e we can list active sessions, also tmux has a command mode (\u003ccode\u003eCTRL-a :\u003c/code\u003e) like Vim, where you can issue some commands or change settings on the fly, for example instead of executing \u003ccode\u003etmux ls\u003c/code\u003e, you can get the same information doing \u003ccode\u003eCTRL-a :\u003c/code\u003e and then \u003ccode\u003els\u0026lt;CR\u0026gt;\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch5 id=\"defaults\"\u003e\u003cstrong\u003eDefaults\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eSome helpful settings, for example start windows at 1 instead of 0, renumber on exit also makes it easier with windows.\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"color:#75715e\"\u003e# Start window numbers at 1 to match keyboard order with tmux window order\u003c/span\u003e\nset -g base-index \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\n\n\u003cspan style=\"color:#75715e\"\u003e# Scrollback buffer n lines\u003c/span\u003e\nset -g history-limit \u003cspan style=\"color:#ae81ff\"\u003e10000\u003c/span\u003e\n\n\u003cspan style=\"color:#75715e\"\u003e# Renumber tabs on exit\u003c/span\u003e\nset-option -g renumber-windows on\n\n\u003cspan style=\"color:#75715e\"\u003e# Use vi keybindings in copy and choice modes\u003c/span\u003e\nset-window-option -g mode-keys vi\n\n\u003cspan style=\"color:#75715e\"\u003e# Enable mouse, enables you to scroll in the tmux history buffer.\u003c/span\u003e\nset -g mouse on\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003ch5 id=\"movement\"\u003e\u003cstrong\u003eMovement\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eI move between windows with \u003ccode\u003eCTRL+h\u003c/code\u003e and \u003ccode\u003eCTRL+l\u003c/code\u003e, and between panes with \u003ccode\u003eCTRL-a [hjkl]\u003c/code\u003e.\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"color:#75715e\"\u003e# Move between windows\u003c/span\u003e\nbind-key -n C-h prev\nbind-key -n C-l next\n\n\u003cspan style=\"color:#75715e\"\u003e# Move between panes\u003c/span\u003e\nunbind h\nbind h \u003cspan style=\"color:#66d9ef\"\u003eselect\u003c/span\u003e-pane -L\nunbind j\nbind j \u003cspan style=\"color:#66d9ef\"\u003eselect\u003c/span\u003e-pane -D\nunbind k\nbind k \u003cspan style=\"color:#66d9ef\"\u003eselect\u003c/span\u003e-pane -U\nunbind l\nbind l \u003cspan style=\"color:#66d9ef\"\u003eselect\u003c/span\u003e-pane -R\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003ch5 id=\"configuration\"\u003e\u003cstrong\u003eConfiguration\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eA handy trick if you are testing the configuration is to reload it from the file with \u003ccode\u003eCTRL-a r\u003c/code\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"color:#75715e\"\u003e# Force a reload of the config file\u003c/span\u003e\nunbind r\nbind r source-file ~/.tmux.conf \u003cspan style=\"color:#ae81ff\"\u003e\\;\u003c/span\u003e display \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Reloaded!\u0026#34;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003ch5 id=\"panes\"\u003e\u003cstrong\u003ePanes\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eEverything is nice and shiny, but how do I open a pane or a new window?\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"color:#75715e\"\u003e# Horizontal and vertical splits\u003c/span\u003e\nunbind |\nbind | split-window -h\nunbind -\nbind - split-window\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nEasy, \u003ccode\u003eCTRL-a |\u003c/code\u003e will give you a vertical pane, and \u003ccode\u003eCTRL-a -\u003c/code\u003e will give you an horizontal pane.\nYou an also re-order the panes with \u003ccode\u003eCTRL-a SPACE\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eYou can also re-order windows with \u003ccode\u003eSHIFT-Left Arrow\u003c/code\u003e and \u003ccode\u003eSHIFT-Right Arrow\u003c/code\u003e.\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"color:#75715e\"\u003e# Swap windows\u003c/span\u003e\nbind-key -n S-Left swap-window -t -1\nbind-key -n S-Right swap-window -t +1\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003ch5 id=\"status-bar\"\u003e\u003cstrong\u003eStatus bar\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eThe status bar and the colors, it\u0026rsquo;s fairly simple but I like it.\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"color:#75715e\"\u003e# Status bar has a dim gray background\u003c/span\u003e\nset-option -g status-bg colour234\nset-option -g status-fg colour0\n\u003cspan style=\"color:#75715e\"\u003e# Left shows the session name, in blue\u003c/span\u003e\nset-option -g status-left-bg default\nset-option -g status-left-fg colour74\n\u003cspan style=\"color:#75715e\"\u003e# Right is some CPU stats, so terminal green\u003c/span\u003e\nset-option -g status-right-bg default\nset-option -g status-right-fg colour71\n\u003cspan style=\"color:#75715e\"\u003e# Windows are medium gray; current window is white\u003c/span\u003e\nset-window-option -g window-status-fg colour244\nset-window-option -g window-status-current-fg \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;#ffffff\u0026#39;\u003c/span\u003e\nset-window-option -g window-status-current-bg \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;#000000\u0026#39;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Beeped windows get a blinding orange background\u003c/span\u003e\nset-window-option -g window-status-bell-fg \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;#000000\u0026#39;\u003c/span\u003e\nset-window-option -g window-status-bell-bg \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;#d78700\u0026#39;\u003c/span\u003e\nset-window-option -g window-status-bell-attr none\n\u003cspan style=\"color:#75715e\"\u003e# Trim window titles to a reasonable length\u003c/span\u003e\nset-window-option -g window-status-format \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;#[fg=yellow] #F#I#[default] #W \u0026#39;\u003c/span\u003e\nset-window-option -g window-status-current-format \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;#[bg=yellow] #I#[bg=yellow] #W \u0026#39;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003ch5 id=\"copy-paste\"\u003e\u003cstrong\u003eCopy/paste\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003e\u003cfigure class=\"zoom\"\u003e\n    \u003cimg src=\"/img/tmux-vi-mode.png\" width=\"100%\"/\u003e \n\u003c/figure\u003e\n\nTmux also supports the vi-copy mode, you can enter this mode with \u003ccode\u003eCTRL-a ESC\u003c/code\u003e, then pressing \u003ccode\u003ev\u003c/code\u003e for normal selection or \u003ccode\u003eV\u003c/code\u003e for line selection you can mark and copy with \u003ccode\u003eY\u003c/code\u003e (by default is \u003ccode\u003eENTER\u003c/code\u003e aka \u003ccode\u003e\u0026lt;CR\u0026gt;\u003c/code\u003e).\u003c/p\u003e\n\n\u003cp\u003eAnd as you can imagine you can paste with \u003ccode\u003eCTRL-a p\u003c/code\u003e, this is really handy when copying from one pane to another or from one window to another, in Vim I recommend you \u003ccode\u003e:set paste!\u003c/code\u003e before pasting into it, so it doesn\u0026rsquo;t try to format, etc.\u003c/p\u003e\n\n\u003cp\u003eIt also copies to the clipboard buffer, using xsel.\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"color:#75715e\"\u003e# Make copy mode more vim like\u003c/span\u003e\nbind Escape copy-mode\nunbind p\nbind p paste-buffer\nbind-key -T edit-mode-vi Up send-keys -X history-up\nbind-key -T edit-mode-vi Down send-keys -X history-down\nunbind-key -T copy-mode-vi Space     ;   bind-key -T copy-mode-vi v send-keys -X begin-selection\n\nunbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;xsel -i --clipboard\u0026#34;\u003c/span\u003e\nbind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;xsel -i --clipboard\u0026#34;\u003c/span\u003e\n\nunbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle\nunbind-key -T copy-mode-vi \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e         ;   bind-key -T copy-mode-vi \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e send-keys -X begin-selection\nunbind-key -T copy-mode-vi \u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e         ;   bind-key -T copy-mode-vi \u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e send-keys -X copy-selection\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cp\u003eIf you want to learn more about tmux a good place to start is the \u003ca href=\"https://wiki.archlinux.org/index.php/tmux\"\u003eArch Linux wiki\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch5 id=\"notes\"\u003e\u003cstrong\u003enotes\u003c/strong\u003e\u003c/h5\u003e\n\n\u003cp\u003eSometimes you can have issues with the keys \u003ccode\u003eHOME\u003c/code\u003e and \u003ccode\u003eEND\u003c/code\u003e, this can help with that.\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"color:#75715e\"\u003e# Home / End patch\u003c/span\u003e\nbind -n End send-key C-e\nbind -n Home send-key C-a\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003ch3 id=\"errata\"\u003eErrata\u003c/h3\u003e\n\n\u003cp\u003eIf you spot any error or have any suggestion, please send me a message so it gets fixed.\u003c/p\u003e\n\n\u003cp\u003eAlso, you can check the source code and changes in the \u003ca href=\"https://github.com/kainlite/kainlite.github.io\"\u003egenerated code\u003c/a\u003e and the \u003ca href=\"https://github.com/kainlite/blog\"\u003esources here\u003c/a\u003e\u003c/p\u003e\n"
    }, 
    {
      "id": "https://techsquad.rocks/blog/creating_a_serverless_twitter_bot/",
      "url": "https://techsquad.rocks/blog/creating_a_serverless_twitter_bot/",
      "title": "How to create a serverless twitter bot",
      "date_published": "2019-01-22T00:00:00Z",
      "tags": ["go","aws","serverless"],
      "content_html": "\n\n\u003ch3 id=\"introduction\"\u003e\u003cstrong\u003eIntroduction\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cp\u003eThis article explains how to create a serverless tweet-bot, basically pulls articles from this blog and post them to twitter in a nice way. It uses cron as the trigger so it should post a tweet every 12 hours, or you can invoke it manually.\u003c/p\u003e\n\n\u003ch3 id=\"twitter\"\u003e\u003cstrong\u003eTwitter\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cp\u003eSo before you can start with the Twitter API you need to get a developer account in \u003ca href=\"https://developer.twitter.com/en/apply/user\"\u003ethis url\u003c/a\u003e, after submitted and created, you then need to create an App and generate the keys and tokens to be able to use it, it might take a while, I recommend you read everything that Twitter wants you to read while creating both the dev account and the app, so you can understand the scope and the good practices of using their services.\u003c/p\u003e\n\n\u003ch3 id=\"the-code\"\u003e\u003cstrong\u003eThe code\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cp\u003eI added several comments over the code so it\u0026rsquo;s easy to understand what everything is supposed to do, also it can be found \u003ca href=\"https://github.com/kainlite/tbo\"\u003ehere\u003c/a\u003e.\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"color:#f92672\"\u003epackage\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e\n\n\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e (\n\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;encoding/json\u0026#34;\u003c/span\u003e\n\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;io/ioutil\u0026#34;\u003c/span\u003e\n\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;math/rand\u0026#34;\u003c/span\u003e\n\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;net/http\u0026#34;\u003c/span\u003e\n\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;os\u0026#34;\u003c/span\u003e\n\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;strings\u0026#34;\u003c/span\u003e\n\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;time\u0026#34;\u003c/span\u003e\n\n\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;github.com/aws/aws-lambda-go/lambda\u0026#34;\u003c/span\u003e\n\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;github.com/dghubble/go-twitter/twitter\u0026#34;\u003c/span\u003e\n\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;github.com/dghubble/oauth1\u0026#34;\u003c/span\u003e\n\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;github.com/joho/godotenv\u0026#34;\u003c/span\u003e\n\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;github.com/sirupsen/logrus\u0026#34;\u003c/span\u003e\n)\n\n\u003cspan style=\"color:#75715e\"\u003e// Version\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eVersion\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e\n\n\u003cspan style=\"color:#75715e\"\u003e// Environment\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eEnv\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e\n\n\u003cspan style=\"color:#75715e\"\u003e// Page JSON object\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003etype\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ePage\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estruct\u003c/span\u003e {\n\t\u003cspan style=\"color:#a6e22e\"\u003eVersion\u003c/span\u003e  \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e    \u003cspan style=\"color:#e6db74\"\u003e`json:\u0026#34;version\u0026#34;`\u003c/span\u003e\n\t\u003cspan style=\"color:#a6e22e\"\u003eTitle\u003c/span\u003e    \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e    \u003cspan style=\"color:#e6db74\"\u003e`json:\u0026#34;title\u0026#34;`\u003c/span\u003e\n\t\u003cspan style=\"color:#a6e22e\"\u003eBaseURL\u003c/span\u003e  \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e    \u003cspan style=\"color:#e6db74\"\u003e`json:\u0026#34;home_page_url\u0026#34;`\u003c/span\u003e\n\t\u003cspan style=\"color:#a6e22e\"\u003eFeedURL\u003c/span\u003e  \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e    \u003cspan style=\"color:#e6db74\"\u003e`json:\u0026#34;feed_url\u0026#34;`\u003c/span\u003e\n\t\u003cspan style=\"color:#a6e22e\"\u003eArticles\u003c/span\u003e []\u003cspan style=\"color:#a6e22e\"\u003eArticle\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e`json:\u0026#34;items\u0026#34;`\u003c/span\u003e\n}\n\n\u003cspan style=\"color:#75715e\"\u003e// Article JSON object\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003etype\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eArticle\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estruct\u003c/span\u003e {\n\t\u003cspan style=\"color:#a6e22e\"\u003eID\u003c/span\u003e        \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e`json:\u0026#34;id\u0026#34;`\u003c/span\u003e\n\t\u003cspan style=\"color:#a6e22e\"\u003eURL\u003c/span\u003e       \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e`json:\u0026#34;url\u0026#34;`\u003c/span\u003e\n\t\u003cspan style=\"color:#a6e22e\"\u003eTitle\u003c/span\u003e     \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e`json:\u0026#34;title\u0026#34;`\u003c/span\u003e\n\t\u003cspan style=\"color:#a6e22e\"\u003eContent\u003c/span\u003e   \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e`json:\u0026#34;content_html\u0026#34;`\u003c/span\u003e\n\t\u003cspan style=\"color:#a6e22e\"\u003ePublished\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e`json:\u0026#34;date_published\u0026#34;`\u003c/span\u003e\n}\n\n\u003cspan style=\"color:#75715e\"\u003e// Twitter Access\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003etype\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eTwitter\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estruct\u003c/span\u003e {\n\t\u003cspan style=\"color:#a6e22e\"\u003econfig\u003c/span\u003e      \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eoauth1\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eConfig\u003c/span\u003e\n\t\u003cspan style=\"color:#a6e22e\"\u003etoken\u003c/span\u003e       \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eoauth1\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eToken\u003c/span\u003e\n\t\u003cspan style=\"color:#a6e22e\"\u003ehttpClient\u003c/span\u003e  \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003ehttp\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eClient\u003c/span\u003e\n\t\u003cspan style=\"color:#a6e22e\"\u003eclient\u003c/span\u003e      \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003etwitter\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eClient\u003c/span\u003e\n\t\u003cspan style=\"color:#a6e22e\"\u003etweetFormat\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e\n\t\u003cspan style=\"color:#a6e22e\"\u003escreenName\u003c/span\u003e  \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e\n}\n\n\u003cspan style=\"color:#75715e\"\u003e// This functions grabs all the necessary bits to connect to the Twitter API.\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003efunc\u003c/span\u003e (\u003cspan style=\"color:#a6e22e\"\u003et\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eTwitter\u003c/span\u003e) \u003cspan style=\"color:#a6e22e\"\u003eSetup\u003c/span\u003e() {\n\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eDebug\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Setting up twitter client\u0026#34;\u003c/span\u003e)\n\t\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003etwitterAccessKey\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e\n\t\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003etwitterAccessSecret\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e\n\t\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003etwitterConsumerKey\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e\n\t\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003etwitterConsumerSecret\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e\n\n\t\u003cspan style=\"color:#75715e\"\u003e// Get the access keys from ENV\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\u003cspan style=\"color:#a6e22e\"\u003etwitterAccessKey\u003c/span\u003e = \u003cspan style=\"color:#a6e22e\"\u003eos\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eGetenv\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;TWITTER_ACCESS_KEY\u0026#34;\u003c/span\u003e)\n\t\u003cspan style=\"color:#a6e22e\"\u003etwitterAccessSecret\u003c/span\u003e = \u003cspan style=\"color:#a6e22e\"\u003eos\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eGetenv\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;TWITTER_ACCESS_SECRET\u0026#34;\u003c/span\u003e)\n\t\u003cspan style=\"color:#a6e22e\"\u003etwitterConsumerKey\u003c/span\u003e = \u003cspan style=\"color:#a6e22e\"\u003eos\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eGetenv\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;TWITTER_CONSUMER_KEY\u0026#34;\u003c/span\u003e)\n\t\u003cspan style=\"color:#a6e22e\"\u003etwitterConsumerSecret\u003c/span\u003e = \u003cspan style=\"color:#a6e22e\"\u003eos\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eGetenv\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;TWITTER_CONSUMER_SECRET\u0026#34;\u003c/span\u003e)\n\t\u003cspan style=\"color:#a6e22e\"\u003etwitterScreenName\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eos\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eGetenv\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;TWITTER_SCREEN_NAME\u0026#34;\u003c/span\u003e)\n\n\t\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003etwitterScreenName\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e {\n\t\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eFatalf\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Twitter screen name cannot be null\u0026#34;\u003c/span\u003e)\n\t}\n\n\t\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003etwitterConsumerKey\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e {\n\t\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eFatal\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Twitter consumer key can not be null\u0026#34;\u003c/span\u003e)\n\t}\n\n\t\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003etwitterConsumerSecret\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e {\n\t\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eFatal\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Twitter consumer secret can not be null\u0026#34;\u003c/span\u003e)\n\t}\n\n\t\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003etwitterAccessKey\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e {\n\t\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eFatal\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Twitter access key can not be null\u0026#34;\u003c/span\u003e)\n\t}\n\n\t\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003etwitterAccessSecret\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e {\n\t\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eFatal\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Twitter access secret can not be null\u0026#34;\u003c/span\u003e)\n\t}\n\n\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eDebug\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Setting up oAuth for twitter\u0026#34;\u003c/span\u003e)\n\t\u003cspan style=\"color:#75715e\"\u003e// Setup the new oauth client\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\u003cspan style=\"color:#a6e22e\"\u003et\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003econfig\u003c/span\u003e = \u003cspan style=\"color:#a6e22e\"\u003eoauth1\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eNewConfig\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003etwitterConsumerKey\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003etwitterConsumerSecret\u003c/span\u003e)\n\t\u003cspan style=\"color:#a6e22e\"\u003et\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003etoken\u003c/span\u003e = \u003cspan style=\"color:#a6e22e\"\u003eoauth1\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eNewToken\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003etwitterAccessKey\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003etwitterAccessSecret\u003c/span\u003e)\n\t\u003cspan style=\"color:#a6e22e\"\u003et\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ehttpClient\u003c/span\u003e = \u003cspan style=\"color:#a6e22e\"\u003et\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003econfig\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eClient\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eoauth1\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eNoContext\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003et\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003etoken\u003c/span\u003e)\n\n\t\u003cspan style=\"color:#75715e\"\u003e// Twitter client\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\u003cspan style=\"color:#a6e22e\"\u003et\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eclient\u003c/span\u003e = \u003cspan style=\"color:#a6e22e\"\u003etwitter\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eNewClient\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003et\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ehttpClient\u003c/span\u003e)\n\n\t\u003cspan style=\"color:#75715e\"\u003e// Set the screen name for later use\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\u003cspan style=\"color:#a6e22e\"\u003et\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003escreenName\u003c/span\u003e = \u003cspan style=\"color:#a6e22e\"\u003etwitterScreenName\u003c/span\u003e\n\n\t\u003cspan style=\"color:#75715e\"\u003e// This is the format of the tweet\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\u003cspan style=\"color:#a6e22e\"\u003et\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003etweetFormat\u003c/span\u003e = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;%s: %s - TBO\u0026#34;\u003c/span\u003e\n\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eDebug\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Twitter client setup complete\u0026#34;\u003c/span\u003e)\n}\n\n\u003cspan style=\"color:#75715e\"\u003e// Format tweets\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003efunc\u003c/span\u003e (\u003cspan style=\"color:#a6e22e\"\u003et\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eTwitter\u003c/span\u003e) \u003cspan style=\"color:#a6e22e\"\u003eGetTweetString\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003earticle\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eArticle\u003c/span\u003e) \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e {\n\t\u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eSprintf\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003et\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003etweetFormat\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003earticle\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eTitle\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003earticle\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eURL\u003c/span\u003e)\n}\n\n\u003cspan style=\"color:#75715e\"\u003e// Send the tweet\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003efunc\u003c/span\u003e (\u003cspan style=\"color:#a6e22e\"\u003et\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eTwitter\u003c/span\u003e) \u003cspan style=\"color:#a6e22e\"\u003eSend\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003earticle\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eArticle\u003c/span\u003e) {\n\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eDebug\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Sending tweet\u0026#34;\u003c/span\u003e)\n\t\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eEnv\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e!=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;production\u0026#34;\u003c/span\u003e {\n\t\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eInfof\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Non production mode, would\u0026#39;ve tweeted: %s\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003et\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eGetTweetString\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003earticle\u003c/span\u003e))\n\t}\n\t\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eEnv\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;production\u0026#34;\u003c/span\u003e {\n\t\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eInfof\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Sending tweet: %s\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003et\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eGetTweetString\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003earticle\u003c/span\u003e))\n\t\t\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e_\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003e_\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003et\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eclient\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eStatuses\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eUpdate\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003et\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eGetTweetString\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003earticle\u003c/span\u003e), \u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e); \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e!=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e {\n\t\t\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eFatalf\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Error sending tweet to twitter: %s\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e)\n\t\t}\n\t}\n}\n\n\u003cspan style=\"color:#75715e\"\u003e// Get a random article from the feed\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e// This functions checks that the same tweet is not present\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e// in the last 30 tweets\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003efunc\u003c/span\u003e (\u003cspan style=\"color:#a6e22e\"\u003et\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eTwitter\u003c/span\u003e) \u003cspan style=\"color:#a6e22e\"\u003ePickArticle\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003earticle\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eArticle\u003c/span\u003e) \u003cspan style=\"color:#66d9ef\"\u003ebool\u003c/span\u003e {\n\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eDebug\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Checking to see if the tweet appeared in the last 30 tweets\u0026#34;\u003c/span\u003e)\n\n\t\u003cspan style=\"color:#a6e22e\"\u003etweets\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003e_\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003et\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eclient\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eTimelines\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eUserTimeline\u003c/span\u003e(\u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003etwitter\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eUserTimelineParams\u003c/span\u003e{\n\t\t\u003cspan style=\"color:#a6e22e\"\u003eScreenName\u003c/span\u003e: \u003cspan style=\"color:#a6e22e\"\u003et\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003escreenName\u003c/span\u003e,\n\t\t\u003cspan style=\"color:#a6e22e\"\u003eCount\u003c/span\u003e:      \u003cspan style=\"color:#ae81ff\"\u003e30\u003c/span\u003e,\n\t\t\u003cspan style=\"color:#a6e22e\"\u003eTweetMode\u003c/span\u003e:  \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;extended\u0026#34;\u003c/span\u003e,\n\t})\n\n\t\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e!=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e {\n\t\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eFatalf\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Error getting last 30 tweets from user: %s\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e)\n\t}\n\n\t\u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e_\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003etweet\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003erange\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003etweets\u003c/span\u003e {\n\t\t\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003estrings\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eContains\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003etweet\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eText\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003et\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eGetTweetString\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003earticle\u003c/span\u003e)) {\n\t\t\t\u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e\n\t\t}\n\t}\n\n\t\u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efalse\u003c/span\u003e\n}\n\n\u003cspan style=\"color:#75715e\"\u003e// Twitter API constant\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003etw\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eTwitter\u003c/span\u003e\n\n\u003cspan style=\"color:#75715e\"\u003e// This function is rather large, but basically grabs the a big json from\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e// the jsonfeed url and tests several tweets until it finds one that it\u0026#39;s valid\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e// a tweet could be invalid if for example it was already tweeted in the last 30 tweets\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eGetArticle\u003c/span\u003e() \u003cspan style=\"color:#a6e22e\"\u003eArticle\u003c/span\u003e {\n\t\u003cspan style=\"color:#a6e22e\"\u003eurl\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;https://techsquad.rocks/index.json\u0026#34;\u003c/span\u003e\n\n\t\u003cspan style=\"color:#75715e\"\u003e// Setup a new HTTP Client with 3 seconds timeout\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\u003cspan style=\"color:#a6e22e\"\u003ehttpClient\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ehttp\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eClient\u003c/span\u003e{\n\t\t\u003cspan style=\"color:#a6e22e\"\u003eTimeout\u003c/span\u003e: \u003cspan style=\"color:#a6e22e\"\u003etime\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eSecond\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e3\u003c/span\u003e,\n\t}\n\n\t\u003cspan style=\"color:#75715e\"\u003e// Create a new HTTP Request\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\u003cspan style=\"color:#a6e22e\"\u003ereq\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ehttp\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eNewRequest\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ehttp\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eMethodGet\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eurl\u003c/span\u003e, \u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e)\n\t\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e!=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e {\n\t\t\u003cspan style=\"color:#75715e\"\u003e// An error has occurred that we can\u0026#39;t recover from, bail.\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eFatalf\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Error occurred creating new request: %s\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e)\n\t}\n\n\t\u003cspan style=\"color:#75715e\"\u003e// Set the user agent to tbo \u0026lt;version\u0026gt; - twitter.com/kainlite\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\u003cspan style=\"color:#a6e22e\"\u003ereq\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eHeader\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eSet\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;User-Agent\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eSprintf\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;TBO %s - twitter.com/kainlite\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eVersion\u003c/span\u003e))\n\n\t\u003cspan style=\"color:#75715e\"\u003e// Tell the remote server to send us JSON\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\u003cspan style=\"color:#a6e22e\"\u003ereq\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eHeader\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eSet\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Accept\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;application/json\u0026#34;\u003c/span\u003e)\n\n\t\u003cspan style=\"color:#75715e\"\u003e// We\u0026#39;re only going to try maxTries times, otherwise we\u0026#39;ll fatal out.\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\u003cspan style=\"color:#75715e\"\u003e// Execute the request\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eDebugf\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Attempting request to %s\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003ereq\u003c/span\u003e)\n\t\u003cspan style=\"color:#a6e22e\"\u003eres\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003egetErr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ehttpClient\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eDo\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ereq\u003c/span\u003e)\n\t\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egetErr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e!=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e {\n\t\t\u003cspan style=\"color:#75715e\"\u003e// We got an error, lets bail out, we can\u0026#39;t do anything more\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eFatalf\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Error occurred retrieving article from API: %s\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003egetErr\u003c/span\u003e)\n\t}\n\n\t\u003cspan style=\"color:#75715e\"\u003e// BGet the body from the result\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\u003cspan style=\"color:#a6e22e\"\u003ebody\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003ereadErr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eioutil\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eReadAll\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eres\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eBody\u003c/span\u003e)\n\t\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ereadErr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e!=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e {\n\t\t\u003cspan style=\"color:#75715e\"\u003e// This shouldn\u0026#39;t happen, but if it does, error out.\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eFatalf\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Error occurred reading from result body: %s\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003ereadErr\u003c/span\u003e)\n\t}\n\n\t\u003cspan style=\"color:#75715e\"\u003e// Parse json into the struct Page\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003epage\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ePage\u003c/span\u003e\n\t\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ejson\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eUnmarshal\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ebody\u003c/span\u003e, \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003epage\u003c/span\u003e); \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e!=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e {\n\t\t\u003cspan style=\"color:#75715e\"\u003e// Invalid JSON was received, bail out\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eFatalf\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Error occurred decoding article: %s\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e)\n\t}\n\n\t\u003cspan style=\"color:#a6e22e\"\u003einvalidArticle\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e\n\t\u003cspan style=\"color:#a6e22e\"\u003etry\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e\n\t\u003cspan style=\"color:#a6e22e\"\u003emaxTries\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e10\u003c/span\u003e\n\n\t\u003cspan style=\"color:#75715e\"\u003e// Attempt to get a valid article for the next tweet\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003earticle\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eArticle\u003c/span\u003e\n\t\u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003einvalidArticle\u003c/span\u003e {\n\t\t\u003cspan style=\"color:#a6e22e\"\u003erand\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eSeed\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003etime\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eNow\u003c/span\u003e().\u003cspan style=\"color:#a6e22e\"\u003eUnixNano\u003c/span\u003e())\n\t\t\u003cspan style=\"color:#a6e22e\"\u003erandomInt\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003erand\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eIntn\u003c/span\u003e(len(\u003cspan style=\"color:#a6e22e\"\u003epage\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eArticles\u003c/span\u003e))\n\t\t\u003cspan style=\"color:#a6e22e\"\u003earticle\u003c/span\u003e = \u003cspan style=\"color:#a6e22e\"\u003epage\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eArticles\u003c/span\u003e[\u003cspan style=\"color:#a6e22e\"\u003erandomInt\u003c/span\u003e]\n\n\t\t\u003cspan style=\"color:#a6e22e\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ePrintf\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;%+v\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003erandomInt\u003c/span\u003e)\n\t\t\u003cspan style=\"color:#75715e\"\u003e// check to make sure the tweet hasn\u0026#39;t been sent before\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\t\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003etw\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ePickArticle\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003earticle\u003c/span\u003e) {\n\t\t\t\u003cspan style=\"color:#a6e22e\"\u003etry\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e+=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\n\t\t\t\u003cspan style=\"color:#66d9ef\"\u003econtinue\u003c/span\u003e\n\t\t}\n\n\t\t\u003cspan style=\"color:#75715e\"\u003e// If we get here we\u0026#39;ve found a tweet, exit the loop\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\t\u003cspan style=\"color:#a6e22e\"\u003einvalidArticle\u003c/span\u003e = \u003cspan style=\"color:#66d9ef\"\u003efalse\u003c/span\u003e\n\n\t\t\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003etry\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emaxTries\u003c/span\u003e {\n\t\t\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eFatal\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Exiting after attempts to retrieve article failed.\u0026#34;\u003c/span\u003e)\n\n\t\t}\n\t}\n\n\t\u003cspan style=\"color:#75715e\"\u003e// Return the valid article response\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003earticle\u003c/span\u003e\n}\n\n\u003cspan style=\"color:#75715e\"\u003e// HandleRequest - Handle the incoming Lambda request\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eHandleRequest\u003c/span\u003e() {\n\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eDebug\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Started handling request\u0026#34;\u003c/span\u003e)\n\t\u003cspan style=\"color:#a6e22e\"\u003etw\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eSetup\u003c/span\u003e()\n\t\u003cspan style=\"color:#a6e22e\"\u003earticle\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eGetArticle\u003c/span\u003e()\n\n\t\u003cspan style=\"color:#75715e\"\u003e// Send tweet\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\u003cspan style=\"color:#a6e22e\"\u003etw\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eSend\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003earticle\u003c/span\u003e)\n}\n\n\u003cspan style=\"color:#75715e\"\u003e// Set the local environment\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esetRunningEnvironment\u003c/span\u003e() {\n\t\u003cspan style=\"color:#75715e\"\u003e// Get the environment variable\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\u003cspan style=\"color:#66d9ef\"\u003eswitch\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eos\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eGetenv\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;APP_ENV\u0026#34;\u003c/span\u003e) {\n\t\u003cspan style=\"color:#66d9ef\"\u003ecase\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;production\u0026#34;\u003c/span\u003e:\n\t\t\u003cspan style=\"color:#a6e22e\"\u003eEnv\u003c/span\u003e = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;production\u0026#34;\u003c/span\u003e\n\t\u003cspan style=\"color:#66d9ef\"\u003ecase\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;development\u0026#34;\u003c/span\u003e:\n\t\t\u003cspan style=\"color:#a6e22e\"\u003eEnv\u003c/span\u003e = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;development\u0026#34;\u003c/span\u003e\n\t\u003cspan style=\"color:#66d9ef\"\u003edefault\u003c/span\u003e:\n\t\t\u003cspan style=\"color:#a6e22e\"\u003eEnv\u003c/span\u003e = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;development\u0026#34;\u003c/span\u003e\n\t}\n\n\t\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eEnv\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e!=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;production\u0026#34;\u003c/span\u003e {\n\t\t\u003cspan style=\"color:#a6e22e\"\u003eVersion\u003c/span\u003e = \u003cspan style=\"color:#a6e22e\"\u003eEnv\u003c/span\u003e\n\t}\n}\n\n\u003cspan style=\"color:#66d9ef\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eshutdown\u003c/span\u003e() {\n\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eInfo\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Shutdown request registered\u0026#34;\u003c/span\u003e)\n}\n\n\u003cspan style=\"color:#66d9ef\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003einit\u003c/span\u003e() {\n\t\u003cspan style=\"color:#75715e\"\u003e// Set the environment\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\u003cspan style=\"color:#a6e22e\"\u003esetRunningEnvironment\u003c/span\u003e()\n\n\t\u003cspan style=\"color:#75715e\"\u003e// Set logging configuration\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eSetFormatter\u003c/span\u003e(\u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eTextFormatter\u003c/span\u003e{\n\t\t\u003cspan style=\"color:#a6e22e\"\u003eDisableColors\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e,\n\t\t\u003cspan style=\"color:#a6e22e\"\u003eFullTimestamp\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e,\n\t})\n\n\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eSetReportCaller\u003c/span\u003e(\u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e)\n\t\u003cspan style=\"color:#66d9ef\"\u003eswitch\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eEnv\u003c/span\u003e {\n\t\u003cspan style=\"color:#66d9ef\"\u003ecase\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;development\u0026#34;\u003c/span\u003e:\n\t\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eSetLevel\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eDebugLevel\u003c/span\u003e)\n\t\u003cspan style=\"color:#66d9ef\"\u003ecase\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;production\u0026#34;\u003c/span\u003e:\n\t\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eSetLevel\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eErrorLevel\u003c/span\u003e)\n\t\u003cspan style=\"color:#66d9ef\"\u003edefault\u003c/span\u003e:\n\t\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eSetLevel\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eInfoLevel\u003c/span\u003e)\n\t}\n}\n\n\u003cspan style=\"color:#66d9ef\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e() {\n\t\u003cspan style=\"color:#75715e\"\u003e// Start the bot\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eDebug\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Starting main\u0026#34;\u003c/span\u003e)\n\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ePrintf\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;TBO %s\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eVersion\u003c/span\u003e)\n\n\t\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eEnv\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;production\u0026#34;\u003c/span\u003e {\n\t\t\u003cspan style=\"color:#a6e22e\"\u003elambda\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eStart\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eHandleRequest\u003c/span\u003e)\n\t} \u003cspan style=\"color:#66d9ef\"\u003eelse\u003c/span\u003e {\n\t\t\u003cspan style=\"color:#75715e\"\u003e// this environment variables are used locally while debugging, it can be quite handy\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\t\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egodotenv\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eLoad\u003c/span\u003e(); \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e!=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e {\n\t\t\t\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eFatal\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Error loading .env file\u0026#34;\u003c/span\u003e)\n\t\t}\n\t\t\u003cspan style=\"color:#a6e22e\"\u003eHandleRequest\u003c/span\u003e()\n\t}\n}\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nThe code is fairly straigth forward, it checks for the environment to have a locally runable/debuggable app if it\u0026rsquo;s development or if it\u0026rsquo;s running as an AWS Function in production.\u003c/p\u003e\n\n\u003ch3 id=\"while-debugging-locally-it-can-be-ran-like-this\"\u003e\u003cstrong\u003eWhile debugging locally it can be ran like this\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cp\u003eYou can save use an .env file to test debug how your tweets are going to look.\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ego run .\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# time=\u0026#34;2019-01-21T22:39:15-03:00\u0026#34; level=debug msg=\u0026#34;Starting main\u0026#34; func=main.main file=\u0026#34;/home/kainlite/Webs/tbo/tbo/main.go:279\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# time=\u0026#34;2019-01-21T22:39:15-03:00\u0026#34; level=info msg=\u0026#34;TBO development\u0026#34; func=main.main file=\u0026#34;/home/kainlite/Webs/tbo/tbo/main.go:280\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# time=\u0026#34;2019-01-21T22:39:15-03:00\u0026#34; level=debug msg=\u0026#34;Started handling request\u0026#34; func=main.HandleRequest file=\u0026#34;/home/kainlite/Webs/tbo/tbo/main.go:225\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# time=\u0026#34;2019-01-21T22:39:15-03:00\u0026#34; level=debug msg=\u0026#34;Setting up twitter client\u0026#34; func=\u0026#34;main.(*Twitter).Setup\u0026#34; file=\u0026#34;/home/kainlite/Webs/tbo/tbo/main.go:55\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# time=\u0026#34;2019-01-21T22:39:15-03:00\u0026#34; level=debug msg=\u0026#34;Setting up oAuth for twitter\u0026#34; func=\u0026#34;main.(*Twitter).Setup\u0026#34; file=\u0026#34;/home/kainlite/Webs/tbo/tbo/main.go:88\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# time=\u0026#34;2019-01-21T22:39:15-03:00\u0026#34; level=debug msg=\u0026#34;Twitter client setup complete\u0026#34; func=\u0026#34;main.(*Twitter).Setup\u0026#34; file=\u0026#34;/home/kainlite/Webs/tbo/tbo/main.go:102\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# time=\u0026#34;2019-01-21T22:39:15-03:00\u0026#34; level=debug msg=\u0026#34;Attempting request to \u0026amp;{GET https://techsquad.rocks/index.json HTTP/1.1 %!s(int=1) %!s(int=1) map[User-Agent:[TBO development - twitter.com/kainlite] Accept:[application/json]] \u0026lt;nil\u0026gt; %!s(func() (io.ReadCloser, error)=\u0026lt;nil\u0026gt;) %!s(int64=0) [] %!s(bool=false) techsquad.rocks map[] map[] %!s(*multipart.Form=\u0026lt;nil\u0026gt;) map[]   %!s(*tls.ConnectionState=\u0026lt;nil\u0026gt;) %!s(\u0026lt;-chan struct {}=\u0026lt;nil\u0026gt;) %!s(*http.Response=\u0026lt;nil\u0026gt;) \u0026lt;nil\u0026gt;}\u0026#34; func=main.GetArticle file=\u0026#34;/home/kainlite/Webs/tbo/tbo/main.go:173\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# 4time=\u0026#34;2019-01-21T22:39:15-03:00\u0026#34; level=debug msg=\u0026#34;Checking to see if the tweet appeared in the last 30 tweets\u0026#34; func=\u0026#34;main.(*Twitter).PickArticle\u0026#34; file=\u0026#34;/home/kainlite/Webs/tbo/tbo/main.go:125\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# time=\u0026#34;2019-01-21T22:39:16-03:00\u0026#34; level=debug msg=\u0026#34;Sending tweet\u0026#34; func=\u0026#34;main.(*Twitter).Send\u0026#34; file=\u0026#34;/home/kainlite/Webs/tbo/tbo/main.go:111\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# time=\u0026#34;2019-01-21T22:39:16-03:00\u0026#34; level=info msg=\u0026#34;Non production mode, would\u0026#39;ve tweeted: Getting started with skaffold: https://techsquad.rocks/blog/getting_started_with_skaffold/ - TBO\u0026#34; func=\u0026#34;main.(*Twitter).Send\u0026#34; file=\u0026#34;/home/kainlite/Webs/tbo/tbo/main.go:113\u0026#34;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nThe output is very verbose but it will show you everything that the function will do.\u003c/p\u003e\n\n\u003ch3 id=\"creating-the-project\"\u003e\u003cstrong\u003eCreating the project\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cp\u003eBut how did you get the project skeleton?\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003emkdir tbo \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e cd tbo \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e serverless create -t aws-go\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nBy default it creates two go functions: hello and world, if you look at the files serverless.yaml and the go code, it will be easy to understand how everything is tied together in the default example.\u003c/p\u003e\n\n\u003ch3 id=\"serverless-framework\"\u003e\u003cstrong\u003eServerless framework\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cp\u003eThis function is managed by the \u003ca href=\"https://serverless.com/\"\u003eserverless framework\u003c/a\u003e, as you can see it\u0026rsquo;s an easy way to manage your functions, what this small block of YAML will do is compile, upload, and schedule our function (because we use an event schedule)\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"color:#75715e\"\u003e# Welcome to Serverless!\u003c/span\u003e\n#\n\u003cspan style=\"color:#75715e\"\u003e# This file is the main config file for your service.\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# It\u0026#39;s very minimal at this point and uses default values.\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# You can always add more config options for more control.\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# We\u0026#39;ve included some commented out config examples here.\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Just uncomment any of them to get that config option.\u003c/span\u003e\n#\n\u003cspan style=\"color:#75715e\"\u003e# For full config options, check the docs:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#    docs.serverless.com\u003c/span\u003e\n#\n\u003cspan style=\"color:#75715e\"\u003e# Happy Coding!\u003c/span\u003e\n\nservice: handler\n\n\u003cspan style=\"color:#75715e\"\u003e# You can pin your service to only deploy with a specific Serverless version\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Check out our docs for more details\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# frameworkVersion: \u0026#34;=X.X.X\u0026#34;\u003c/span\u003e\nframeworkVersion: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026gt;=1.28.0 \u0026lt;2.0.0\u0026#34;\u003c/span\u003e\n\nprovider:\n  name: aws\n  runtime: go1.x\n  region: \u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003eenv:AWS_DEFAULT_REGION, \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;us-east-1\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e\n  stage: \u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003eenv:TBO_BUILD_STAGE, \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;prod\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e\n  memorySize: \u003cspan style=\"color:#ae81ff\"\u003e128\u003c/span\u003e\n  versionFunctions: false\n\npackage:\n exclude:\n   - ./**\n include:\n   - ./tbo/tbo\n\nfunctions:\n  tweet:\n    handler: tbo/tbo\n    events:\n      - schedule: cron\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e */12 * * ? *\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n    environment:\n      APP_ENV: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;production\u0026#34;\u003c/span\u003e\n      TWITTER_SCREEN_NAME: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;twitter_username\u0026#34;\u003c/span\u003e\n      TWITTER_CONSUMER_KEY: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;example_key\u0026#34;\u003c/span\u003e\n      TWITTER_CONSUMER_SECRET: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;example_secret\u0026#34;\u003c/span\u003e\n      TWITTER_ACCESS_KEY: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;example_key\u0026#34;\u003c/span\u003e\n      TWITTER_ACCESS_SECRET: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;example_secret\u0026#34;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nWe provide the environment variables there that the app needs to run, under the hood what serverless will do is create an s3 bucket for this function with a cloudformation stack and a zip file with your function (for each version or deployment), then it will apply that that stack and validate that everything went ok.\u003c/p\u003e\n\n\u003ch3 id=\"deploy-the-function\"\u003e\u003cstrong\u003eDeploy the function\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cp\u003eOnce the code is ready and you are ready to test it in production aka send a real tweet, just deploy it.\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eserverless deploy\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: WARNING: Missing \u0026#34;tenant\u0026#34; and \u0026#34;app\u0026#34; properties in serverless.yml. Without these properties, you can not publish the service to the Serverless Platform.\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Packaging service...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Excluding development dependencies...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Uploading CloudFormation file to S3...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Uploading artifacts...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Uploading service .zip file to S3 (9.86 MB)...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Validating template...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Updating Stack...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Checking Stack update progress...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# ..................\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Serverless: Stack update finished...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Service Information\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# service: handler\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# stage: prod\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# region: us-east-1\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# stack: handler-prod\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# api keys:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#   None\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# endpoints:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#   None\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# functions:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#   tweet: handler-prod-tweet\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# layers:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#   None\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nAs we described before you can see everything that the serverless framework did for us, nothing really hard to remember and everything automated.\u003c/p\u003e\n\n\u003ch3 id=\"s3\"\u003e\u003cstrong\u003eS3\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cp\u003eExample s3 bucket from the previous deployment.\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eaws s3 ls\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# 2019-01-21 22:42:05 handler-prod-serverlessdeploymentbucket-1s5fs5igk2pwc\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nAs we can see after the deployment we see a new bucket with our function and if we take a look at the files we will find several (depending on how many deployments you do) stacks/manifests and the zip file with our function for each version/deployment.\u003c/p\u003e\n\n\u003ch3 id=\"invoke-the-function\"\u003e\u003cstrong\u003eInvoke the function\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cp\u003eOk, but I don\u0026rsquo;t want to wait 12 hours to see if everything is okay, then just invoke the function.\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eserverless invoke -f tweet\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# null\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nWait, where did tweet came from?, if you look at the serverless manifest you will see that our function is called tweet. If everything went well you will be able to see that tweet in your profile, something like this:\n\u003cfigure class=\"zoom\"\u003e\n    \u003cimg src=\"/img/twitter-tbo.png\" width=\"100%\"/\u003e \n\u003c/figure\u003e\n\u003c/p\u003e\n\n\u003ch3 id=\"notes\"\u003eNotes\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003eWhy TBO, what\u0026rsquo;s tbo? bot misspelled.\u003c/li\u003e\n\u003cli\u003eThe Serverless framework is really cool and works in a variety of environments, I certainly recommend taking a look and at least trying it, I use it for a few small projects and it eases my life a lot.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"errata\"\u003eErrata\u003c/h3\u003e\n\n\u003cp\u003eIf you spot any error or have any suggestion, please send me a message so it gets fixed.\u003c/p\u003e\n\n\u003cp\u003eAlso, you can check the source code and changes in the \u003ca href=\"https://github.com/kainlite/kainlite.github.io\"\u003egenerated code\u003c/a\u003e and the \u003ca href=\"https://github.com/kainlite/blog\"\u003esources here\u003c/a\u003e\u003c/p\u003e\n"
    }, 
    {
      "id": "https://techsquad.rocks/blog/from_zero_to_hero_with_kops_and_aws/",
      "url": "https://techsquad.rocks/blog/from_zero_to_hero_with_kops_and_aws/",
      "title": "From zero to hero with kops and AWS",
      "date_published": "2019-01-19T00:00:00Z",
      "tags": ["AWS","kops","kubernetes"],
      "content_html": "\n\n\u003ch3 id=\"introduction\"\u003e\u003cstrong\u003eIntroduction\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cp\u003eIn this article we will create a cluster from scratch with \u003ca href=\"https://github.com/kubernetes/kops\"\u003ekops\u003c/a\u003e (K8s installation, upgrades and management) in \u003ca href=\"https://aws.amazon.com/\"\u003eAWS\u003c/a\u003e, We will configure \u003ca href=\"https://github.com/kubernetes-sigs/aws-alb-ingress-controller\"\u003eaws-alb-ingress-controller\u003c/a\u003e (External traffic into our services/pods) and \u003ca href=\"https://github.com/kubernetes-incubator/external-dns\"\u003eexternal dns\u003c/a\u003e (Update the records based in the ingress rules) and also learn a bit about awscli in the process.\u003c/p\u003e\n\n\u003cp\u003eBasically we will have a fully functional cluster that will be able to handle public traffic in minutes, first we will install the cluster with kops, then we will enable the ingress controller and lastly external-dns, then we will deploy a basic app to test that everything works fine, SSL/TLS is out of the scope but it\u0026rsquo;s fairly easy to implement if you are using ACM.\u003c/p\u003e\n\n\u003cp\u003eJust in case you don\u0026rsquo;t know this setup is not going to be free, cheap for sure because we will use small instances, etc, but not completely free, so before you dive in, be sure that you can spend a few bucks testing it out.\u003c/p\u003e\n\n\u003ch3 id=\"kops\"\u003e\u003cstrong\u003eKops\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cp\u003eThis is an awesome tool to setup and maintain your clusters, currently only compatible with AWS and GCE, other platforms are planned and some are also supported in alpha, we will be using AWS in this example, it requires kubectl so make sure you have it installed:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ecurl -LO https://github.com/kubernetes/kops/releases/download/\u003cspan style=\"color:#66d9ef\"\u003e$(\u003c/span\u003ecurl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026#34;\u0026#39;\u003c/span\u003e -f \u003cspan style=\"color:#ae81ff\"\u003e4\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003e)\u003c/span\u003e/kops-linux-amd64\nchmod +x kops-linux-amd64\nsudo mv kops-linux-amd64 /usr/local/bin/kops\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eExport the credentials that we will be using to create the kops user and policies\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eexport AWS_ACCESS_KEY_ID\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eXXXX \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e export AWS_SECRET_ACCESS_KEY\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eXXXXX\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nYou can do it this way or just use \u003ccode\u003eaws configure\u003c/code\u003e and set a profile.\u003c/p\u003e\n\n\u003cp\u003eThe next thing that we need are IAM credentials for kops to work, you will need awscli configured and working with your AWS admin-like account most likely before proceeding:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"color:#75715e\"\u003e# Create iam group\u003c/span\u003e\naws iam create-group --group-name kops\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;Group\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;Path\u0026#34;: \u0026#34;/\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;GroupName\u0026#34;: \u0026#34;kops\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;GroupId\u0026#34;: \u0026#34;AGPAIABI3O4WYM46AIX44\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;Arn\u0026#34;: \u0026#34;arn:aws:iam::894527626897:group/kops\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;CreateDate\u0026#34;: \u0026#34;2019-01-18T01:04:23Z\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     }\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# }\u003c/span\u003e\n\naws iam attach-group-policy --policy-arn arn:aws:iam::aws:policy/AmazonEC2FullAccess --group-name kops\naws iam attach-group-policy --policy-arn arn:aws:iam::aws:policy/AmazonRoute53FullAccess --group-name kops\naws iam attach-group-policy --policy-arn arn:aws:iam::aws:policy/AmazonS3FullAccess --group-name kops\naws iam attach-group-policy --policy-arn arn:aws:iam::aws:policy/IAMFullAccess --group-name kops\n\n\u003cspan style=\"color:#75715e\"\u003e# Attach policies\u003c/span\u003e\naws iam create-user --user-name kops\naws iam add-user-to-group --user-name kops --group-name kops\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;Group\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;Path\u0026#34;: \u0026#34;/\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;GroupName\u0026#34;: \u0026#34;kops\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;GroupId\u0026#34;: \u0026#34;AGPAIABI3O4WYM46AIX44\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;Arn\u0026#34;: \u0026#34;arn:aws:iam::894527626897:group/kops\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;CreateDate\u0026#34;: \u0026#34;2019-01-18T01:04:23Z\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     }\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# }\u003c/span\u003e\n\n\u003cspan style=\"color:#75715e\"\u003e# Create access key - save the output of this command.\u003c/span\u003e\naws iam create-access-key --user-name kops\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;AccessKey\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;UserName\u0026#34;: \u0026#34;kops\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;AccessKeyId\u0026#34;: \u0026#34;AKIAJE*********\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;Status\u0026#34;: \u0026#34;Active\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;SecretAccessKey\u0026#34;: \u0026#34;zWJhfemER**************************\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;CreateDate\u0026#34;: \u0026#34;2019-01-18T01:05:44Z\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     }\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# }\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nThe last command will output the access key and the secret key for the \u003cem\u003ekops\u003c/em\u003e user, save that information because we will use it from now on, note that we gave kops a lot of power with that user, so be careful with the keys.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eAdditional permissions to be able to create ALBs\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ecat \u003cspan style=\"color:#e6db74\"\u003e\u0026lt;\u0026lt; EOF \u0026gt; kops-alb-policy.json\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e{\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;,\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e \u0026#34;Statement\u0026#34;: [\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e   {\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e     \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e     \u0026#34;Action\u0026#34;: [\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e       \u0026#34;ec2:Describe*\u0026#34;,\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e       \u0026#34;iam:CreateServiceLinkedRole\u0026#34;,\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e       \u0026#34;tag:GetResources\u0026#34;,\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e       \u0026#34;elasticloadbalancing:*\u0026#34;\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e     ],\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e     \u0026#34;Resource\u0026#34;: [\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e       \u0026#34;*\u0026#34;\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e     ]\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e   }\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e ]\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e}\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003eEOF\u003c/span\u003e\n\naws iam create-policy --policy-name kops-alb-policy --policy-document file://kops-alb-policy.json\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;Policy\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;PolicyName\u0026#34;: \u0026#34;kops-alb-policy\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;PolicyId\u0026#34;: \u0026#34;ANPAIRIYZZZTCPJGNZZXS\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;Arn\u0026#34;: \u0026#34;arn:aws:iam::894527626897:policy/kops-alb-policy\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;Path\u0026#34;: \u0026#34;/\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;DefaultVersionId\u0026#34;: \u0026#34;v1\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;AttachmentCount\u0026#34;: 0,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;PermissionsBoundaryUsageCount\u0026#34;: 0,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;IsAttachable\u0026#34;: true,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;CreateDate\u0026#34;: \u0026#34;2019-01-18T03:50:00Z\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;UpdateDate\u0026#34;: \u0026#34;2019-01-18T03:50:00Z\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     }\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# }\u003c/span\u003e\n\ncat \u003cspan style=\"color:#e6db74\"\u003e\u0026lt;\u0026lt; EOF \u0026gt; kops-route53-policy.json\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e{\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;,\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e \u0026#34;Statement\u0026#34;: [\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e   {\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e     \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e     \u0026#34;Action\u0026#34;: [\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e       \u0026#34;route53:ChangeResourceRecordSets\u0026#34;\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e     ],\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e     \u0026#34;Resource\u0026#34;: [\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e       \u0026#34;arn:aws:route53:::hostedzone/*\u0026#34;\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e     ]\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e   },\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e   {\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e     \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e     \u0026#34;Action\u0026#34;: [\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e       \u0026#34;route53:ListHostedZones\u0026#34;,\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e       \u0026#34;route53:ListResourceRecordSets\u0026#34;\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e     ],\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e     \u0026#34;Resource\u0026#34;: [\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e       \u0026#34;*\u0026#34;\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e     ]\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e   }\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e ]\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e}\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003eEOF\u003c/span\u003e\n\naws iam create-policy --policy-name kops-route53-policy --policy-document file://kops-route53-policy.json\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;Policy\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;PolicyName\u0026#34;: \u0026#34;kops-route53-policy\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;PolicyId\u0026#34;: \u0026#34;ANPAIEWAGN62HBYC7QOS2\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;Arn\u0026#34;: \u0026#34;arn:aws:iam::894527626897:policy/kops-route53-policy\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;Path\u0026#34;: \u0026#34;/\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;DefaultVersionId\u0026#34;: \u0026#34;v1\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;AttachmentCount\u0026#34;: 0,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;PermissionsBoundaryUsageCount\u0026#34;: 0,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;IsAttachable\u0026#34;: true,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;CreateDate\u0026#34;: \u0026#34;2019-01-18T03:15:37Z\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;UpdateDate\u0026#34;: \u0026#34;2019-01-18T03:15:37Z\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     }\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# }\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nNote that even we just created these kops policies for alb and route53 we cannot add them right now, we need to first create the cluster, you can skip them if you don\u0026rsquo;t plan on using these resources.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eNow we will also export or set the cluster name and kops state store as environment variables\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eexport NAME\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003ek8s.techsquad.rocks\nexport KOPS_STATE_STORE\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003etechsquad-cluster-state-store\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nWe will be using these in a few places, so to not repeat ourselves let\u0026rsquo;s better have it as variables.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eCreate the zone for the subdomain in Route53\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eID\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003e$(\u003c/span\u003euuidgen\u003cspan style=\"color:#66d9ef\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e aws route53 create-hosted-zone --name \u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003eNAME\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e --caller-reference $ID | jq .DelegationSet.NameServers\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# [\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#   \u0026#34;ns-848.awsdns-42.net\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#   \u0026#34;ns-12.awsdns-01.com\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#   \u0026#34;ns-1047.awsdns-02.org\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#   \u0026#34;ns-1862.awsdns-40.co.uk\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# ]\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nAs I\u0026rsquo;m already using this domain for the blog with github we can create a subdomain for it and add some NS records in our root zone for that subdomain, in this case k8s.techsquad.rocks. To make this easier I will show you how it should look like:\n\u003cfigure\u003e\n    \u003cimg src=\"/img/kops-dns-subdomain.png\" width=\"100%\"/\u003e \n\u003c/figure\u003e\n\nSo with this change and our new zone in Route53 for the subdomain, we can freely manage it like if it was another domain, this means that everything that goes to *.k8s.techsquad.rocks will be handled by our Route53 zone.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eCreate a bucket to store the cluster state\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eaws s3api create-bucket \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    --bucket \u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003eKOPS_STATE_STORE\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    --region us-east-1\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;Location\u0026#34;: \u0026#34;/techsquad-cluster-state-store\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# }\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nNote that bucket names are unique, so it\u0026rsquo;s always a good idea to prefix them with your domain name or something like that.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eSet the versioning on, in case we need to rollback at some point\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eaws s3api put-bucket-versioning --bucket \u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003eKOPS_STATE_STORE\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e  --versioning-configuration Status\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eEnabled\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eSet encryption on for the bucket\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eaws s3api put-bucket-encryption --bucket \u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003eKOPS_STATE_STORE\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e --server-side-encryption-configuration \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;{\u0026#34;Rules\u0026#34;:[{\u0026#34;ApplyServerSideEncryptionByDefault\u0026#34;:{\u0026#34;SSEAlgorithm\u0026#34;:\u0026#34;AES256\u0026#34;}}]}\u0026#39;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eAnd finally let\u0026rsquo;s create our cluster\u003c/strong\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eexport KOPS_STATE_STORE\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;s3://\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003eKOPS_STATE_STORE\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\n\nkops create cluster \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    --zones us-east-1a \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    --networking calico \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003eNAME\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    --yes\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# I0117 23:14:06.449479   10314 create_cluster.go:1318] Using SSH public key: /home/kainlite/.ssh/id_rsa.pub\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# I0117 23:14:08.367862   10314 create_cluster.go:472] Inferred --cloud=aws from zone \u0026#34;us-east-1a\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# I0117 23:14:09.736030   10314 subnets.go:184] Assigned CIDR 172.20.32.0/19 to subnet us-east-1a\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# W0117 23:14:18.049687   10314 firewall.go:249] Opening etcd port on masters for access from the nodes, for calico.  This is unsafe in untrusted environments.\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# I0117 23:14:19.385541   10314 executor.go:91] Tasks: 0 done / 77 total; 34 can run\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# I0117 23:14:21.779681   10314 vfs_castore.go:731] Issuing new certificate: \u0026#34;apiserver-aggregator-ca\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# I0117 23:14:21.940026   10314 vfs_castore.go:731] Issuing new certificate: \u0026#34;ca\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# I0117 23:14:24.404810   10314 executor.go:91] Tasks: 34 done / 77 total; 24 can run\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# I0117 23:14:26.548234   10314 vfs_castore.go:731] Issuing new certificate: \u0026#34;master\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# I0117 23:14:26.689470   10314 vfs_castore.go:731] Issuing new certificate: \u0026#34;apiserver-aggregator\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# I0117 23:14:26.766563   10314 vfs_castore.go:731] Issuing new certificate: \u0026#34;kube-scheduler\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# I0117 23:14:26.863562   10314 vfs_castore.go:731] Issuing new certificate: \u0026#34;kube-controller-manager\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# I0117 23:14:26.955776   10314 vfs_castore.go:731] Issuing new certificate: \u0026#34;kubecfg\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# I0117 23:14:26.972837   10314 vfs_castore.go:731] Issuing new certificate: \u0026#34;apiserver-proxy-client\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# I0117 23:14:26.973239   10314 vfs_castore.go:731] Issuing new certificate: \u0026#34;kops\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# I0117 23:14:27.055466   10314 vfs_castore.go:731] Issuing new certificate: \u0026#34;kubelet\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# I0117 23:14:27.127778   10314 vfs_castore.go:731] Issuing new certificate: \u0026#34;kubelet-api\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# I0117 23:14:27.570516   10314 vfs_castore.go:731] Issuing new certificate: \u0026#34;kube-proxy\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# I0117 23:14:29.503168   10314 executor.go:91] Tasks: 58 done / 77 total; 17 can run\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# I0117 23:14:31.594404   10314 executor.go:91] Tasks: 75 done / 77 total; 2 can run\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# I0117 23:14:33.297131   10314 executor.go:91] Tasks: 77 done / 77 total; 0 can run\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# I0117 23:14:33.297168   10314 dns.go:153] Pre-creating DNS records\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# I0117 23:14:34.947302   10314 update_cluster.go:291] Exporting kubecfg for cluster\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# kops has set your kubectl context to k8s.techsquad.rocks\u003c/span\u003e\n#\n\u003cspan style=\"color:#75715e\"\u003e# Cluster is starting.  It should be ready in a few minutes.\u003c/span\u003e\n#\n\u003cspan style=\"color:#75715e\"\u003e# Suggestions:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#  * validate cluster: kops validate cluster\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#  * list nodes: kubectl get nodes --show-labels\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#  * ssh to the master: ssh -i ~/.ssh/id_rsa admin@api.k8s.techsquad.rocks\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#  * the admin user is specific to Debian. If not using Debian please use the appropriate user based on your OS.\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#  * read about installing addons at: https://github.com/kubernetes/kops/blob/master/docs/addons.md.\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nWe set the KOPS_STATE_STORE to a valid S3 url for kops, and then created the cluster, this will set kubectl context to our new cluster, we might need to wait a few minutes before being able to use it, but before doing anything let\u0026rsquo;s validate that\u0026rsquo;s up and ready.\u003c/p\u003e\n\n\u003cp\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ekops validate cluster \u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003eNAME\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Using cluster from kubectl context: k8s.techsquad.rocks\u003c/span\u003e\n#\n\u003cspan style=\"color:#75715e\"\u003e# Validating cluster k8s.techsquad.rocks\u003c/span\u003e\n#\n\u003cspan style=\"color:#75715e\"\u003e# INSTANCE GROUPS\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# NAME                    ROLE    MACHINETYPE     MIN     MAX     SUBNETS\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# master-us-east-1a       Master  m3.medium       1       1       us-east-1a\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# nodes                   Node    t2.medium       2       2       us-east-1a\u003c/span\u003e\n#\n\u003cspan style=\"color:#75715e\"\u003e# NODE STATUS\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# NAME                            ROLE    READY\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# ip-172-20-39-123.ec2.internal   node    True\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# ip-172-20-52-65.ec2.internal    node    True\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# ip-172-20-61-51.ec2.internal    master  True\u003c/span\u003e\n#\n\u003cspan style=\"color:#75715e\"\u003e# Your cluster k8s.techsquad.rocks is ready\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nThe validation passed and we can see that our cluster is ready, it can take several minutes until the cluster is up and functional, in this case it took about 3-5 minutes.\u003c/p\u003e\n\n\u003cp\u003eWe will create an additional subnet to satisfy our ALB:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eaws ec2 create-subnet --vpc-id vpc-06e2e104ad785474c --cidr-block \u003cspan style=\"color:#ae81ff\"\u003e172\u003c/span\u003e.20.64.0/19 --availability-zone us-east-1b\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;Subnet\u0026#34;: {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;AvailabilityZone\u0026#34;: \u0026#34;us-east-1b\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;AvailableIpAddressCount\u0026#34;: 8187,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;CidrBlock\u0026#34;: \u0026#34;172.20.64.0/19\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;DefaultForAz\u0026#34;: false,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;MapPublicIpOnLaunch\u0026#34;: false,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;State\u0026#34;: \u0026#34;pending\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;SubnetId\u0026#34;: \u0026#34;subnet-017a5609ce6104e1b\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;VpcId\u0026#34;: \u0026#34;vpc-06e2e104ad785474c\u0026#34;,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;AssignIpv6AddressOnCreation\u0026#34;: false,\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#         \u0026#34;Ipv6CidrBlockAssociationSet\u0026#34;: []\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     }\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# }\u003c/span\u003e\n\naws ec2 create-tags --resources subnet-017a5609ce6104e1b --tags Key\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eKubernetesCluster,Value\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003ek8s.techsquad.rocks\naws ec2 create-tags --resources subnet-017a5609ce6104e1b --tags Key\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eName,Value\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eus-east-1b.k8s.techsquad.rocks\naws ec2 create-tags --resources subnet-017a5609ce6104e1b --tags Key\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eSubnetType,Value\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003ePublic\naws ec2 create-tags --resources subnet-017a5609ce6104e1b --tags Key\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003ekubernetes.io/cluster/k8s.techsquad.rocks,Value\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eowned\naws ec2 create-tags --resources subnet-017a5609ce6104e1b --tags Key\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003ekubernetes.io/role/elb,Value\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nNote that we applied some required tags for the controller, and created an extra subnet, in a HA setup this would not be necessary since kops would create it for us but this is a small testing/dev cluster, so we will need to do it manually.\u003c/p\u003e\n\n\u003cp\u003eAnd lastly a security group for our ALB:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eaws ec2 create-security-group --group-name WebApps --description \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Default web security group\u0026#34;\u003c/span\u003e  --vpc-id vpc-06e2e104ad785474c\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# {\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e#     \u0026#34;GroupId\u0026#34;: \u0026#34;sg-09f0b1233696e65ef\u0026#34;\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# }\u003c/span\u003e\n\naws ec2 authorize-security-group-ingress --group-id sg-09f0b1233696e65ef --protocol tcp --port \u003cspan style=\"color:#ae81ff\"\u003e80\u003c/span\u003e --cidr \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e.0.0.0/0\naws ec2 authorize-security-group-ingress --group-id sg-057d2b0f6e288aa70 --protocol all --port \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e --source-group sg-09f0b1233696e65ef\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nNote that this rule will open the port 80 to the world, you can add your ip or your VPN ips there if you want to restrict it, the second rule will allow the traffic from the load balancer to reach the nodes where our app is running.\u003c/p\u003e\n\n\u003ch3 id=\"aws-alb-ingress-controller\"\u003e\u003cstrong\u003eAws-alb-ingress-controller\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cp\u003eWe will use \u003ca href=\"https://aws.amazon.com/blogs/opensource/kubernetes-ingress-aws-alb-ingress-controller/\"\u003eAws ALB Ingress Controller\u003c/a\u003e, to serve our web traffic, this will create an manage an ALB based in our ingress rules.\u003c/p\u003e\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ekubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/aws-alb-ingress-controller/v1.0.0/docs/examples/rbac-role.yaml\n\nclusterrole.rbac.authorization.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;alb-ingress-controller\u0026#34;\u003c/span\u003e created\nclusterrolebinding.rbac.authorization.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;alb-ingress-controller\u0026#34;\u003c/span\u003e created\nserviceaccount \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;alb-ingress\u0026#34;\u003c/span\u003e created\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\u003cp\u003eDownload the manifest and then modify the cluster-name to \u003ccode\u003ek8s.techsquad.rocks\u003c/code\u003e and a few other parameters, you can list the vpcs with \u003ccode\u003eaws ec2 describe-vpcs\u003c/code\u003e it will have some kops tags, so it\u0026rsquo;s easy to identify.\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ecurl -sS \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;https://raw.githubusercontent.com/kubernetes-sigs/aws-alb-ingress-controller/v1.0.0/docs/examples/alb-ingress-controller.yaml\u0026#34;\u003c/span\u003e \u0026gt; alb-ingress-controller.yaml\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cp\u003eOr copy and paste the following lines:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ecat \u003cspan style=\"color:#e6db74\"\u003e\u0026lt;\u0026lt; EOF \u0026gt; alb-ingress-controller.yaml\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e# Application Load Balancer (ALB) Ingress Controller Deployment Manifest.\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e# This manifest details sensible defaults for deploying an ALB Ingress Controller.\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e# GitHub: https://github.com/kubernetes-sigs/aws-alb-ingress-controller\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003eapiVersion: apps/v1\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003ekind: Deployment\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003emetadata:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  labels:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e    app: alb-ingress-controller\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  name: alb-ingress-controller\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  # Namespace the ALB Ingress Controller should run in. Does not impact which\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  # namespaces it\u0026#39;s able to resolve ingress resource for. For limiting ingress\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  # namespace scope, see --watch-namespace.\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  namespace: kube-system\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003espec:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  replicas: 1\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  selector:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e    matchLabels:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e      app: alb-ingress-controller\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  strategy:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e    rollingUpdate:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e      maxSurge: 1\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e      maxUnavailable: 1\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e    type: RollingUpdate\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  template:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e    metadata:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e      creationTimestamp: null\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e      labels:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e        app: alb-ingress-controller\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e    spec:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e      containers:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e        - args:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            - -v=1\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            # Limit the namespace where this ALB Ingress Controller deployment will\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            # resolve ingress resources. If left commented, all namespaces are used.\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            # - --watch-namespace=your-k8s-namespace\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            - --feature-gates=waf=false\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            # Setting the ingress-class flag below ensures that only ingress resources with the\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            # annotation kubernetes.io/ingress.class: \u0026#34;alb\u0026#34; are respected by the controller. You may\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            # choose any class you\u0026#39;d like for this controller to respect.\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            - --ingress-class=alb\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            # Name of your cluster. Used when naming resources created\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            # by the ALB Ingress Controller, providing distinction between\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            # clusters.\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            - --cluster-name=k8s.techsquad.rocks\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            # AWS VPC ID this ingress controller will use to create AWS resources.\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            # If unspecified, it will be discovered from ec2metadata.\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            - --aws-vpc-id=vpc-06e2e104ad785474c\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            # AWS region this ingress controller will operate in.\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            # If unspecified, it will be discovered from ec2metadata.\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            # List of regions: http://docs.aws.amazon.com/general/latest/gr/rande.html#vpc_region\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            - --aws-region=us-east-1\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            # Enables logging on all outbound requests sent to the AWS API.\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            # If logging is desired, set to true.\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            # - ---aws-api-debug\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            # Maximum number of times to retry the aws calls.\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            # defaults to 10.\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            # - --aws-max-retries=10\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e          env:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            # AWS key id for authenticating with the AWS API.\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            # This is only here for examples. It\u0026#39;s recommended you instead use\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            # a project like kube2iam for granting access.\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            #- name: AWS_ACCESS_KEY_ID\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            #  value: KEYVALUE\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            # AWS key secret for authenticating with the AWS API.\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            # This is only here for examples. It\u0026#39;s recommended you instead use\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            # a project like kube2iam for granting access.\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            #- name: AWS_SECRET_ACCESS_KEY\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e            #  value: SECRETVALUE\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e          # Repository location of the ALB Ingress Controller.\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e          image: 894847497797.dkr.ecr.us-west-2.amazonaws.com/aws-alb-ingress-controller:v1.0.0\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e          imagePullPolicy: Always\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e          name: server\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e          resources: {}\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e          terminationMessagePath: /dev/termination-log\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e      dnsPolicy: ClusterFirst\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e      restartPolicy: Always\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e      securityContext: {}\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e      terminationGracePeriodSeconds: 30\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e      serviceAccountName: alb-ingress\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e      serviceAccount: alb-ingress\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003eEOF\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nNote that I only modified the args section if you want to compare it with the original.\u003c/p\u003e\n\n\u003cp\u003eThen finally apply it.\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ekubectl apply -f alb-ingress-controller.yaml\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# deployment.apps \u0026#34;alb-ingress-controller\u0026#34; created\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003ch3 id=\"external-dns\"\u003e\u003cstrong\u003eExternal-dns\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/kubernetes-incubator/external-dns/blob/master/docs/tutorials/aws.md\"\u003eExternal DNS\u003c/a\u003e will update our zone in Route53 based in the ingress rules as well, so everything will be done automatically for us once we add an ingress resource.\u003c/p\u003e\n\n\u003cp\u003eBut first let\u0026rsquo;s attach those policies that we created before:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eaws iam attach-role-policy --policy-arn arn:aws:iam::894527626897:policy/kops-route53-policy --role-name nodes.k8s.techsquad.rocks\naws iam attach-role-policy --policy-arn arn:aws:iam::894527626897:policy/kops-route53-policy --role-name masters.k8s.techsquad.rocks\naws iam attach-role-policy --policy-arn arn:aws:iam::894527626897:policy/kops-alb-policy --role-name nodes.k8s.techsquad.rocks\naws iam attach-role-policy --policy-arn arn:aws:iam::894527626897:policy/kops-alb-policy --role-name masters.k8s.techsquad.rocks\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nNote that we just used the policies that we created before but we needed the cluster running because kops creates the roles nodes.k8s.techsquad.rocks and masters.k8s.techsquad.rocks, and this is needed for the aws-alb-ingress-controller and external-dns so these are able to do their job.\u003c/p\u003e\n\n\u003cp\u003eWe need to download the manifests and modify a few parameters to match our deployment, the parameters are domain-filter and txt-owner-id, the rest is as is:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ecurl -Ss https://raw.githubusercontent.com/kubernetes-sigs/aws-alb-ingress-controller/v1.1.0/docs/examples/external-dns.yaml \u0026gt; external-dns.yaml\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nThis configuration will only update records, that\u0026rsquo;s the default policy (upsert), and it will only look for public hosted zones.\u003c/p\u003e\n\n\u003cp\u003eOr copy and paste the following lines:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ecat \u003cspan style=\"color:#e6db74\"\u003e\u0026lt;\u0026lt; EOF \u0026gt; external-dns.yaml\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003eapiVersion: v1\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003ekind: ServiceAccount\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003emetadata:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  name: external-dns\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e---\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003eapiVersion: rbac.authorization.k8s.io/v1beta1\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003ekind: ClusterRole\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003emetadata:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  name: external-dns\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003erules:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e- apiGroups: [\u0026#34;\u0026#34;]\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  resources: [\u0026#34;services\u0026#34;]\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  verbs: [\u0026#34;get\u0026#34;,\u0026#34;watch\u0026#34;,\u0026#34;list\u0026#34;]\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e- apiGroups: [\u0026#34;\u0026#34;]\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  resources: [\u0026#34;pods\u0026#34;]\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  verbs: [\u0026#34;get\u0026#34;,\u0026#34;watch\u0026#34;,\u0026#34;list\u0026#34;]\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e- apiGroups: [\u0026#34;extensions\u0026#34;]\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  resources: [\u0026#34;ingresses\u0026#34;]\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  verbs: [\u0026#34;get\u0026#34;,\u0026#34;watch\u0026#34;,\u0026#34;list\u0026#34;]\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e- apiGroups: [\u0026#34;\u0026#34;]\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  resources: [\u0026#34;nodes\u0026#34;]\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  verbs: [\u0026#34;list\u0026#34;]\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e---\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003eapiVersion: rbac.authorization.k8s.io/v1beta1\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003ekind: ClusterRoleBinding\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003emetadata:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  name: external-dns-viewer\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003eroleRef:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  apiGroup: rbac.authorization.k8s.io\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  kind: ClusterRole\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  name: external-dns\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003esubjects:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e- kind: ServiceAccount\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  name: external-dns\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  namespace: default\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e---\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003eapiVersion: extensions/v1beta1\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003ekind: Deployment\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003emetadata:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  name: external-dns\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003espec:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  strategy:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e    type: Recreate\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  template:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e    metadata:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e      labels:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e        app: external-dns\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e    spec:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e      serviceAccountName: external-dns\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e      containers:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e      - name: external-dns\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e        image: registry.opensource.zalan.do/teapot/external-dns:v0.5.9\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e        args:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e        - --source=service\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e        - --source=ingress\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e        - --domain-filter=k8s.techsquad.rocks # will make ExternalDNS see only the hosted zones matching provided domain, omit to process all available hosted zones\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e        - --provider=aws\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e        - --policy=upsert-only # would prevent ExternalDNS from deleting any records, omit to enable full synchronization\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e        - --aws-zone-type=public # only look at public hosted zones (valid values are public, private or no value for both)\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e        - --registry=txt\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e        - --txt-owner-id=k8s.techsquad.rocks\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003eEOF\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cp\u003eAnd apply it:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ekubectl apply -f external-dns.yaml\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# serviceaccount \u0026#34;external-dns\u0026#34; unchanged\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# clusterrole.rbac.authorization.k8s.io \u0026#34;external-dns\u0026#34; configured\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# clusterrolebinding.rbac.authorization.k8s.io \u0026#34;external-dns-viewer\u0026#34; configured\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# deployment.extensions \u0026#34;external-dns\u0026#34; created\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cp\u003eValidate that we have everything that we installed up and running:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ekubectl get pods\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# NAME                            READY     STATUS    RESTARTS   AGE\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# external-dns-7d7998f7bb-lb5kq   1/1       Running   0          2m\u003c/span\u003e\n\nkubectl get pods -n kube-system\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# NAME                                                   READY     STATUS    RESTARTS   AGE\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# alb-ingress-controller-5885ddd5f9-9rsc8                1/1       Running   0          12m\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# calico-kube-controllers-f6bc47f75-n99tl                1/1       Running   0          27m\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# calico-node-4ps9c                                      2/2       Running   0          25m\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# calico-node-kjztv                                      2/2       Running   0          27m\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# calico-node-zs4fg                                      2/2       Running   0          25m\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# dns-controller-67f5c6b7bd-r67pl                        1/1       Running   0          27m\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# etcd-server-events-ip-172-20-42-37.ec2.internal        1/1       Running   0          26m\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# etcd-server-ip-172-20-42-37.ec2.internal               1/1       Running   0          26m\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# kube-apiserver-ip-172-20-42-37.ec2.internal            1/1       Running   0          27m\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# kube-controller-manager-ip-172-20-42-37.ec2.internal   1/1       Running   0          26m\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# kube-dns-756bfc7fdf-2kzjs                              3/3       Running   0          24m\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# kube-dns-756bfc7fdf-rq5nd                              3/3       Running   0          27m\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# kube-dns-autoscaler-787d59df8f-c2d52                   1/1       Running   0          27m\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# kube-proxy-ip-172-20-42-109.ec2.internal               1/1       Running   0          25m\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# kube-proxy-ip-172-20-42-37.ec2.internal                1/1       Running   0          26m\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# kube-proxy-ip-172-20-54-175.ec2.internal               1/1       Running   0          25m\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# kube-scheduler-ip-172-20-42-37.ec2.internal            1/1       Running   0          26m\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nWe can see that alb-ingress-controller is running, also external-dns, and everything looks good and healthy, time to test it with a deployment.\u003c/p\u003e\n\n\u003ch3 id=\"testing-everything\"\u003e\u003cstrong\u003eTesting everything\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ekubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/aws-alb-ingress-controller/v1.0.0/docs/examples/2048/2048-namespace.yaml\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/aws-alb-ingress-controller/v1.0.0/docs/examples/2048/2048-deployment.yaml\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/aws-alb-ingress-controller/v1.0.0/docs/examples/2048/2048-service.yaml\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# namespace \u0026#34;2048-game\u0026#34; created\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# deployment.extensions \u0026#34;2048-deployment\u0026#34; created\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# service \u0026#34;service-2048\u0026#34; created\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\u003cp\u003eWe need to download and edit the ingress resource to make it use our domain so we can then see the record pointing to the ALB.\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ecurl -Ss https://raw.githubusercontent.com/kubernetes-sigs/aws-alb-ingress-controller/v1.0.0/docs/examples/2048/2048-ingress.yaml \u0026gt; \u003cspan style=\"color:#ae81ff\"\u003e2048\u003c/span\u003e-ingress.yaml\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cp\u003eOr just copy and paste the next snippet.\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ecat \u003cspan style=\"color:#e6db74\"\u003e\u0026lt;\u0026lt; EOF \u0026gt; 2048-ingress.yaml\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003eapiVersion: extensions/v1beta1\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003ekind: Ingress\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003emetadata:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  name: \u0026#34;2048-ingress\u0026#34;\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  namespace: \u0026#34;2048-game\u0026#34;\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  annotations:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e    kubernetes.io/ingress.class:                alb\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e    alb.ingress.kubernetes.io/scheme:           internet-facing\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e    alb.ingress.kubernetes.io/target-type:      instance\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e    alb.ingress.kubernetes.io/subnets:          subnet-017a5609ce6104e1b, subnet-060e6d3c3d3c2b34a\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e    alb.ingress.kubernetes.io/security-groups:  sg-09f0b1233696e65ef\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e    # You can check all the alternatives here:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e    # https://github.com/riccardofreixo/alb-ingress-controller/blob/master/docs/ingress-resources.md\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  labels:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e    app: 2048-ingress\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003espec:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  rules:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e  - host: 2048.k8s.techsquad.rocks\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e    http:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e      paths:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e      - backend:\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e          serviceName: \u0026#34;service-2048\u0026#34;\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e          servicePort: 80\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e        path: /*\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003eEOF\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nYou can use \u003ccode\u003eaws ec2 describe-subnets\u003c/code\u003e, to find the first subnet id, this subnet already has some tags that we need in order to make it work, for example: \u003ccode\u003ekubernetes.io/role/elb: 1\u003c/code\u003e, and the second subnet is the one that we created manually and applied the same tags.\u003c/p\u003e\n\n\u003cp\u003eAnd finally apply it:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ekubectl apply -f \u003cspan style=\"color:#ae81ff\"\u003e2048\u003c/span\u003e-ingress.yaml\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# ingress.extensions \u0026#34;2048-ingress\u0026#34; created\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nWait a few moments and verify.\u003c/p\u003e\n\n\u003ch3 id=\"results\"\u003e\u003cstrong\u003eResults\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cp\u003e\u003cstrong\u003eThe ALB\u003c/strong\u003e\n\u003cfigure class=\"zoom\"\u003e\n    \u003cimg src=\"/img/aws-alb-listeners.png\" width=\"100%\"/\u003e \n\u003c/figure\u003e\n\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eThe DNS records\u003c/strong\u003e\n\u003cfigure class=\"zoom\"\u003e\n    \u003cimg src=\"/img/aws-alb-route53-records.png\" width=\"100%\"/\u003e \n\u003c/figure\u003e\n\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eAnd the app\u003c/strong\u003e\n\u003cfigure class=\"zoom\"\u003e\n    \u003cimg src=\"/img/aws-alb-result.png\" width=\"100%\"/\u003e \n\u003c/figure\u003e\n\u003c/p\u003e\n\n\u003ch3 id=\"clean-up\"\u003e\u003cstrong\u003eClean up\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cp\u003eRemember this is not free, and if you don\u0026rsquo;t want to get charged after you\u0026rsquo;re done testing just shutdown and delete everything.\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ekubectl delete -f \u003cspan style=\"color:#ae81ff\"\u003e2048\u003c/span\u003e-ingress.yaml\naws iam detach-role-policy --policy-arn arn:aws:iam::894527626897:policy/kops-route53-policy --role-name nodes.k8s.techsquad.rocks\naws iam detach-role-policy --policy-arn arn:aws:iam::894527626897:policy/kops-route53-policy --role-name masters.k8s.techsquad.rocks\naws iam detach-role-policy --policy-arn arn:aws:iam::894527626897:policy/kops-alb-policy --role-name nodes.k8s.techsquad.rocks\naws iam detach-role-policy --policy-arn arn:aws:iam::894527626897:policy/kops-alb-policy --role-name masters.k8s.techsquad.rocks\n\nkops delete cluster \u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003eNAME\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e --yes\n\u003cspan style=\"color:#75715e\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# ...\u003c/span\u003e\n\u003cspan style=\"color:#75715e\"\u003e# Deleted kubectl config for k8s.techsquad.rocks\u003c/span\u003e\n#\n\u003cspan style=\"color:#75715e\"\u003e# Deleted cluster: \u0026#34;k8s.techsquad.rocks\u0026#34;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nThis command is really verbose, so I skipped it to the end, be aware that in order to delete the cluster with kops you first need to detach the additionally attached privileges. Also be careful to delete first the ingress resources so the ALB gets removed before you delete the cluster, or you will have an ALB laying around afterwards. You can re-run it if it gets stuck and cannot delete any resource.\u003c/p\u003e\n\n\u003ch3 id=\"notes\"\u003e\u003cstrong\u003eNotes\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003eI was going to use helm and deploy a more complex application here, but the article was already too long, so I decided to go with the aws alb ingress controller example.\u003c/li\u003e\n\u003cli\u003eIf something doesn\u0026rsquo;t go well or things aren\u0026rsquo;t happening you can always check the logs for external-dns and aws-alb-ingress-controller, the messages are usually very descriptive and easy to understand.\u003c/li\u003e\n\u003cli\u003eFor an ALB you need two subnets in two different AZs beforehand.\u003c/li\u003e\n\u003cli\u003eIf you are going to use ALBs, have in mind that it will create an ALB for each deployment, there is a small project that merges everything into one ALB but you need to have a unified or consolidated way to do health checks or or some of the apps will fail and the ALB will return a 502, the project can be found \u003ca href=\"https://github.com/jakubkulhan/ingress-merge\"\u003ehere\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eDocumenting what you do and how you do it (Also keeping the documentation updated is really important), not only will help the future you (Yes, you can thank your past self when reading and old doc), but also it will make it easier to share the knowledge and purpose of whatever you are implementing with your team.\u003c/li\u003e\n\u003cli\u003eI spent 3 bucks with all the instances and dns zones, etc during this tutorial in case you are interested :).\u003c/li\u003e\n\u003cli\u003eNotes I also removed all $ from the code blocks and added the output of the commands with # OUTPUT:, let me know if this is clear and easy to read, or if you have any suggestion.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"errata\"\u003eErrata\u003c/h3\u003e\n\n\u003cp\u003eIf you spot any error or have any suggestion, please send me a message so it gets fixed.\u003c/p\u003e\n\n\u003cp\u003eAlso, you can check the source code and changes in the \u003ca href=\"https://github.com/kainlite/kainlite.github.io\"\u003egenerated code\u003c/a\u003e and the \u003ca href=\"https://github.com/kainlite/blog\"\u003esources here\u003c/a\u003e\u003c/p\u003e\n"
    }, 
    {
      "id": "https://techsquad.rocks/blog/my_local_environment/",
      "url": "https://techsquad.rocks/blog/my_local_environment/",
      "title": "My local environment",
      "date_published": "2019-01-12T00:00:00Z",
      "tags": ["urxvt","vim","linux","tmux"],
      "content_html": "\n\n\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\n\u003cp\u003eThis article is about my current configuration, but I\u0026rsquo;m going to talk only about the terminal and my text editor because those will work in any linux distribution, I\u0026rsquo;m currently using \u003cstrong\u003eArch Linux\u003c/strong\u003e and \u003cstrong\u003eAwesomeWM\u003c/strong\u003e (I used Gnome Shell previously, and Gnome 2 before that), you can find my \u003ca href=\"https://github.com/kainlite/dotfiles\"\u003edotfiles here\u003c/a\u003e with all my configurations.\u003c/p\u003e\n\n\u003cp\u003eWhile my terminal doesn\u0026rsquo;t look exactly like the one from the picture you can get something like that with \u003ca href=\"https://github.com/jtyr/gbt\"\u003eGBT\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3 id=\"terminal\"\u003eTerminal\u003c/h3\u003e\n\n\u003cp\u003eMy current terminal is \u003cstrong\u003erxvt-unicode\u003c/strong\u003e and I\u0026rsquo;m pretty happy with it, it\u0026rsquo;s relatively easy to configure and use, it looks like this:\n\u003cfigure class=\"zoom\"\u003e\n    \u003cimg src=\"/img/urxvt.png\" width=\"100%\"/\u003e \n\u003c/figure\u003e\n\nAnd the configuration file can be \u003ca href=\"https://github.com/kainlite/dotfiles/blob/master/.Xresources\"\u003efound here\u003c/a\u003e, note that even if you don\u0026rsquo;t like Ponys by any reason, it\u0026rsquo;s useful to test colors in the terminal.\u003c/p\u003e\n\n\u003cp\u003eIt\u0026rsquo;s different than other terminals I have tried in the way it manages and uses the configuration, it uses an additional tool called \u003ccode\u003exrdb\u003c/code\u003e (X server resource database utility) to manage the configuration provided in the configuration file \u003ccode\u003e.Xresources\u003c/code\u003e.\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"color:#75715e\"\u003e# Loads the configuration from Xresources in xrdb\u003c/span\u003e\n$ xrdb -merge .Xresources\n\n\u003cspan style=\"color:#75715e\"\u003e# List the current configuration\u003c/span\u003e\n$ xrdb -query\n\n\u003cspan style=\"color:#75715e\"\u003e# Deletes the current database\u003c/span\u003e\n$ xrdb -remove\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003ch3 id=\"theme\"\u003eTheme\u003c/h3\u003e\n\n\u003cp\u003eMy current theme is \u003ca href=\"https://github.com/morhetz/gruvbox\"\u003egruvbox\u003c/a\u003e in Vim and also in my \u003ca href=\"https://github.com/morhetz/gruvbox-contrib/blob/master/xresources/gruvbox-dark.xresources\"\u003eterminal\u003c/a\u003e, and changing from \u003ca href=\"https://ethanschoonover.com/solarized/\"\u003esolazired\u003c/a\u003e to it is what inspired this small article.\u003c/p\u003e\n\n\u003ch3 id=\"tmux\"\u003eTmux\u003c/h3\u003e\n\n\u003cp\u003eI also use tmux to maintan sessions, some of it\u0026rsquo;s nice features are tiling, tabs. The configuration can be \u003ca href=\"https://github.com/kainlite/dotfiles/blob/master/.tmux.conf\"\u003efound here\u003c/a\u003e. I move between tabs with control-h and control-l, and between panes with control-a [hjkl].\u003c/p\u003e\n\n\u003ch3 id=\"vim\"\u003eVim\u003c/h3\u003e\n\n\u003cp\u003eAs my text editor I really like and enjoy using Vim, there is always something to learn but once you make some good habits it pays off in the way you write and move around, you can check some amazing screencasts on vim \u003ca href=\"http://vimcasts.org/\"\u003ehere\u003c/a\u003e and also the book Practical Vim can be really helpful to get started and/or improve your current vim-fu.\u003c/p\u003e\n\n\u003cp\u003eAs a plugin manager I use \u003ca href=\"https://github.com/kainlite/dotfiles/blob/master/.vimrc.bundles\"\u003ePlug\u003c/a\u003e even that it\u0026rsquo;s not really necessary with Vim 8, but that is a matter of taste I guess. You can see my full vim configuration \u003ca href=\"https://github.com/kainlite/dotfiles/blob/master/.vimrc\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eIt looks something like this, as you can see I have a small tmux pane in the bottom with Hugo \u003cem\u003ecompiling\u003c/em\u003e the site after every save and live reloading it in my browser:\n\u003cfigure class=\"zoom\"\u003e\n    \u003cimg src=\"/img/vim.png\" width=\"100%\"/\u003e \n\u003c/figure\u003e\n\u003c/p\u003e\n\n\u003ch3 id=\"notes\"\u003eNotes\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003eI\u0026rsquo;m also using zsh and \u003ca href=\"https://ohmyz.sh/\"\u003eoh-my-zsh\u003c/a\u003e with the theme agnoster. I really like zsh it\u0026rsquo;s fast and has some nice features like autocomplete everywhere, but again this is a matter of taste.\u003c/li\u003e\n\u003cli\u003eI like to take advantage of all the space in the screen, that\u0026rsquo;s why AwesomeWM fits great (even that I do not use the tiling feature a lot, tabs and full screen apps), with some minor configuration I\u0026rsquo;m able to do everything from the keyboard, I use the mouse when checking emails and things like that but otherwise the keyboard is more than enough.\u003c/li\u003e\n\u003cli\u003eI used cowsay and ponysay in the first screenshot so you can have an idea of how the terminal looks like.\u003c/li\u003e\n\u003cli\u003eIf you are going to use unicode I recommend you to install the fonts from nerd-fonts.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"errata\"\u003eErrata\u003c/h3\u003e\n\n\u003cp\u003eIf you spot any error or have any suggestion, please send me a message so it gets fixed.\u003c/p\u003e\n\n\u003cp\u003eAlso, you can check the source code and changes in the \u003ca href=\"https://github.com/kainlite/kainlite.github.io\"\u003egenerated code\u003c/a\u003e and the \u003ca href=\"https://github.com/kainlite/blog\"\u003esources here\u003c/a\u003e\u003c/p\u003e\n"
    }, 
    {
      "id": "https://techsquad.rocks/blog/exploring_some_istio_features/",
      "url": "https://techsquad.rocks/blog/exploring_some_istio_features/",
      "title": "Exploring some Istio features",
      "date_published": "2019-01-10T00:00:00Z",
      "tags": ["istio","routing","service-mesh","kubernetes"],
      "content_html": "\n\n\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\n\u003cp\u003eThis article builds up on what we did in the \u003ca href=\"https://techsquad.rocks/blog/why_do_i_need_a_service_mesh/\"\u003elast article\u003c/a\u003e, so refer to that one before starting this one, if you are planing to follow the documentation examples you will find many similarities since I based this article on that.\u003c/p\u003e\n\n\u003cp\u003eIn this example I will be using \u003ca href=\"https://m.do.co/c/01d040b789de\"\u003eDigital Ocean\u003c/a\u003e (that\u0026rsquo;s my referral link), note that I do not have any association with Digital Ocean but they give you $100 to test their products for 60 days, if you spend $25 I get another $25.\u003c/p\u003e\n\n\u003ch3 id=\"before-starting-a-few-concepts\"\u003eBefore starting a few concepts\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003eA VirtualService defines the rules that control how requests for a service are routed within an Istio service mesh.\u003c/li\u003e\n\u003cli\u003eA DestinationRule configures the set of policies to be applied to a request after VirtualService routing has occurred.\u003c/li\u003e\n\u003cli\u003eA ServiceEntry is commonly used to enable requests to services outside of an Istio service mesh.\u003c/li\u003e\n\u003cli\u003eA Gateway configures a load balancer for HTTP/TCP traffic, most commonly operating at the edge of the mesh to enable ingress traffic for an application.\nThese basic concepts will help you understand the manifest that we are going to see.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"let-s-get-started\"\u003eLet\u0026rsquo;s get started\u003c/h3\u003e\n\n\u003cp\u003eWe already have the bookinfo project deployed and using all three versions of the service (ratings) but we will need to make some changes to test route based on user identity, you can check the configuration with:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e$ kubectl get destinationrules -o yaml\napiVersion: v1\nitems:\n- apiVersion: networking.istio.io/v1alpha3\n  kind: DestinationRule\n  metadata:\n    annotations:\n      kubectl.kubernetes.io/last-applied-configuration: |\n        \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;apiVersion\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;networking.istio.io/v1alpha3\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;kind\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;DestinationRule\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;metadata\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;annotations\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{}\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;details\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;namespace\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;default\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;spec\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;host\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;details\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;subsets\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e[{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;labels\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;version\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;v1\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;v1\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;labels\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;version\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;v2\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;v2\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}]}}\u003c/span\u003e\n    creationTimestamp: \u003cspan style=\"color:#ae81ff\"\u003e2019\u003c/span\u003e-01-11T00:58:54Z\n    generation: \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\n    name: details\n    namespace: default\n    resourceVersion: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;921688\u0026#34;\u003c/span\u003e\n    selfLink: /apis/networking.istio.io/v1alpha3/namespaces/default/destinationrules/details\n    uid: \u003cspan style=\"color:#ae81ff\"\u003e11490656\u003c/span\u003e-153c-11e9-9eda-6a85233ec1d5\n  spec:\n    host: details\n    subsets:\n    - labels:\n        version: v1\n      name: v1\n    - labels:\n        version: v2\n      name: v2\n- apiVersion: networking.istio.io/v1alpha3\n  kind: DestinationRule\n  metadata:\n    annotations:\n      kubectl.kubernetes.io/last-applied-configuration: |\n        \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;apiVersion\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;networking.istio.io/v1alpha3\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;kind\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;DestinationRule\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;metadata\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;annotations\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{}\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;productpage\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;namespace\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;default\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;spec\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;host\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;productpage\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;subsets\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e[{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;labels\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;version\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;v1\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;v1\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}]}}\u003c/span\u003e\n    creationTimestamp: \u003cspan style=\"color:#ae81ff\"\u003e2019\u003c/span\u003e-01-11T00:58:53Z\n    generation: \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\n    name: productpage\n    namespace: default\n    resourceVersion: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;921684\u0026#34;\u003c/span\u003e\n    selfLink: /apis/networking.istio.io/v1alpha3/namespaces/default/destinationrules/productpage\n    uid: 10a42a24-153c-11e9-9eda-6a85233ec1d5\n  spec:\n    host: productpage\n    subsets:\n    - labels:\n        version: v1\n      name: v1\n- apiVersion: networking.istio.io/v1alpha3\n  kind: DestinationRule\n  metadata:\n    annotations:\n      kubectl.kubernetes.io/last-applied-configuration: |\n        \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;apiVersion\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;networking.istio.io/v1alpha3\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;kind\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;DestinationRule\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;metadata\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;annotations\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{}\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;ratings\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;namespace\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;default\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;spec\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;host\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;ratings\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;subsets\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e[{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;labels\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;version\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;v1\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;v1\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;labels\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;version\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;v2\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;v2\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;labels\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;version\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;v2-mysql\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;v2-mysql\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;labels\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;version\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;v2-mysql-vm\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;v2-mysql-vm\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}]}}\u003c/span\u003e\n    creationTimestamp: \u003cspan style=\"color:#ae81ff\"\u003e2019\u003c/span\u003e-01-11T00:58:54Z\n    generation: \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\n    name: ratings\n    namespace: default\n    resourceVersion: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;921686\u0026#34;\u003c/span\u003e\n    selfLink: /apis/networking.istio.io/v1alpha3/namespaces/default/destinationrules/ratings\n    uid: 111299e1-153c-11e9-9eda-6a85233ec1d5\n  spec:\n    host: ratings\n    subsets:\n    - labels:\n        version: v1\n      name: v1\n    - labels:\n        version: v2\n      name: v2\n    - labels:\n        version: v2-mysql\n      name: v2-mysql\n    - labels:\n        version: v2-mysql-vm\n      name: v2-mysql-vm\n- apiVersion: networking.istio.io/v1alpha3\n  kind: DestinationRule\n  metadata:\n    annotations:\n      kubectl.kubernetes.io/last-applied-configuration: |\n        \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;apiVersion\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;networking.istio.io/v1alpha3\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;kind\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;DestinationRule\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;metadata\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;annotations\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{}\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;reviews\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;namespace\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;default\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;spec\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;host\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;reviews\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;subsets\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e[{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;labels\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;version\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;v1\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;v1\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;labels\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;version\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;v2\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;v2\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;labels\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;version\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;v3\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;v3\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}]}}\u003c/span\u003e\n    creationTimestamp: \u003cspan style=\"color:#ae81ff\"\u003e2019\u003c/span\u003e-01-11T00:58:53Z\n    generation: \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\n    name: reviews\n    namespace: default\n    resourceVersion: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;921685\u0026#34;\u003c/span\u003e\n    selfLink: /apis/networking.istio.io/v1alpha3/namespaces/default/destinationrules/reviews\n    uid: 10db9ee2-153c-11e9-9eda-6a85233ec1d5\n  spec:\n    host: reviews\n    subsets:\n    - labels:\n        version: v1\n      name: v1\n    - labels:\n        version: v2\n      name: v2\n    - labels:\n        version: v3\n      name: v3\nkind: List\nmetadata:\n  resourceVersion: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\n  selfLink: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nThere we have all the destination rules, and now we need to apply the new manifest that will send everything to the version 1 and the user \u003cem\u003ejason\u003c/em\u003e to the version 2 of the reviews microservice.\u003c/p\u003e\n\n\u003cp\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eistio-1.0.5/samples/bookinfo $ kubectl apply -f networking/virtual-service-reviews-test-v2.yaml\nvirtualservice.networking.istio.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;reviews\u0026#34;\u003c/span\u003e created\n\n$ kubectl get virtualservice reviews -o yaml\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: |\n      \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;apiVersion\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;networking.istio.io/v1alpha3\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;kind\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;VirtualService\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;metadata\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;annotations\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{}\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;reviews\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;namespace\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;default\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;spec\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;hosts\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;reviews\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;http\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e[{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;match\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e[{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;headers\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;end-user\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;exact\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;jason\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}}}]\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;route\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e[{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;destination\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;host\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;reviews\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;subset\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;v2\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}}]}\u003c/span\u003e,\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;route\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e[{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;destination\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;host\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;reviews\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;subset\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;v1\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}}]}]}}\u003c/span\u003e\n  creationTimestamp: \u003cspan style=\"color:#ae81ff\"\u003e2019\u003c/span\u003e-01-11T02:30:35Z\n  generation: \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\n  name: reviews\n  namespace: default\n  resourceVersion: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;930577\u0026#34;\u003c/span\u003e\n  selfLink: /apis/networking.istio.io/v1alpha3/namespaces/default/virtualservices/reviews\n  uid: e0701f0d-1548-11e9-9eda-6a85233ec1d5\nspec:\n  hosts:\n  - reviews\n  http:\n  - match:\n    - headers:\n        end-user:\n          exact: jason\n    route:\n    - destination:\n        host: reviews\n        subset: v2\n  - route:\n    - destination:\n        host: reviews\n        subset: v1\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nWhat\u0026rsquo;s going on here, how Istio knows what user is logged in?, well, the app adds a header called end-user and value \u003cem\u003ejason\u003c/em\u003e then the route will be used, it\u0026rsquo;s a nifty trick.\u003c/p\u003e\n\n\u003cp\u003eNot jason:\n\u003cfigure class=\"zoom\"\u003e\n    \u003cimg src=\"/img/istio-servicev1.png\" width=\"100%\"/\u003e \n\u003c/figure\u003e\n\u003c/p\u003e\n\n\u003cp\u003ejason:\n\u003cfigure class=\"zoom\"\u003e\n    \u003cimg src=\"/img/istio-servicev2.png\" width=\"100%\"/\u003e \n\u003c/figure\u003e\n\nAs you can see the difference in the v1 and v2 of the app are the stars below the reviews, but that is more than enough to indicate that it works, this is really nice for beta testers you don\u0026rsquo;t need or have to complicate your code but just add a header.\u003c/p\u003e\n\n\u003ch3 id=\"injecting-an-http-abort-fault\"\u003eInjecting an HTTP abort fault:\u003c/h3\u003e\n\n\u003cp\u003eThis time we will inject a failure for our friend \u003cem\u003ejason\u003c/em\u003e:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eistio-1.0.5/samples/bookinfo $ kubectl apply -f networking/virtual-service-ratings-test-abort.yaml\nvirtualservice.networking.istio.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;ratings\u0026#34;\u003c/span\u003e created\n\n$ kubectl get virtualservice ratings -o yaml\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: |\n      \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;apiVersion\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;networking.istio.io/v1alpha3\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;kind\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;VirtualService\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;metadata\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;annotations\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{}\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;ratings\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;namespace\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;default\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;spec\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;hosts\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;ratings\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;http\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e[{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;fault\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;abort\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;httpStatus\u0026#34;\u003c/span\u003e:500,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;percent\u0026#34;\u003c/span\u003e:100\u003cspan style=\"color:#f92672\"\u003e}}\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;match\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e[{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;headers\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;end-user\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;exact\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;jason\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}}}]\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;route\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e[{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;destination\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;host\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;ratings\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;subset\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;v1\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}}]}\u003c/span\u003e,\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;route\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e[{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;destination\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;host\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;ratings\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;subset\u0026#34;\u003c/span\u003e:\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;v1\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e}}]}]}}\u003c/span\u003e\n  creationTimestamp: \u003cspan style=\"color:#ae81ff\"\u003e2019\u003c/span\u003e-01-11T02:50:59Z\n  generation: \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\n  name: ratings\n  namespace: default\n  resourceVersion: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;932552\u0026#34;\u003c/span\u003e\n  selfLink: /apis/networking.istio.io/v1alpha3/namespaces/default/virtualservices/ratings\n  uid: b98799b0-154b-11e9-9eda-6a85233ec1d5\nspec:\n  hosts:\n  - ratings\n  http:\n  - fault:\n      abort:\n        httpStatus: \u003cspan style=\"color:#ae81ff\"\u003e500\u003c/span\u003e\n        percent: \u003cspan style=\"color:#ae81ff\"\u003e100\u003c/span\u003e\n    match:\n    - headers:\n        end-user:\n          exact: jason\n    route:\n    - destination:\n        host: ratings\n        subset: v1\n  - route:\n    - destination:\n        host: ratings\n        subset: v1\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cp\u003eSo he decided to check the book reviews again and boom, the ratings service was not available but everything else works just fine, this only applies for \u003cem\u003ejason\u003c/em\u003e everyone else will see the version without stars or the error message.\n\u003cfigure class=\"zoom\"\u003e\n    \u003cimg src=\"/img/istio-servicev3.png\" width=\"100%\"/\u003e \n\u003c/figure\u003e\n\u003c/p\u003e\n\n\u003ch3 id=\"notes\"\u003eNotes\u003c/h3\u003e\n\n\u003cp\u003eIstio seems an it is indeed really powerful, there many more features like:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eTraffic shifting.\u003c/li\u003e\n\u003cli\u003eRequests timeouts.\u003c/li\u003e\n\u003cli\u003eCircuit breaking.\u003c/li\u003e\n\u003cli\u003eMirroring.\u003c/li\u003e\n\u003cli\u003eAnd a lot more.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eI left aside Policies, Telemetry and Security, if you want to learn more about Istio I highly recommend you to try the examples yourself and read on the \u003ca href=\"https://istio.io/docs/tasks/traffic-management/#collapse24\"\u003eofficial documentation\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eI also spent some time improving the navigation of the blog and some other minor details, but I wanted to keep the articles going so that\u0026rsquo;s why this one is so simple and similar to the documentation.\u003c/p\u003e\n\n\u003ch3 id=\"upcoming-topics-and-ideas\"\u003eUpcoming topics and ideas\u003c/h3\u003e\n\n\u003cp\u003eI Want to start creating series of content on different topics, brief articles that can get you started with some new technology or maybe give you an idea of how it works, let me know if you are interested in that kind of content in the comments or via twitter 🐦 (it\u0026rsquo;s a bird, in case you cannot see unicode characters).\u003c/p\u003e\n\n\u003ch3 id=\"errata\"\u003eErrata\u003c/h3\u003e\n\n\u003cp\u003eIf you spot any error or have any suggestion, please send me a message so it gets fixed.\u003c/p\u003e\n\n\u003cp\u003eAlso, you can check the source code and changes in the \u003ca href=\"https://github.com/kainlite/kainlite.github.io\"\u003egenerated code\u003c/a\u003e and the \u003ca href=\"https://github.com/kainlite/blog\"\u003esources here\u003c/a\u003e\u003c/p\u003e\n"
    }, 
    {
      "id": "https://techsquad.rocks/blog/why_do_i_need_a_service_mesh/",
      "url": "https://techsquad.rocks/blog/why_do_i_need_a_service_mesh/",
      "title": "Why do I need a service mesh?",
      "date_published": "2019-01-06T00:00:00Z",
      "tags": ["istio","service-mesh","kubernetes"],
      "content_html": "\n\n\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\n\u003cp\u003eThis time we will see how to get started with \u003ca href=\"https://istio.io/\"\u003eIstio\u003c/a\u003e and why do we need to use a service mesh.\u003c/p\u003e\n\n\u003cp\u003eIn this example I will be using \u003ca href=\"https://m.do.co/c/01d040b789de\"\u003eDigital Ocean\u003c/a\u003e (that\u0026rsquo;s my referral link), note that I do not have any association with Digital Ocean but they give you $100 to test their products for 60 days, if you spend $25 I get another $25.\u003c/p\u003e\n\n\u003ch3 id=\"istio\"\u003eIstio\u003c/h3\u003e\n\n\u003cp\u003eSo\u0026hellip; You might be wondering some of those questions: why Istio? Why do I need a service mesh?, when do I need that? And I want to help you with some answers:\u003c/p\u003e\n\n\u003cp\u003eWhy do I need a service mesh? Basically because in cloud environments you cannot trust that the network will be reliable 100% of the time, that the latency will be low, that the network is secure and the bandwidth is infinite, the service mesh is just an extra layer to help microservices communicate with each other safely and reliably.\u003c/p\u003e\n\n\u003cp\u003eWhen do I need to have one? This one can be tricky and will depend on your environment, but the moment that you start experiencing network issues between your microservices would be a good moment to do it, it could be done before of course, but it will highly depend on the project, if you can start early with it the better and easier to implement will be, always have in mind the benefits of added security, observability and likely performance improvement.\u003c/p\u003e\n\n\u003cp\u003eWhy Istio? This will be a small series of service meshes for kubernetes and I decided to start with Istio.\u003c/p\u003e\n\n\u003cp\u003eIn case you don\u0026rsquo;t agree with my explanations that\u0026rsquo;s ok, this is a TL;DR version and also I simplified things a lot, for a more complete overview you can check \u003ca href=\"https://blog.buoyant.io/2017/04/25/whats-a-service-mesh-and-why-do-i-need-one/\"\u003ethis\u003c/a\u003e article or \u003ca href=\"https://www.oreilly.com/ideas/do-you-need-a-service-mesh\"\u003ethis one\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3 id=\"let-s-get-started\"\u003eLet\u0026rsquo;s get started\u003c/h3\u003e\n\n\u003cp\u003eFirst of all we need to download and install Istio in our cluster, the recommended way of doing it is using helm (In this case I will be using the no Tiller alternative, but it could be done with helm install as well, check here for \u003ca href=\"https://istio.io/docs/setup/kubernetes/helm-install/\"\u003emore info\u003c/a\u003e):\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e$ curl -L https://git.io/getLatestIstio | sh -\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nThis will download and extract the latest release, in this case 1.0.5 at this moment.\u003c/p\u003e\n\n\u003cp\u003eSo let\u0026rsquo;s install Istio\u0026hellip; only pay attention to the first 3 commands, then you can skip until the end of the code block, I post all the output because I like full examples :)\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eistio-1.0.5 $ helm template install/kubernetes/helm/istio --name istio --namespace istio-system --set grafana.enabled\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003etrue \u0026gt; $HOME/istio.yaml\nistio-1.0.5 $ kubectl create namespace istio-system\nnamespace \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-system\u0026#34;\u003c/span\u003e created\n\nistio-1.0.5 $ kubectl apply -f $HOME/istio.yaml\nconfigmap \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-galley-configuration\u0026#34;\u003c/span\u003e created\nconfigmap \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-statsd-prom-bridge\u0026#34;\u003c/span\u003e created\nconfigmap \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;prometheus\u0026#34;\u003c/span\u003e created\nconfigmap \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-security-custom-resources\u0026#34;\u003c/span\u003e created\nconfigmap \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio\u0026#34;\u003c/span\u003e created\nconfigmap \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-sidecar-injector\u0026#34;\u003c/span\u003e created\nserviceaccount \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-galley-service-account\u0026#34;\u003c/span\u003e created\nserviceaccount \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-egressgateway-service-account\u0026#34;\u003c/span\u003e created\nserviceaccount \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-ingressgateway-service-account\u0026#34;\u003c/span\u003e created\nserviceaccount \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-mixer-service-account\u0026#34;\u003c/span\u003e created\nserviceaccount \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-pilot-service-account\u0026#34;\u003c/span\u003e created\nserviceaccount \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;prometheus\u0026#34;\u003c/span\u003e created\nserviceaccount \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-cleanup-secrets-service-account\u0026#34;\u003c/span\u003e created\nclusterrole.rbac.authorization.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-cleanup-secrets-istio-system\u0026#34;\u003c/span\u003e created\nclusterrolebinding.rbac.authorization.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-cleanup-secrets-istio-system\u0026#34;\u003c/span\u003e created\njob.batch \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-cleanup-secrets\u0026#34;\u003c/span\u003e created\nserviceaccount \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-security-post-install-account\u0026#34;\u003c/span\u003e created\nclusterrole.rbac.authorization.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-security-post-install-istio-system\u0026#34;\u003c/span\u003e created\nclusterrolebinding.rbac.authorization.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-security-post-install-role-binding-istio-system\u0026#34;\u003c/span\u003e created\njob.batch \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-security-post-install\u0026#34;\u003c/span\u003e created\nserviceaccount \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-citadel-service-account\u0026#34;\u003c/span\u003e created\nserviceaccount \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-sidecar-injector-service-account\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;virtualservices.networking.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;destinationrules.networking.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;serviceentries.networking.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;gateways.networking.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;envoyfilters.networking.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;httpapispecbindings.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;httpapispecs.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;quotaspecbindings.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;quotaspecs.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;rules.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;attributemanifests.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;bypasses.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;circonuses.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;deniers.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;fluentds.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;kubernetesenvs.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;listcheckers.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;memquotas.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;noops.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;opas.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;prometheuses.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;rbacs.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;redisquotas.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;servicecontrols.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;signalfxs.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;solarwindses.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;stackdrivers.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;statsds.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;stdios.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;apikeys.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;authorizations.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;checknothings.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;kuberneteses.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;listentries.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;logentries.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;edges.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;metrics.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;quotas.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;reportnothings.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;servicecontrolreports.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;tracespans.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;rbacconfigs.rbac.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;serviceroles.rbac.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;servicerolebindings.rbac.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;adapters.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;instances.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;templates.config.istio.io\u0026#34;\u003c/span\u003e created\ncustomresourcedefinition.apiextensions.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;handlers.config.istio.io\u0026#34;\u003c/span\u003e created\nclusterrole.rbac.authorization.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-galley-istio-system\u0026#34;\u003c/span\u003e created\nclusterrole.rbac.authorization.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-egressgateway-istio-system\u0026#34;\u003c/span\u003e created\nclusterrole.rbac.authorization.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-ingressgateway-istio-system\u0026#34;\u003c/span\u003e created\nclusterrole.rbac.authorization.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-mixer-istio-system\u0026#34;\u003c/span\u003e created\nclusterrole.rbac.authorization.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-pilot-istio-system\u0026#34;\u003c/span\u003e created\nclusterrole.rbac.authorization.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;prometheus-istio-system\u0026#34;\u003c/span\u003e created\nclusterrole.rbac.authorization.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-citadel-istio-system\u0026#34;\u003c/span\u003e created\nclusterrole.rbac.authorization.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-sidecar-injector-istio-system\u0026#34;\u003c/span\u003e created\nclusterrolebinding.rbac.authorization.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-galley-admin-role-binding-istio-system\u0026#34;\u003c/span\u003e created\nclusterrolebinding.rbac.authorization.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-egressgateway-istio-system\u0026#34;\u003c/span\u003e created\nclusterrolebinding.rbac.authorization.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-ingressgateway-istio-system\u0026#34;\u003c/span\u003e created\nclusterrolebinding.rbac.authorization.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-mixer-admin-role-binding-istio-system\u0026#34;\u003c/span\u003e created\nclusterrolebinding.rbac.authorization.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-pilot-istio-system\u0026#34;\u003c/span\u003e created\nclusterrolebinding.rbac.authorization.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;prometheus-istio-system\u0026#34;\u003c/span\u003e created\nclusterrolebinding.rbac.authorization.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-citadel-istio-system\u0026#34;\u003c/span\u003e created\nclusterrolebinding.rbac.authorization.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-sidecar-injector-admin-role-binding-istio-system\u0026#34;\u003c/span\u003e created\nservice \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-galley\u0026#34;\u003c/span\u003e created\nservice \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-egressgateway\u0026#34;\u003c/span\u003e created\nservice \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-ingressgateway\u0026#34;\u003c/span\u003e created\nservice \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-policy\u0026#34;\u003c/span\u003e created\nservice \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-telemetry\u0026#34;\u003c/span\u003e created\nservice \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-pilot\u0026#34;\u003c/span\u003e created\nservice \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;prometheus\u0026#34;\u003c/span\u003e created\nservice \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-citadel\u0026#34;\u003c/span\u003e created\nservice \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-sidecar-injector\u0026#34;\u003c/span\u003e created\ndeployment.extensions \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-galley\u0026#34;\u003c/span\u003e created\ndeployment.extensions \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-egressgateway\u0026#34;\u003c/span\u003e created\ndeployment.extensions \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-ingressgateway\u0026#34;\u003c/span\u003e created\ndeployment.extensions \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-policy\u0026#34;\u003c/span\u003e created\ndeployment.extensions \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-telemetry\u0026#34;\u003c/span\u003e created\ndeployment.extensions \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-pilot\u0026#34;\u003c/span\u003e created\ndeployment.extensions \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;prometheus\u0026#34;\u003c/span\u003e created\ndeployment.extensions \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-citadel\u0026#34;\u003c/span\u003e created\ndeployment.extensions \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-sidecar-injector\u0026#34;\u003c/span\u003e created\ngateway.networking.istio.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-autogenerated-k8s-ingress\u0026#34;\u003c/span\u003e created\nhorizontalpodautoscaler.autoscaling \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-egressgateway\u0026#34;\u003c/span\u003e created\nhorizontalpodautoscaler.autoscaling \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-ingressgateway\u0026#34;\u003c/span\u003e created\nhorizontalpodautoscaler.autoscaling \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-policy\u0026#34;\u003c/span\u003e created\nhorizontalpodautoscaler.autoscaling \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-telemetry\u0026#34;\u003c/span\u003e created\nhorizontalpodautoscaler.autoscaling \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-pilot\u0026#34;\u003c/span\u003e created\nmutatingwebhookconfiguration.admissionregistration.k8s.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-sidecar-injector\u0026#34;\u003c/span\u003e created\nattributemanifest.config.istio.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istioproxy\u0026#34;\u003c/span\u003e created\nattributemanifest.config.istio.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;kubernetes\u0026#34;\u003c/span\u003e created\nstdio.config.istio.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;handler\u0026#34;\u003c/span\u003e created\nlogentry.config.istio.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;accesslog\u0026#34;\u003c/span\u003e created\nlogentry.config.istio.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;tcpaccesslog\u0026#34;\u003c/span\u003e created\nrule.config.istio.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;stdio\u0026#34;\u003c/span\u003e created\nrule.config.istio.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;stdiotcp\u0026#34;\u003c/span\u003e created\nmetric.config.istio.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;requestcount\u0026#34;\u003c/span\u003e created\nmetric.config.istio.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;requestduration\u0026#34;\u003c/span\u003e created\nmetric.config.istio.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;requestsize\u0026#34;\u003c/span\u003e created\nmetric.config.istio.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;responsesize\u0026#34;\u003c/span\u003e created\nmetric.config.istio.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;tcpbytesent\u0026#34;\u003c/span\u003e created\nmetric.config.istio.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;tcpbytereceived\u0026#34;\u003c/span\u003e created\nprometheus.config.istio.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;handler\u0026#34;\u003c/span\u003e created\nrule.config.istio.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;promhttp\u0026#34;\u003c/span\u003e created\nrule.config.istio.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;promtcp\u0026#34;\u003c/span\u003e created\nkubernetesenv.config.istio.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;handler\u0026#34;\u003c/span\u003e created\nrule.config.istio.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;kubeattrgenrulerule\u0026#34;\u003c/span\u003e created\nrule.config.istio.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;tcpkubeattrgenrulerule\u0026#34;\u003c/span\u003e created\nkubernetes.config.istio.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;attributes\u0026#34;\u003c/span\u003e created\ndestinationrule.networking.istio.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-policy\u0026#34;\u003c/span\u003e created\ndestinationrule.networking.istio.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;istio-telemetry\u0026#34;\u003c/span\u003e created\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nWOAH, What did just happen?, a lot of new resources were created, basically we just generated the manifest from the helm chart and applied that to our cluster.\u003c/p\u003e\n\n\u003cp\u003eSo lets see what\u0026rsquo;s running and what that means:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e$ kubectl get pods -n istio-system\nNAME                                      READY     STATUS      RESTARTS   AGE\nistio-citadel-856f994c58-l96p8            \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e/1       Running     \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e          3m\nistio-cleanup-secrets-xqqj4               \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e/1       Completed   \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e          3m\nistio-egressgateway-5649fcf57-7zwkh       \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e/1       Running     \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e          3m\nistio-galley-7665f65c9c-tzn7d             \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e/1       Running     \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e          3m\nistio-ingressgateway-6755b9bbf6-bh84r     \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e/1       Running     \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e          3m\nistio-pilot-56855d999b-c4cp5              \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e/2       Running     \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e          3m\nistio-policy-6fcb6d655f-9544z             \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e/2       Running     \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e          3m\nistio-sidecar-injector-768c79f7bf-th8zh   \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e/1       Running     \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e          3m\nistio-telemetry-664d896cf5-jdcwv          \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e/2       Running     \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e          3m\nprometheus-76b7745b64-f8jxn               \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e/1       Running     \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e          3m\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nA few minutes later, almost everything is up, but what\u0026rsquo;s all that? Istio has several components, see the following overview extracted from \u003ca href=\"https://github.com/istio/istio\"\u003egithub\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eEnvoy\u003c/strong\u003e: Sidecar proxies per microservice to handle ingress/egress traffic between services in the cluster and from a service to external services. The proxies form a secure microservice mesh providing a rich set of functions like discovery, rich layer-7 routing, circuit breakers, policy enforcement and telemetry recording/reporting functions.\nNote: The service mesh is not an overlay network. It simplifies and enhances how microservices in an application talk to each other over the network provided by the underlying platform.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eMixer\u003c/strong\u003e: Central component that is leveraged by the proxies and microservices to enforce policies such as authorization, rate limits, quotas, authentication, request tracing and telemetry collection.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003ePilot\u003c/strong\u003e: A component responsible for configuring the proxies at runtime.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eCitadel\u003c/strong\u003e: A centralized component responsible for certificate issuance and rotation.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eNode Agent\u003c/strong\u003e: A per-node component responsible for certificate issuance and rotation.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eGalley\u003c/strong\u003e: Central component for validating, ingesting, aggregating, transforming and distributing config within Istio.\u003c/p\u003e\n\n\u003cp\u003eOk so, a lot of new things were installed but how do I know it\u0026rsquo;s working? let\u0026rsquo;s deploy a \u003ca href=\"https://istio.io/docs/examples/bookinfo/\"\u003etest application\u003c/a\u003e and check it:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e$ export PATH\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$PATH\u003cspan style=\"color:#e6db74\"\u003e:~/istio-1.0.5/bin\u0026#34;\u003c/span\u003e\nistio-1.0.5/samples/bookinfo $ kubectl apply -f \u0026lt;\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eistioctl kube-inject -f platform/kube/bookinfo.yaml\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\nservice \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;details\u0026#34;\u003c/span\u003e created\ndeployment.extensions \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;details-v1\u0026#34;\u003c/span\u003e created\nservice \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;ratings\u0026#34;\u003c/span\u003e created\ndeployment.extensions \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;ratings-v1\u0026#34;\u003c/span\u003e created\nservice \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;reviews\u0026#34;\u003c/span\u003e created\ndeployment.extensions \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;reviews-v1\u0026#34;\u003c/span\u003e created\ndeployment.extensions \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;reviews-v2\u0026#34;\u003c/span\u003e created\ndeployment.extensions \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;reviews-v3\u0026#34;\u003c/span\u003e created\nservice \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;productpage\u0026#34;\u003c/span\u003e created\ndeployment.extensions \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;productpage-v1\u0026#34;\u003c/span\u003e created\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nThat command not only deployed the application but injected the Istio sidecar to each pod:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e$ kubectl get pods\nNAME                              READY     STATUS    RESTARTS   AGE\ndetails-v1-8bd954dbb-zhrqq        \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e/2       Running   \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e          2m\nproductpage-v1-849c786f96-kpfx9   \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e/2       Running   \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e          2m\nratings-v1-68d648d6fd-w68qb       \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e/2       Running   \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e          2m\nreviews-v1-b4c984bdc-9s6j5        \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e/2       Running   \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e          2m\nreviews-v2-575446d5db-r6kwc       \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e/2       Running   \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e          2m\nreviews-v3-74458c4889-kr4wb       \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e/2       Running   \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e          2m\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nAs we can see each pod has 2 containers in it, the app container and istio-proxy. You can also configure \u003ca href=\"https://istio.io/docs/setup/kubernetes/sidecar-injection/#automatic-sidecar-injection\"\u003eautomatic sidecar injection\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eAlso all services are running:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e$ kubectl get services\nNAME          TYPE        CLUSTER-IP       EXTERNAL-IP   PORT\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eS\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e    AGE\ndetails       ClusterIP   \u003cspan style=\"color:#ae81ff\"\u003e10\u003c/span\u003e.245.134.179   \u0026lt;none\u0026gt;        \u003cspan style=\"color:#ae81ff\"\u003e9080\u003c/span\u003e/TCP   3m\nkubernetes    ClusterIP   \u003cspan style=\"color:#ae81ff\"\u003e10\u003c/span\u003e.245.0.1       \u0026lt;none\u0026gt;        \u003cspan style=\"color:#ae81ff\"\u003e443\u003c/span\u003e/TCP    3d\nproductpage   ClusterIP   \u003cspan style=\"color:#ae81ff\"\u003e10\u003c/span\u003e.245.32.221    \u0026lt;none\u0026gt;        \u003cspan style=\"color:#ae81ff\"\u003e9080\u003c/span\u003e/TCP   3m\nratings       ClusterIP   \u003cspan style=\"color:#ae81ff\"\u003e10\u003c/span\u003e.245.159.112   \u0026lt;none\u0026gt;        \u003cspan style=\"color:#ae81ff\"\u003e9080\u003c/span\u003e/TCP   3m\nreviews       ClusterIP   \u003cspan style=\"color:#ae81ff\"\u003e10\u003c/span\u003e.245.77.125    \u0026lt;none\u0026gt;        \u003cspan style=\"color:#ae81ff\"\u003e9080\u003c/span\u003e/TCP   3m\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003cp\u003eBut how do I access the app?\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eistio-1.0.5/samples/bookinfo $ kubectl apply -f networking/bookinfo-gateway.yaml\ngateway.networking.istio.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;bookinfo-gateway\u0026#34;\u003c/span\u003e created\nvirtualservice.networking.istio.io \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;bookinfo\u0026#34;\u003c/span\u003e created\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nIn Istio a Gateway configures a load balancer for HTTP/TCP traffic, most commonly operating at the edge of the mesh to enable ingress traffic for an application (L4-L6).\u003c/p\u003e\n\n\u003cp\u003eAfter that we need to set some environment variables to fetch the LB ip, port, etc.\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e$ export INGRESS_HOST\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003e$(\u003c/span\u003ekubectl -n istio-system get service istio-ingressgateway -o jsonpath\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;{.status.loadBalancer.ingress[0].ip}\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003e)\u003c/span\u003e\n$ export INGRESS_PORT\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003e$(\u003c/span\u003ekubectl -n istio-system get service istio-ingressgateway -o jsonpath\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;{.spec.ports[?(@.name==\u0026#34;http2\u0026#34;)].port}\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003e)\u003c/span\u003e\n$ export SECURE_INGRESS_PORT\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003e$(\u003c/span\u003ekubectl -n istio-system get service istio-ingressgateway -o jsonpath\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;{.spec.ports[?(@.name==\u0026#34;https\u0026#34;)].port}\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003e)\u003c/span\u003e\n$ export GATEWAY_URL\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e$INGRESS_HOST:$INGRESS_PORT\n\ncurl -o /dev/null -s -w \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;%{http_code}\\n\u0026#34;\u003c/span\u003e http://\u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003eGATEWAY_URL\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e/productpage\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nIf the latest curl returns 200 then we\u0026rsquo;re good, you can also browse the app \u003ccode\u003eopen http://${GATEWAY_URL}/productpage\u003c/code\u003e and you will see something like the following image:\n\u003cfigure class=\"zoom\"\u003e\n    \u003cimg src=\"/img/productpage-example.png\" width=\"100%\"/\u003e \n\u003c/figure\u003e\n\u003c/p\u003e\n\n\u003cp\u003eAlso you can use \u003ca href=\"https://grafana.com/\"\u003eGrafana\u003c/a\u003e to check some metrics about the service usage, etc. (You don\u0026rsquo;t have to worry about prometheus since it\u0026rsquo;s enabled by default). Spin up the port-forward so we don\u0026rsquo;t have to expose grafana: to the world with: \u003ccode\u003ekubectl -n istio-system port-forward $(kubectl -n istio-system get pod -l app=grafana -o jsonpath='{.items[0].metadata.name}') 3000:3000\u003c/code\u003e, and then \u003ccode\u003eopen http://localhost:3000\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eAs a general advice check all the settings that Istio offers try the ones that you think that could be useful for your project and always measure and compare.\u003c/p\u003e\n\n\u003ch3 id=\"notes\"\u003eNotes\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003eDo mind that \u003cstrong\u003epilot\u003c/strong\u003e pod requires at least 4 Gbs of memory, so you will need at least one node with that amount of memory.\u003c/li\u003e\n\u003cli\u003eYou can check the load balancer status under: Manage -\u0026gt; Networking -\u0026gt; Load balancers. And if everything is okay your LB will say Healthy.\u003c/li\u003e\n\u003cli\u003eGrafana is not enabled by default but we do enable it via helm with \u003ccode\u003e--set grafana.enabled=true\u003c/code\u003e, if you want to check all the possible options \u003ca href=\"https://istio.io/docs/reference/config/installation-options/\"\u003ego here\u003c/a\u003e, if you are using more than two \u003ccode\u003e--set\u003c/code\u003e options I would recommend creating a \u003ccode\u003evalues.yaml\u003c/code\u003e file and use that instead.\u003c/li\u003e\n\u003cli\u003eIstio is a big beast and should be treated carefully, there is a lot more to learn and test out. We only scratched the surface here.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"upcoming-posts\"\u003eUpcoming posts\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003eMore examples using Istio.\u003c/li\u003e\n\u003cli\u003eLinkerd.\u003c/li\u003e\n\u003cli\u003eMaybe some Golang fun.\u003c/li\u003e\n\u003cli\u003eServerless or kubeless, that\u0026rsquo;s the question.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3 id=\"errata\"\u003eErrata\u003c/h3\u003e\n\n\u003cp\u003eIf you spot any error or have any suggestion, please send me a message so it gets fixed.\u003c/p\u003e\n\n\u003cp\u003eAlso, you can check the source code and changes in the \u003ca href=\"https://github.com/kainlite/kainlite.github.io\"\u003egenerated code\u003c/a\u003e and the \u003ca href=\"https://github.com/kainlite/blog\"\u003esources here\u003c/a\u003e\u003c/p\u003e\n"
    }, 
    {
      "id": "https://techsquad.rocks/blog/getting_started_with_skaffold/",
      "url": "https://techsquad.rocks/blog/getting_started_with_skaffold/",
      "title": "Getting started with skaffold",
      "date_published": "2019-01-03T00:00:00Z",
      "tags": ["skaffold","kubernetes","deployment-tools"],
      "content_html": "\n\n\u003ch3 id=\"skaffold\"\u003e\u003cstrong\u003eSkaffold\u003c/strong\u003e\u003c/h3\u003e\n\n\u003cp\u003eThis time we will see how to get started with \u003ca href=\"https://github.com/GoogleContainerTools/skaffold\"\u003eSkaffold\u003c/a\u003e, it seems a relatively mature project, and it does a lot more than some of the previous explored alternatives: \u003cem\u003eSkaffold is a command line tool that facilitates continuous development for Kubernetes applications. You can iterate on your application source code locally then deploy to local or remote Kubernetes clusters. Skaffold handles the workflow for building, pushing and deploying your application. It also provides building blocks and describe customizations for a CI/CD pipeline.\u003c/em\u003e (Extracted from \u003ca href=\"https://github.com/GoogleContainerTools/skaffold\"\u003egithub\u003c/a\u003e)\u003c/p\u003e\n\n\u003cp\u003eIn this example I will be using \u003ca href=\"https://m.do.co/c/01d040b789de\"\u003eDigital Ocean\u003c/a\u003e (that\u0026rsquo;s my referral link), note that I do not have any association with Digital Ocean but they give you $100 to test their products for 60 days, if you spend $25 I get another $25, I got the idea from \u003ca href=\"https://www.youtube.com/watch?v=fhYSKEy0s8w\"\u003ePelado Nerd Spanish Youtube Channel\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3 id=\"let-s-get-started\"\u003eLet\u0026rsquo;s get started\u003c/h3\u003e\n\n\u003cp\u003eOnce you have created your account and added your credit card you will get the $100 of free credit, then you will have to go to Manage on the left side panel and click on Kubernetes, then create your cluster with the amount of nodes that you consider necessary but remember to power them off or delete these resources so you don\u0026rsquo;t waste the free credit or your credit card itself. Once you have created your cluster and downloaded the kubectl config you\u0026rsquo;re ready to go.\u003c/p\u003e\n\n\u003cp\u003eWe will be working with the chat bot again you can see the original \u003ca href=\"https://techsquad.rocks/blog/go_echobot/\"\u003earticle here\u003c/a\u003e, and the repo \u003ca href=\"https://github.com/kainlite/echobot/tree/skaffold\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eLet\u0026rsquo;s tell our kubectl to use our recently downloaded config:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e$ export KUBECONFIG\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e/home/kainlite/Downloads/k8s-1-13-1-do-2-nyc1-1546545313076-kubeconfig.yaml\n$ kubectl get nodes -o wide\n\nNAME                 STATUS    ROLES     AGE       VERSION   EXTERNAL-IP       OS-IMAGE                       KERNEL-VERSION   CONTAINER-RUNTIME\ncrazy-wozniak-8306   Ready     \u0026lt;none\u0026gt;    6h        v1.13.1   \u003cspan style=\"color:#ae81ff\"\u003e178\u003c/span\u003e.128.154.205   Debian GNU/Linux \u003cspan style=\"color:#ae81ff\"\u003e9\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003estretch\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e   \u003cspan style=\"color:#ae81ff\"\u003e4\u003c/span\u003e.9.0-8-amd64    docker://18.9.0\ncrazy-wozniak-830t   Ready     \u0026lt;none\u0026gt;    6h        v1.13.1   \u003cspan style=\"color:#ae81ff\"\u003e167\u003c/span\u003e.99.224.115    Debian GNU/Linux \u003cspan style=\"color:#ae81ff\"\u003e9\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003estretch\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e   \u003cspan style=\"color:#ae81ff\"\u003e4\u003c/span\u003e.9.0-8-amd64    docker://18.9.0\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nYour config might have a slightly different name, but it should be similar. We can see in the output a lot of information about our nodes (workers).\u003c/p\u003e\n\n\u003cp\u003eBut let\u0026rsquo;s cut to the chase, we are here for \u003cem\u003eSkaffold\u003c/em\u003e:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ecurl -Lo skaffold https://storage.googleapis.com/skaffold/releases/v0.20.0/skaffold-linux-amd64 \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e chmod +x skaffold \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e sudo mv skaffold /usr/local/bin\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nYou can install the binary using the provided line (linux) or downloading it from the \u003ca href=\"https://github.com/GoogleContainerTools/skaffold/releases\"\u003ereleases page\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eOnce installed we can see the \u003ca href=\"https://github.com/GoogleContainerTools/skaffold/tree/master/examples\"\u003eexamples\u003c/a\u003e, I will be using the getting-started example:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eapiVersion: skaffold/v1beta2\nkind: Config\nbuild:\n  artifacts:\n  - image: kainlite/echobot\ndeploy:\n  kubectl:\n    manifests:\n      - k8s-*\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nWith very litle YAML we can accomplish a lot.\u003c/p\u003e\n\n\u003cp\u003eWe need a manifest file that matches that pattern so skaffold can deploy/re-deploy our application, so let\u0026rsquo;s generate one with \u003ccode\u003ekubectl run echobot --image=kainlite/echobot --dry-run -o yaml\u003c/code\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003eapiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n    run: echobot\n  name: echobot\nspec:\n  replicas: \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\n  selector:\n    matchLabels:\n      run: echobot\n  strategy: {}\n  template:\n    metadata:\n      labels:\n        run: echobot\n    spec:\n      containers:\n      - image: kainlite/echobot\n        name: echobot\n        env:\n        - name: SLACK_API_TOKEN\n          value: really_long_token\n        livenessProbe:\n          exec:\n            command:\n            - \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;/bin/sh\u0026#39;\u003c/span\u003e\n            - \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;-c\u0026#39;\u003c/span\u003e\n            - \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;/app/health_check.sh\u0026#39;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nThe above command can be used to generate any kind of k8s resource :), I stripped it a bit, because there were fields that I didn\u0026rsquo;t want in and added some that we need for it to work.\u003c/p\u003e\n\n\u003cp\u003eThen the only thing left to do is testing that everything works properly:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e$ skaffold build\n\nStarting build...\nBuilding \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003ekainlite/echobot\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e...\nSending build context to Docker daemon  \u003cspan style=\"color:#ae81ff\"\u003e66\u003c/span\u003e.56kB\nStep \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e/12 : FROM golang:1.11.2-alpine as builder\n ---\u0026gt; 57915f96905a\nStep \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e/12 : WORKDIR /app\n ---\u0026gt; Using cache\n ---\u0026gt; e04488a7f16b\nStep \u003cspan style=\"color:#ae81ff\"\u003e3\u003c/span\u003e/12 : RUN adduser -D -g \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;app\u0026#39;\u003c/span\u003e app \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e     chown -R app:app /app \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e     apk add git \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e apk add gcc musl-dev\n ---\u0026gt; Running in 1339601fff6f\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.8/main/x86_64/APKINDEX.tar.gz\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.8/community/x86_64/APKINDEX.tar.gz\n\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e/6\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e Installing nghttp2-libs \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e.32.0-r0\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e/6\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e Installing libssh2 \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e.8.0-r3\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e3\u003c/span\u003e/6\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e Installing libcurl \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e7\u003c/span\u003e.61.1-r1\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e4\u003c/span\u003e/6\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e Installing expat \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e.2.5-r0\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e5\u003c/span\u003e/6\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e Installing pcre2 \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e10\u003c/span\u003e.31-r0\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e6\u003c/span\u003e/6\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e Installing git \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e.18.1-r0\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\nExecuting busybox-1.28.4-r1.trigger\nOK: \u003cspan style=\"color:#ae81ff\"\u003e19\u003c/span\u003e MiB in \u003cspan style=\"color:#ae81ff\"\u003e20\u003c/span\u003e packages\n\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e/12\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e Installing binutils \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e.30-r5\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e/12\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e Installing gmp \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e6\u003c/span\u003e.1.2-r1\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e3\u003c/span\u003e/12\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e Installing isl \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e.18-r0\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e4\u003c/span\u003e/12\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e Installing libgomp \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e6\u003c/span\u003e.4.0-r9\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e5\u003c/span\u003e/12\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e Installing libatomic \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e6\u003c/span\u003e.4.0-r9\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e6\u003c/span\u003e/12\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e Installing pkgconf \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e.5.3-r0\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e7\u003c/span\u003e/12\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e Installing libgcc \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e6\u003c/span\u003e.4.0-r9\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e8\u003c/span\u003e/12\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e Installing mpfr3 \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e3\u003c/span\u003e.1.5-r1\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e9\u003c/span\u003e/12\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e Installing mpc1 \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e.0.3-r1\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e10\u003c/span\u003e/12\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e Installing libstdc++ \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e6\u003c/span\u003e.4.0-r9\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e11\u003c/span\u003e/12\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e Installing gcc \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e6\u003c/span\u003e.4.0-r9\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e12\u003c/span\u003e/12\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e Installing musl-dev \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e.1.19-r10\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\nExecuting busybox-1.28.4-r1.trigger\nOK: \u003cspan style=\"color:#ae81ff\"\u003e113\u003c/span\u003e MiB in \u003cspan style=\"color:#ae81ff\"\u003e32\u003c/span\u003e packages\n ---\u0026gt; 0e7a97e577dc\nStep \u003cspan style=\"color:#ae81ff\"\u003e4\u003c/span\u003e/12 : ADD . /app/\n ---\u0026gt; 72cfd4dea99b\nStep \u003cspan style=\"color:#ae81ff\"\u003e5\u003c/span\u003e/12 : RUN go get -d -v ./... \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e go build -o main . \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e chown -R app:app /app /home/app\n ---\u0026gt; Running in 4482bfd3e8f7\ngo: finding github.com/gorilla/websocket v1.4.0\ngo: finding github.com/nlopes/slack v0.4.0\ngo: finding github.com/pkg/errors v0.8.0\ngo: downloading github.com/nlopes/slack v0.4.0\ngo: downloading github.com/pkg/errors v0.8.0\ngo: downloading github.com/gorilla/websocket v1.4.0\n ---\u0026gt; 8ea604c7fb37\nStep \u003cspan style=\"color:#ae81ff\"\u003e6\u003c/span\u003e/12 : FROM golang:1.11.2-alpine\n ---\u0026gt; 57915f96905a\nStep \u003cspan style=\"color:#ae81ff\"\u003e7\u003c/span\u003e/12 : WORKDIR /app\n ---\u0026gt; Using cache\n ---\u0026gt; e04488a7f16b\nStep \u003cspan style=\"color:#ae81ff\"\u003e8\u003c/span\u003e/12 : RUN adduser -D -g \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;app\u0026#39;\u003c/span\u003e app \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e     chown -R app:app /app\n ---\u0026gt; Using cache\n ---\u0026gt; 33b206dba7e4\nStep \u003cspan style=\"color:#ae81ff\"\u003e9\u003c/span\u003e/12 : COPY --from\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003ebuilder --chown\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eapp /app/health_check.sh /app/health_check.sh\n ---\u0026gt; Using cache\n ---\u0026gt; 34d3cd1a5bb0\nStep \u003cspan style=\"color:#ae81ff\"\u003e10\u003c/span\u003e/12 : COPY --from\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003ebuilder --chown\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eapp /app/main /app/main\n ---\u0026gt; Using cache\n ---\u0026gt; 0c3d838b25dc\nStep \u003cspan style=\"color:#ae81ff\"\u003e11\u003c/span\u003e/12 : USER app\n ---\u0026gt; Using cache\n ---\u0026gt; 95c2bf90800c\nStep \u003cspan style=\"color:#ae81ff\"\u003e12\u003c/span\u003e/12 : CMD \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/app/main\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n ---\u0026gt; Using cache\n ---\u0026gt; 3541257ff16c\nSuccessfully built 3541257ff16c\nSuccessfully tagged 1fca8a8c999a8cd9b943456b70d90807:latest\nThe push refers to repository \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003edocker.io/kainlite/echobot\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\nee06a8f42495: Preparing\n12468476a0ef: Preparing\nec122f36b39d: Preparing\ne94f3271cc73: Preparing\n93391cb9fd4b: Preparing\ncb9d0f9550f6: Preparing\n93448d8c2605: Preparing\nc54f8a17910a: Preparing\ndf64d3292fd6: Preparing\ncb9d0f9550f6: Waiting\nc54f8a17910a: Waiting\n93448d8c2605: Waiting\ne94f3271cc73: Layer already exists\n93391cb9fd4b: Layer already exists\n12468476a0ef: Layer already exists\nec122f36b39d: Layer already exists\nee06a8f42495: Layer already exists\n93448d8c2605: Layer already exists\ncb9d0f9550f6: Layer already exists\ndf64d3292fd6: Layer already exists\nc54f8a17910a: Layer already exists\nfc03e3d-dirty-3541257: digest: sha256:99c6d3d5b226a1947e8f96c0a5f963c8e499848d271f121ad50551046a0dc7ca size: \u003cspan style=\"color:#ae81ff\"\u003e2197\u003c/span\u003e\nBuild complete in \u003cspan style=\"color:#ae81ff\"\u003e48\u003c/span\u003e.642618413s\nStarting test...\nTest complete in \u003cspan style=\"color:#ae81ff\"\u003e9\u003c/span\u003e.15µs\nkainlite/echobot -\u0026gt; kainlite/echobot:fc03e3d-dirty-3541257\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nAs we can see skaffold build not only did the docker build but also tagged and pushed the image to \u003ca href=\"https://cloud.docker.com/repository/docker/kainlite/echobot/tags\"\u003edocker hub\u003c/a\u003e, which is really nice and really useful to build a CI/CD system with it.\u003c/p\u003e\n\n\u003cp\u003eBut wait, we need to deploy that to our cluster, right on:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e$ skaffold deploy\nStarting build...\nBuilding \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003ekainlite/echobot\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e...\nSending build context to Docker daemon  \u003cspan style=\"color:#ae81ff\"\u003e66\u003c/span\u003e.56kB\nStep \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e/12 : FROM golang:1.11.2-alpine as builder\n ---\u0026gt; 57915f96905a\nStep \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e/12 : WORKDIR /app\n ---\u0026gt; Using cache\n ---\u0026gt; e04488a7f16b\nStep \u003cspan style=\"color:#ae81ff\"\u003e3\u003c/span\u003e/12 : RUN adduser -D -g \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;app\u0026#39;\u003c/span\u003e app \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e     chown -R app:app /app \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e     apk add git \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e apk add gcc musl-dev\n ---\u0026gt; Using cache\n ---\u0026gt; 0e7a97e577dc\nStep \u003cspan style=\"color:#ae81ff\"\u003e4\u003c/span\u003e/12 : ADD . /app/\n ---\u0026gt; Using cache\n ---\u0026gt; 72cfd4dea99b\nStep \u003cspan style=\"color:#ae81ff\"\u003e5\u003c/span\u003e/12 : RUN go get -d -v ./... \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e go build -o main . \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e chown -R app:app /app /home/app\n ---\u0026gt; Using cache\n ---\u0026gt; 8ea604c7fb37\nStep \u003cspan style=\"color:#ae81ff\"\u003e6\u003c/span\u003e/12 : FROM golang:1.11.2-alpine\n ---\u0026gt; 57915f96905a\nStep \u003cspan style=\"color:#ae81ff\"\u003e7\u003c/span\u003e/12 : WORKDIR /app\n ---\u0026gt; Using cache\n ---\u0026gt; e04488a7f16b\nStep \u003cspan style=\"color:#ae81ff\"\u003e8\u003c/span\u003e/12 : RUN adduser -D -g \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;app\u0026#39;\u003c/span\u003e app \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e     chown -R app:app /app\n ---\u0026gt; Using cache\n ---\u0026gt; 33b206dba7e4\nStep \u003cspan style=\"color:#ae81ff\"\u003e9\u003c/span\u003e/12 : COPY --from\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003ebuilder --chown\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eapp /app/health_check.sh /app/health_check.sh\n ---\u0026gt; Using cache\n ---\u0026gt; 34d3cd1a5bb0\nStep \u003cspan style=\"color:#ae81ff\"\u003e10\u003c/span\u003e/12 : COPY --from\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003ebuilder --chown\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eapp /app/main /app/main\n ---\u0026gt; Using cache\n ---\u0026gt; 0c3d838b25dc\nStep \u003cspan style=\"color:#ae81ff\"\u003e11\u003c/span\u003e/12 : USER app\n ---\u0026gt; Using cache\n ---\u0026gt; 95c2bf90800c\nStep \u003cspan style=\"color:#ae81ff\"\u003e12\u003c/span\u003e/12 : CMD \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/app/main\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n ---\u0026gt; Using cache\n ---\u0026gt; 3541257ff16c\nSuccessfully built 3541257ff16c\nSuccessfully tagged 510226574761304cc9d64a343d5bdbff:latest\nThe push refers to repository \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003edocker.io/kainlite/echobot\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\nee06a8f42495: Preparing\n12468476a0ef: Preparing\nec122f36b39d: Preparing\ne94f3271cc73: Preparing\n93391cb9fd4b: Preparing\ncb9d0f9550f6: Preparing\n93448d8c2605: Preparing\nc54f8a17910a: Preparing\ndf64d3292fd6: Preparing\ncb9d0f9550f6: Waiting\n93448d8c2605: Waiting\nc54f8a17910a: Waiting\ndf64d3292fd6: Waiting\n12468476a0ef: Layer already exists\ne94f3271cc73: Layer already exists\ncb9d0f9550f6: Layer already exists\nec122f36b39d: Layer already exists\n93391cb9fd4b: Layer already exists\nee06a8f42495: Layer already exists\nc54f8a17910a: Layer already exists\ndf64d3292fd6: Layer already exists\n93448d8c2605: Mounted from library/golang\nfc03e3d-dirty-3541257: digest: sha256:99c6d3d5b226a1947e8f96c0a5f963c8e499848d271f121ad50551046a0dc7ca size: \u003cspan style=\"color:#ae81ff\"\u003e2197\u003c/span\u003e\nBuild complete in \u003cspan style=\"color:#ae81ff\"\u003e15\u003c/span\u003e.136865292s\nStarting test...\nTest complete in \u003cspan style=\"color:#ae81ff\"\u003e17\u003c/span\u003e.912µs\nStarting deploy...\nkubectl client version: \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e.10\nkubectl version \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e.12.0 or greater is recommended \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e use with skaffold\ndeployment.extensions \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;echobot\u0026#34;\u003c/span\u003e configured\nDeploy complete in \u003cspan style=\"color:#ae81ff\"\u003e5\u003c/span\u003e.676513226s\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nDeploy does a lot like with gitkube, it build the image, pushes it to the registry and then makes the deployment to the cluster, as you can see in there skaffold relies on kubectl and I have an old version of it.\u003c/p\u003e\n\n\u003cp\u003eAfter a few seconds we can see that our deployment has been triggered and we have a new pod being created for it.\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e$ kubectl get pods\nNAME                       READY     STATUS              RESTARTS   AGE\nechobot-57fdcccf76-4qwvq   \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e/1       ContainerCreating   \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e          5s\nechobot-6fcd78658c-njvpx   \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e/1       Terminating         \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e          9m\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\nSkaffold also has another nice option that it\u0026rsquo;s called \u003cem\u003edev\u003c/em\u003e it watches the folder for changes and re-deploys the app so you can focus on code.\u003c/p\u003e\n\n\u003cp\u003eLet\u0026rsquo;s clean up and call it a day:\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e$ skaffold delete\nCleaning up...\ndeployment.extensions \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;echobot\u0026#34;\u003c/span\u003e deleted\nCleanup complete in \u003cspan style=\"color:#ae81ff\"\u003e3\u003c/span\u003e.833219278s\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\n\n\u003ch3 id=\"notes\"\u003eNotes\u003c/h3\u003e\n\n\u003cp\u003eI really liked the workflow that skaffold provides, I hope that I can use it some more in the near future. And remember to shutdown the kubernetes cluster if you are using Digital Ocean so you don\u0026rsquo;t get charged by surprise later on.\u003c/p\u003e\n\n\u003ch3 id=\"errata\"\u003eErrata\u003c/h3\u003e\n\n\u003cp\u003eIf you spot any error or have any suggestion, please send me a message so it gets fixed.\u003c/p\u003e\n\n\u003cp\u003eAlso, you can check the source code and changes in the \u003ca href=\"https://github.com/kainlite/kainlite.github.io\"\u003egenerated code\u003c/a\u003e and the \u003ca href=\"https://github.com/kainlite/blog\"\u003esources here\u003c/a\u003e\u003c/p\u003e\n"
    }
  ]
}
