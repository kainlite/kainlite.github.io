<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes, CI/CD, Git, Linux, Containers, Golang... and more</title>
    <link>https://kainlite.github.io/</link>
    <description>Recent content on Kubernetes, CI/CD, Git, Linux, Containers, Golang... and more</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 10 Jan 2019 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://kainlite.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Exploring some Istio features</title>
      <link>https://kainlite.github.io/blog/exploring_some_istio_features/</link>
      <pubDate>Thu, 10 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kainlite.github.io/blog/exploring_some_istio_features/</guid>
      <description>

&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;This article builds up on what we did in the &lt;a href=&#34;https://kainlite.github.io/blog/why_do_i_need_a_service_mesh/&#34;&gt;last article&lt;/a&gt;, so refer to that one before starting this one, if you are planing to follow the documentation examples you will find many similarities since I based this article on that.&lt;/p&gt;

&lt;p&gt;In this example I will be using &lt;a href=&#34;https://m.do.co/c/01d040b789de&#34;&gt;Digital Ocean&lt;/a&gt; (that&amp;rsquo;s my referral link), note that I do not have any association with Digital Ocean but they give you $100 to test their products for 60 days, if you spend $25 I get another $25.&lt;/p&gt;

&lt;h3 id=&#34;before-starting-a-few-concepts&#34;&gt;Before starting a few concepts&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;A VirtualService defines the rules that control how requests for a service are routed within an Istio service mesh.&lt;/li&gt;
&lt;li&gt;A DestinationRule configures the set of policies to be applied to a request after VirtualService routing has occurred.&lt;/li&gt;
&lt;li&gt;A ServiceEntry is commonly used to enable requests to services outside of an Istio service mesh.&lt;/li&gt;
&lt;li&gt;A Gateway configures a load balancer for HTTP/TCP traffic, most commonly operating at the edge of the mesh to enable ingress traffic for an application.
These basic concepts will help you understand the manifest that we are going to see.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;let-s-get-started&#34;&gt;Let&amp;rsquo;s get started&lt;/h3&gt;

&lt;p&gt;We already have the bookinfo project deployed and using all three versions of the service (ratings) but we will need to make some changes to test route based on user identity, you can check the configuration with:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ kubectl get destinationrules -o yaml
apiVersion: v1
items:
- apiVersion: networking.istio.io/v1alpha3
  kind: DestinationRule
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: &lt;span style=&#34;color:#e6db74&#34;&gt;|
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {&amp;#34;apiVersion&amp;#34;:&amp;#34;networking.istio.io/v1alpha3&amp;#34;,&amp;#34;kind&amp;#34;:&amp;#34;DestinationRule&amp;#34;,&amp;#34;metadata&amp;#34;:{&amp;#34;annotations&amp;#34;:{},&amp;#34;name&amp;#34;:&amp;#34;details&amp;#34;,&amp;#34;namespace&amp;#34;:&amp;#34;default&amp;#34;},&amp;#34;spec&amp;#34;:{&amp;#34;host&amp;#34;:&amp;#34;details&amp;#34;,&amp;#34;subsets&amp;#34;:[{&amp;#34;labels&amp;#34;:{&amp;#34;version&amp;#34;:&amp;#34;v1&amp;#34;},&amp;#34;name&amp;#34;:&amp;#34;v1&amp;#34;},{&amp;#34;labels&amp;#34;:{&amp;#34;version&amp;#34;:&amp;#34;v2&amp;#34;},&amp;#34;name&amp;#34;:&amp;#34;v2&amp;#34;}]}}&lt;/span&gt;
    creationTimestamp: &lt;span style=&#34;color:#e6db74&#34;&gt;2019-01-11T00:58:54Z&lt;/span&gt;
    generation: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    name: details
    namespace: default
    resourceVersion: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;921688&amp;#34;&lt;/span&gt;
    selfLink: /apis/networking.istio.io/v1alpha3/namespaces/default/destinationrules/details
    uid: &lt;span style=&#34;color:#ae81ff&#34;&gt;11490656&lt;/span&gt;-153c-&lt;span style=&#34;color:#ae81ff&#34;&gt;11e9&lt;/span&gt;-9eda-6a85233ec1d5
  spec:
    host: details
    subsets:
    - labels:
        version: v1
      name: v1
    - labels:
        version: v2
      name: v2
- apiVersion: networking.istio.io/v1alpha3
  kind: DestinationRule
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: &lt;span style=&#34;color:#e6db74&#34;&gt;|
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {&amp;#34;apiVersion&amp;#34;:&amp;#34;networking.istio.io/v1alpha3&amp;#34;,&amp;#34;kind&amp;#34;:&amp;#34;DestinationRule&amp;#34;,&amp;#34;metadata&amp;#34;:{&amp;#34;annotations&amp;#34;:{},&amp;#34;name&amp;#34;:&amp;#34;productpage&amp;#34;,&amp;#34;namespace&amp;#34;:&amp;#34;default&amp;#34;},&amp;#34;spec&amp;#34;:{&amp;#34;host&amp;#34;:&amp;#34;productpage&amp;#34;,&amp;#34;subsets&amp;#34;:[{&amp;#34;labels&amp;#34;:{&amp;#34;version&amp;#34;:&amp;#34;v1&amp;#34;},&amp;#34;name&amp;#34;:&amp;#34;v1&amp;#34;}]}}&lt;/span&gt;
    creationTimestamp: &lt;span style=&#34;color:#e6db74&#34;&gt;2019-01-11T00:58:53Z&lt;/span&gt;
    generation: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    name: productpage
    namespace: default
    resourceVersion: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;921684&amp;#34;&lt;/span&gt;
    selfLink: /apis/networking.istio.io/v1alpha3/namespaces/default/destinationrules/productpage
    uid: 10a42a24-153c-&lt;span style=&#34;color:#ae81ff&#34;&gt;11e9&lt;/span&gt;-9eda-6a85233ec1d5
  spec:
    host: productpage
    subsets:
    - labels:
        version: v1
      name: v1
- apiVersion: networking.istio.io/v1alpha3
  kind: DestinationRule
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: &lt;span style=&#34;color:#e6db74&#34;&gt;|
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {&amp;#34;apiVersion&amp;#34;:&amp;#34;networking.istio.io/v1alpha3&amp;#34;,&amp;#34;kind&amp;#34;:&amp;#34;DestinationRule&amp;#34;,&amp;#34;metadata&amp;#34;:{&amp;#34;annotations&amp;#34;:{},&amp;#34;name&amp;#34;:&amp;#34;ratings&amp;#34;,&amp;#34;namespace&amp;#34;:&amp;#34;default&amp;#34;},&amp;#34;spec&amp;#34;:{&amp;#34;host&amp;#34;:&amp;#34;ratings&amp;#34;,&amp;#34;subsets&amp;#34;:[{&amp;#34;labels&amp;#34;:{&amp;#34;version&amp;#34;:&amp;#34;v1&amp;#34;},&amp;#34;name&amp;#34;:&amp;#34;v1&amp;#34;},{&amp;#34;labels&amp;#34;:{&amp;#34;version&amp;#34;:&amp;#34;v2&amp;#34;},&amp;#34;name&amp;#34;:&amp;#34;v2&amp;#34;},{&amp;#34;labels&amp;#34;:{&amp;#34;version&amp;#34;:&amp;#34;v2-mysql&amp;#34;},&amp;#34;name&amp;#34;:&amp;#34;v2-mysql&amp;#34;},{&amp;#34;labels&amp;#34;:{&amp;#34;version&amp;#34;:&amp;#34;v2-mysql-vm&amp;#34;},&amp;#34;name&amp;#34;:&amp;#34;v2-mysql-vm&amp;#34;}]}}&lt;/span&gt;
    creationTimestamp: &lt;span style=&#34;color:#e6db74&#34;&gt;2019-01-11T00:58:54Z&lt;/span&gt;
    generation: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    name: ratings
    namespace: default
    resourceVersion: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;921686&amp;#34;&lt;/span&gt;
    selfLink: /apis/networking.istio.io/v1alpha3/namespaces/default/destinationrules/ratings
    uid: &lt;span style=&#34;color:#ae81ff&#34;&gt;111299e1&lt;/span&gt;-153c-&lt;span style=&#34;color:#ae81ff&#34;&gt;11e9&lt;/span&gt;-9eda-6a85233ec1d5
  spec:
    host: ratings
    subsets:
    - labels:
        version: v1
      name: v1
    - labels:
        version: v2
      name: v2
    - labels:
        version: v2-mysql
      name: v2-mysql
    - labels:
        version: v2-mysql-vm
      name: v2-mysql-vm
- apiVersion: networking.istio.io/v1alpha3
  kind: DestinationRule
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: &lt;span style=&#34;color:#e6db74&#34;&gt;|
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {&amp;#34;apiVersion&amp;#34;:&amp;#34;networking.istio.io/v1alpha3&amp;#34;,&amp;#34;kind&amp;#34;:&amp;#34;DestinationRule&amp;#34;,&amp;#34;metadata&amp;#34;:{&amp;#34;annotations&amp;#34;:{},&amp;#34;name&amp;#34;:&amp;#34;reviews&amp;#34;,&amp;#34;namespace&amp;#34;:&amp;#34;default&amp;#34;},&amp;#34;spec&amp;#34;:{&amp;#34;host&amp;#34;:&amp;#34;reviews&amp;#34;,&amp;#34;subsets&amp;#34;:[{&amp;#34;labels&amp;#34;:{&amp;#34;version&amp;#34;:&amp;#34;v1&amp;#34;},&amp;#34;name&amp;#34;:&amp;#34;v1&amp;#34;},{&amp;#34;labels&amp;#34;:{&amp;#34;version&amp;#34;:&amp;#34;v2&amp;#34;},&amp;#34;name&amp;#34;:&amp;#34;v2&amp;#34;},{&amp;#34;labels&amp;#34;:{&amp;#34;version&amp;#34;:&amp;#34;v3&amp;#34;},&amp;#34;name&amp;#34;:&amp;#34;v3&amp;#34;}]}}&lt;/span&gt;
    creationTimestamp: &lt;span style=&#34;color:#e6db74&#34;&gt;2019-01-11T00:58:53Z&lt;/span&gt;
    generation: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    name: reviews
    namespace: default
    resourceVersion: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;921685&amp;#34;&lt;/span&gt;
    selfLink: /apis/networking.istio.io/v1alpha3/namespaces/default/destinationrules/reviews
    uid: 10db9ee2-153c-&lt;span style=&#34;color:#ae81ff&#34;&gt;11e9&lt;/span&gt;-9eda-6a85233ec1d5
  spec:
    host: reviews
    subsets:
    - labels:
        version: v1
      name: v1
    - labels:
        version: v2
      name: v2
    - labels:
        version: v3
      name: v3
kind: List
metadata:
  resourceVersion: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
  selfLink: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
There we have all the destination rules, and now we need to apply the new manifest that will send everything to the version 1 and the user &lt;em&gt;jason&lt;/em&gt; to the version 2 of the reviews microservice.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;istio-&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;/samples/bookinfo $ kubectl apply -f networking/virtual-service-reviews-test-v2.yaml
virtualservice.networking.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;reviews&amp;#34;&lt;/span&gt; created

$ kubectl get virtualservice reviews -o yaml
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: &lt;span style=&#34;color:#e6db74&#34;&gt;|
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      {&amp;#34;apiVersion&amp;#34;:&amp;#34;networking.istio.io/v1alpha3&amp;#34;,&amp;#34;kind&amp;#34;:&amp;#34;VirtualService&amp;#34;,&amp;#34;metadata&amp;#34;:{&amp;#34;annotations&amp;#34;:{},&amp;#34;name&amp;#34;:&amp;#34;reviews&amp;#34;,&amp;#34;namespace&amp;#34;:&amp;#34;default&amp;#34;},&amp;#34;spec&amp;#34;:{&amp;#34;hosts&amp;#34;:[&amp;#34;reviews&amp;#34;],&amp;#34;http&amp;#34;:[{&amp;#34;match&amp;#34;:[{&amp;#34;headers&amp;#34;:{&amp;#34;end-user&amp;#34;:{&amp;#34;exact&amp;#34;:&amp;#34;jason&amp;#34;}}}],&amp;#34;route&amp;#34;:[{&amp;#34;destination&amp;#34;:{&amp;#34;host&amp;#34;:&amp;#34;reviews&amp;#34;,&amp;#34;subset&amp;#34;:&amp;#34;v2&amp;#34;}}]},{&amp;#34;route&amp;#34;:[{&amp;#34;destination&amp;#34;:{&amp;#34;host&amp;#34;:&amp;#34;reviews&amp;#34;,&amp;#34;subset&amp;#34;:&amp;#34;v1&amp;#34;}}]}]}}&lt;/span&gt;
  creationTimestamp: &lt;span style=&#34;color:#e6db74&#34;&gt;2019-01-11T02:30:35Z&lt;/span&gt;
  generation: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
  name: reviews
  namespace: default
  resourceVersion: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;930577&amp;#34;&lt;/span&gt;
  selfLink: /apis/networking.istio.io/v1alpha3/namespaces/default/virtualservices/reviews
  uid: e0701f0d-&lt;span style=&#34;color:#ae81ff&#34;&gt;1548&lt;/span&gt;-&lt;span style=&#34;color:#ae81ff&#34;&gt;11e9&lt;/span&gt;-9eda-6a85233ec1d5
spec:
  hosts:
  - reviews
  http:
  - match:
    - headers:
        end-user:
          exact: jason
    route:
    - destination:
        host: reviews
        subset: v2
  - route:
    - destination:
        host: reviews
        subset: v1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
What&amp;rsquo;s going on here, how Istio knows what user is logged in?, well, the app adds a header called end-user and value &lt;em&gt;jason&lt;/em&gt; then the route will be used, it&amp;rsquo;s a nifty trick.&lt;/p&gt;

&lt;p&gt;Not jason:
&lt;figure&gt;
    &lt;img src=&#34;https://kainlite.github.io/img/istio-servicev1.png&#34; width=&#34;100%&#34;/&gt; 
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;jason:
&lt;figure&gt;
    &lt;img src=&#34;https://kainlite.github.io/img/istio-servicev2.png&#34; width=&#34;100%&#34;/&gt; 
&lt;/figure&gt;

As you can see the difference in the v1 and v2 of the app are the stars below the reviews, but that is more than enough to indicate that it works, this is really nice for beta testers you don&amp;rsquo;t need or have to complicate your code but just add a header.&lt;/p&gt;

&lt;h3 id=&#34;injecting-an-http-abort-fault&#34;&gt;Injecting an HTTP abort fault:&lt;/h3&gt;

&lt;p&gt;This time we will inject a failure for our friend &lt;em&gt;jason&lt;/em&gt;:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;istio-&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;/samples/bookinfo $ kubectl apply -f networking/virtual-service-ratings-test-abort.yaml
virtualservice.networking.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ratings&amp;#34;&lt;/span&gt; created

$ kubectl get virtualservice ratings -o yaml
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: &lt;span style=&#34;color:#e6db74&#34;&gt;|
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      {&amp;#34;apiVersion&amp;#34;:&amp;#34;networking.istio.io/v1alpha3&amp;#34;,&amp;#34;kind&amp;#34;:&amp;#34;VirtualService&amp;#34;,&amp;#34;metadata&amp;#34;:{&amp;#34;annotations&amp;#34;:{},&amp;#34;name&amp;#34;:&amp;#34;ratings&amp;#34;,&amp;#34;namespace&amp;#34;:&amp;#34;default&amp;#34;},&amp;#34;spec&amp;#34;:{&amp;#34;hosts&amp;#34;:[&amp;#34;ratings&amp;#34;],&amp;#34;http&amp;#34;:[{&amp;#34;fault&amp;#34;:{&amp;#34;abort&amp;#34;:{&amp;#34;httpStatus&amp;#34;:500,&amp;#34;percent&amp;#34;:100}},&amp;#34;match&amp;#34;:[{&amp;#34;headers&amp;#34;:{&amp;#34;end-user&amp;#34;:{&amp;#34;exact&amp;#34;:&amp;#34;jason&amp;#34;}}}],&amp;#34;route&amp;#34;:[{&amp;#34;destination&amp;#34;:{&amp;#34;host&amp;#34;:&amp;#34;ratings&amp;#34;,&amp;#34;subset&amp;#34;:&amp;#34;v1&amp;#34;}}]},{&amp;#34;route&amp;#34;:[{&amp;#34;destination&amp;#34;:{&amp;#34;host&amp;#34;:&amp;#34;ratings&amp;#34;,&amp;#34;subset&amp;#34;:&amp;#34;v1&amp;#34;}}]}]}}&lt;/span&gt;
  creationTimestamp: &lt;span style=&#34;color:#e6db74&#34;&gt;2019-01-11T02:50:59Z&lt;/span&gt;
  generation: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
  name: ratings
  namespace: default
  resourceVersion: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;932552&amp;#34;&lt;/span&gt;
  selfLink: /apis/networking.istio.io/v1alpha3/namespaces/default/virtualservices/ratings
  uid: b98799b0-154b-&lt;span style=&#34;color:#ae81ff&#34;&gt;11e9&lt;/span&gt;-9eda-6a85233ec1d5
spec:
  hosts:
  - ratings
  http:
  - fault:
      abort:
        httpStatus: &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;
        percent: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;
    match:
    - headers:
        end-user:
          exact: jason
    route:
    - destination:
        host: ratings
        subset: v1
  - route:
    - destination:
        host: ratings
        subset: v1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;So he decided to check the book reviews again and boom, the ratings service was not available but everything else works just fine, this only applies for &lt;em&gt;jason&lt;/em&gt; everyone else will see the version without stars or the error message.
&lt;figure&gt;
    &lt;img src=&#34;https://kainlite.github.io/img/istio-servicev3.png&#34; width=&#34;100%&#34;/&gt; 
&lt;/figure&gt;
&lt;/p&gt;

&lt;h3 id=&#34;notes&#34;&gt;Notes&lt;/h3&gt;

&lt;p&gt;Istio seems an it is indeed really powerful, there many more features like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Traffic shifting.&lt;/li&gt;
&lt;li&gt;Requests timeouts.&lt;/li&gt;
&lt;li&gt;Circuit breaking.&lt;/li&gt;
&lt;li&gt;Mirroring.&lt;/li&gt;
&lt;li&gt;And a lot more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I left aside Policies, Telemetry and Security, if you want to learn more about Istio I highly recommend you to try the examples yourself and read on the &lt;a href=&#34;https://istio.io/docs/tasks/traffic-management/#collapse24&#34;&gt;official documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I also spent some time improving the navigation of the blog and some other minor details, but I wanted to keep the articles going so that&amp;rsquo;s why this one is so simple and similar to the documentation.&lt;/p&gt;

&lt;h3 id=&#34;upcoming-topics-and-ideas&#34;&gt;Upcoming topics and ideas&lt;/h3&gt;

&lt;p&gt;I Want to start creating series of content on different topics, brief articles that can get you started with some new technology or maybe give you an idea of how it works, let me know if you are interested in that kind of content in the comments or via twitter 🐦 (it&amp;rsquo;s a bird, in case you cannot see unicode characters).&lt;/p&gt;

&lt;h3 id=&#34;errata&#34;&gt;Errata&lt;/h3&gt;

&lt;p&gt;If you spot any error or have any suggestion, please send me a message so it gets fixed.&lt;/p&gt;

&lt;p&gt;Also, you can check the source code and changes in the &lt;a href=&#34;https://github.com/kainlite/kainlite.github.io&#34;&gt;generated code&lt;/a&gt; and the &lt;a href=&#34;https://github.com/kainlite/blog&#34;&gt;sources here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why do I need a service mesh?</title>
      <link>https://kainlite.github.io/blog/why_do_i_need_a_service_mesh/</link>
      <pubDate>Sun, 06 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kainlite.github.io/blog/why_do_i_need_a_service_mesh/</guid>
      <description>

&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;This time we will see how to get started with &lt;a href=&#34;https://istio.io/&#34;&gt;Istio&lt;/a&gt; and why do we need to use a service mesh.&lt;/p&gt;

&lt;p&gt;In this example I will be using &lt;a href=&#34;https://m.do.co/c/01d040b789de&#34;&gt;Digital Ocean&lt;/a&gt; (that&amp;rsquo;s my referral link), note that I do not have any association with Digital Ocean but they give you $100 to test their products for 60 days, if you spend $25 I get another $25.&lt;/p&gt;

&lt;h3 id=&#34;istio&#34;&gt;Istio&lt;/h3&gt;

&lt;p&gt;So&amp;hellip; You might be wondering some of those questions: why Istio? Why do I need a service mesh?, when do I need that? And I want to help you with some answers:&lt;/p&gt;

&lt;p&gt;Why do I need a service mesh? Basically because in cloud environments you cannot trust that the network will be reliable 100% of the time, that the latency will be low, that the network is secure and the bandwidth is infinite, the service mesh is just an extra layer to help microservices communicate with each other safely and reliably.&lt;/p&gt;

&lt;p&gt;When do I need to have one? This one can be tricky and will depend on your environment, but the moment that you start experiencing network issues between your microservices would be a good moment to do it, it could be done before of course, but it will highly depend on the project, if you can start early with it the better and easier to implement will be, always have in mind the benefits of added security, observability and likely performance improvement.&lt;/p&gt;

&lt;p&gt;Why Istio? This will be a small series of service meshes for kubernetes and I decided to start with Istio.&lt;/p&gt;

&lt;p&gt;In case you don&amp;rsquo;t agree with my explanations that&amp;rsquo;s ok, this is a TL;DR version and also I simplified things a lot, for a more complete overview you can check &lt;a href=&#34;https://blog.buoyant.io/2017/04/25/whats-a-service-mesh-and-why-do-i-need-one/&#34;&gt;this&lt;/a&gt; article or &lt;a href=&#34;https://www.oreilly.com/ideas/do-you-need-a-service-mesh&#34;&gt;this one&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;let-s-get-started&#34;&gt;Let&amp;rsquo;s get started&lt;/h3&gt;

&lt;p&gt;First of all we need to download and install Istio in our cluster, the recommended way of doing it is using helm (In this case I will be using the no Tiller alternative, but it could be done with helm install as well, check here for &lt;a href=&#34;https://istio.io/docs/setup/kubernetes/helm-install/&#34;&gt;more info&lt;/a&gt;):
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ curl -L https://git.io/getLatestIstio &lt;span style=&#34;color:#e6db74&#34;&gt;| sh -&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
This will download and extract the latest release, in this case 1.0.5 at this moment.&lt;/p&gt;

&lt;p&gt;So let&amp;rsquo;s install Istio&amp;hellip; only pay attention to the first 3 commands, then you can skip until the end of the code block, I post all the output because I like full examples :)
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;istio-&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; $ helm template install/kubernetes/helm/istio --name istio --namespace istio-system --set grafana.enabled=&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; $HOME/istio.yaml&lt;/span&gt;
istio-&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; $ kubectl create namespace istio-system
namespace &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-system&amp;#34;&lt;/span&gt; created

istio-&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; $ kubectl apply -f $HOME/istio.yaml
configmap &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-galley-configuration&amp;#34;&lt;/span&gt; created
configmap &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-statsd-prom-bridge&amp;#34;&lt;/span&gt; created
configmap &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;prometheus&amp;#34;&lt;/span&gt; created
configmap &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-security-custom-resources&amp;#34;&lt;/span&gt; created
configmap &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio&amp;#34;&lt;/span&gt; created
configmap &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-sidecar-injector&amp;#34;&lt;/span&gt; created
serviceaccount &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-galley-service-account&amp;#34;&lt;/span&gt; created
serviceaccount &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-egressgateway-service-account&amp;#34;&lt;/span&gt; created
serviceaccount &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-ingressgateway-service-account&amp;#34;&lt;/span&gt; created
serviceaccount &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-mixer-service-account&amp;#34;&lt;/span&gt; created
serviceaccount &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-pilot-service-account&amp;#34;&lt;/span&gt; created
serviceaccount &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;prometheus&amp;#34;&lt;/span&gt; created
serviceaccount &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-cleanup-secrets-service-account&amp;#34;&lt;/span&gt; created
clusterrole.rbac.authorization.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-cleanup-secrets-istio-system&amp;#34;&lt;/span&gt; created
clusterrolebinding.rbac.authorization.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-cleanup-secrets-istio-system&amp;#34;&lt;/span&gt; created
job.batch &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-cleanup-secrets&amp;#34;&lt;/span&gt; created
serviceaccount &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-security-post-install-account&amp;#34;&lt;/span&gt; created
clusterrole.rbac.authorization.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-security-post-install-istio-system&amp;#34;&lt;/span&gt; created
clusterrolebinding.rbac.authorization.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-security-post-install-role-binding-istio-system&amp;#34;&lt;/span&gt; created
job.batch &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-security-post-install&amp;#34;&lt;/span&gt; created
serviceaccount &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-citadel-service-account&amp;#34;&lt;/span&gt; created
serviceaccount &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-sidecar-injector-service-account&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;virtualservices.networking.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;destinationrules.networking.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;serviceentries.networking.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gateways.networking.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;envoyfilters.networking.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;httpapispecbindings.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;httpapispecs.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;quotaspecbindings.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;quotaspecs.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rules.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;attributemanifests.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bypasses.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;circonuses.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;deniers.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fluentds.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;kubernetesenvs.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;listcheckers.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;memquotas.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;noops.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;opas.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;prometheuses.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rbacs.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;redisquotas.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;servicecontrols.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;signalfxs.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;solarwindses.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;stackdrivers.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;statsds.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;stdios.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;apikeys.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;authorizations.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;checknothings.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;kuberneteses.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;listentries.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;logentries.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;edges.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;metrics.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;quotas.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;reportnothings.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;servicecontrolreports.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tracespans.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rbacconfigs.rbac.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;serviceroles.rbac.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;servicerolebindings.rbac.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;adapters.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;instances.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;templates.config.istio.io&amp;#34;&lt;/span&gt; created
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;handlers.config.istio.io&amp;#34;&lt;/span&gt; created
clusterrole.rbac.authorization.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-galley-istio-system&amp;#34;&lt;/span&gt; created
clusterrole.rbac.authorization.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-egressgateway-istio-system&amp;#34;&lt;/span&gt; created
clusterrole.rbac.authorization.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-ingressgateway-istio-system&amp;#34;&lt;/span&gt; created
clusterrole.rbac.authorization.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-mixer-istio-system&amp;#34;&lt;/span&gt; created
clusterrole.rbac.authorization.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-pilot-istio-system&amp;#34;&lt;/span&gt; created
clusterrole.rbac.authorization.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;prometheus-istio-system&amp;#34;&lt;/span&gt; created
clusterrole.rbac.authorization.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-citadel-istio-system&amp;#34;&lt;/span&gt; created
clusterrole.rbac.authorization.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-sidecar-injector-istio-system&amp;#34;&lt;/span&gt; created
clusterrolebinding.rbac.authorization.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-galley-admin-role-binding-istio-system&amp;#34;&lt;/span&gt; created
clusterrolebinding.rbac.authorization.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-egressgateway-istio-system&amp;#34;&lt;/span&gt; created
clusterrolebinding.rbac.authorization.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-ingressgateway-istio-system&amp;#34;&lt;/span&gt; created
clusterrolebinding.rbac.authorization.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-mixer-admin-role-binding-istio-system&amp;#34;&lt;/span&gt; created
clusterrolebinding.rbac.authorization.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-pilot-istio-system&amp;#34;&lt;/span&gt; created
clusterrolebinding.rbac.authorization.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;prometheus-istio-system&amp;#34;&lt;/span&gt; created
clusterrolebinding.rbac.authorization.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-citadel-istio-system&amp;#34;&lt;/span&gt; created
clusterrolebinding.rbac.authorization.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-sidecar-injector-admin-role-binding-istio-system&amp;#34;&lt;/span&gt; created
service &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-galley&amp;#34;&lt;/span&gt; created
service &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-egressgateway&amp;#34;&lt;/span&gt; created
service &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-ingressgateway&amp;#34;&lt;/span&gt; created
service &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-policy&amp;#34;&lt;/span&gt; created
service &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-telemetry&amp;#34;&lt;/span&gt; created
service &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-pilot&amp;#34;&lt;/span&gt; created
service &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;prometheus&amp;#34;&lt;/span&gt; created
service &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-citadel&amp;#34;&lt;/span&gt; created
service &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-sidecar-injector&amp;#34;&lt;/span&gt; created
deployment.extensions &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-galley&amp;#34;&lt;/span&gt; created
deployment.extensions &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-egressgateway&amp;#34;&lt;/span&gt; created
deployment.extensions &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-ingressgateway&amp;#34;&lt;/span&gt; created
deployment.extensions &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-policy&amp;#34;&lt;/span&gt; created
deployment.extensions &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-telemetry&amp;#34;&lt;/span&gt; created
deployment.extensions &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-pilot&amp;#34;&lt;/span&gt; created
deployment.extensions &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;prometheus&amp;#34;&lt;/span&gt; created
deployment.extensions &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-citadel&amp;#34;&lt;/span&gt; created
deployment.extensions &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-sidecar-injector&amp;#34;&lt;/span&gt; created
gateway.networking.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-autogenerated-k8s-ingress&amp;#34;&lt;/span&gt; created
horizontalpodautoscaler.autoscaling &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-egressgateway&amp;#34;&lt;/span&gt; created
horizontalpodautoscaler.autoscaling &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-ingressgateway&amp;#34;&lt;/span&gt; created
horizontalpodautoscaler.autoscaling &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-policy&amp;#34;&lt;/span&gt; created
horizontalpodautoscaler.autoscaling &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-telemetry&amp;#34;&lt;/span&gt; created
horizontalpodautoscaler.autoscaling &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-pilot&amp;#34;&lt;/span&gt; created
mutatingwebhookconfiguration.admissionregistration.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-sidecar-injector&amp;#34;&lt;/span&gt; created
attributemanifest.config.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istioproxy&amp;#34;&lt;/span&gt; created
attributemanifest.config.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;kubernetes&amp;#34;&lt;/span&gt; created
stdio.config.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;handler&amp;#34;&lt;/span&gt; created
logentry.config.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;accesslog&amp;#34;&lt;/span&gt; created
logentry.config.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tcpaccesslog&amp;#34;&lt;/span&gt; created
rule.config.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;stdio&amp;#34;&lt;/span&gt; created
rule.config.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;stdiotcp&amp;#34;&lt;/span&gt; created
metric.config.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;requestcount&amp;#34;&lt;/span&gt; created
metric.config.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;requestduration&amp;#34;&lt;/span&gt; created
metric.config.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;requestsize&amp;#34;&lt;/span&gt; created
metric.config.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;responsesize&amp;#34;&lt;/span&gt; created
metric.config.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tcpbytesent&amp;#34;&lt;/span&gt; created
metric.config.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tcpbytereceived&amp;#34;&lt;/span&gt; created
prometheus.config.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;handler&amp;#34;&lt;/span&gt; created
rule.config.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;promhttp&amp;#34;&lt;/span&gt; created
rule.config.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;promtcp&amp;#34;&lt;/span&gt; created
kubernetesenv.config.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;handler&amp;#34;&lt;/span&gt; created
rule.config.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;kubeattrgenrulerule&amp;#34;&lt;/span&gt; created
rule.config.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tcpkubeattrgenrulerule&amp;#34;&lt;/span&gt; created
kubernetes.config.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;attributes&amp;#34;&lt;/span&gt; created
destinationrule.networking.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-policy&amp;#34;&lt;/span&gt; created
destinationrule.networking.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-telemetry&amp;#34;&lt;/span&gt; created&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
WOAH, What did just happen?, a lot of new resources were created, basically we just generated the manifest from the helm chart and applied that to our cluster.&lt;/p&gt;

&lt;p&gt;So lets see what&amp;rsquo;s running and what that means:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ kubectl get pods -n istio-system
NAME                                      READY     STATUS      RESTARTS   AGE
istio-citadel-856f994c58-l96p8            &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;       Running     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          3m
istio-cleanup-secrets-xqqj4               &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;       Completed   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          3m
istio-egressgateway-5649fcf57-7zwkh       &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;       Running     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          3m
istio-galley-7665f65c9c-tzn7d             &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;       Running     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          3m
istio-ingressgateway-6755b9bbf6-bh84r     &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;       Running     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          3m
istio-pilot-56855d999b-c4cp5              &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;       Running     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          3m
istio-policy-6fcb6d655f-9544z             &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;       Running     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          3m
istio-sidecar-injector-768c79f7bf-th8zh   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;       Running     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          3m
istio-telemetry-664d896cf5-jdcwv          &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;       Running     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          3m
prometheus-76b7745b64-f8jxn               &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;       Running     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          3m&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
A few minutes later, almost everything is up, but what&amp;rsquo;s all that? Istio has several components, see the following overview extracted from &lt;a href=&#34;https://github.com/istio/istio&#34;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Envoy&lt;/strong&gt;: Sidecar proxies per microservice to handle ingress/egress traffic between services in the cluster and from a service to external services. The proxies form a secure microservice mesh providing a rich set of functions like discovery, rich layer-7 routing, circuit breakers, policy enforcement and telemetry recording/reporting functions.
Note: The service mesh is not an overlay network. It simplifies and enhances how microservices in an application talk to each other over the network provided by the underlying platform.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mixer&lt;/strong&gt;: Central component that is leveraged by the proxies and microservices to enforce policies such as authorization, rate limits, quotas, authentication, request tracing and telemetry collection.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pilot&lt;/strong&gt;: A component responsible for configuring the proxies at runtime.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Citadel&lt;/strong&gt;: A centralized component responsible for certificate issuance and rotation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Node Agent&lt;/strong&gt;: A per-node component responsible for certificate issuance and rotation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Galley&lt;/strong&gt;: Central component for validating, ingesting, aggregating, transforming and distributing config within Istio.&lt;/p&gt;

&lt;p&gt;Ok so, a lot of new things were installed but how do I know it&amp;rsquo;s working? let&amp;rsquo;s deploy a &lt;a href=&#34;https://istio.io/docs/examples/bookinfo/&#34;&gt;test application&lt;/a&gt; and check it:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ export PATH=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$PATH:~/istio-1.0.5/bin&amp;#34;&lt;/span&gt;
istio-&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;/samples/bookinfo $ kubectl apply -f &amp;lt;(istioctl kube-inject -f platform/kube/bookinfo.yaml)
service &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;details&amp;#34;&lt;/span&gt; created
deployment.extensions &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;details-v1&amp;#34;&lt;/span&gt; created
service &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ratings&amp;#34;&lt;/span&gt; created
deployment.extensions &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ratings-v1&amp;#34;&lt;/span&gt; created
service &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;reviews&amp;#34;&lt;/span&gt; created
deployment.extensions &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;reviews-v1&amp;#34;&lt;/span&gt; created
deployment.extensions &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;reviews-v2&amp;#34;&lt;/span&gt; created
deployment.extensions &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;reviews-v3&amp;#34;&lt;/span&gt; created
service &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;productpage&amp;#34;&lt;/span&gt; created
deployment.extensions &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;productpage-v1&amp;#34;&lt;/span&gt; created&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
That command not only deployed the application but injected the Istio sidecar to each pod:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ kubectl get pods
NAME                              READY     STATUS    RESTARTS   AGE
details-v1-8bd954dbb-zhrqq        &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;       Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          2m
productpage-v1-849c786f96-kpfx9   &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;       Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          2m
ratings-v1-68d648d6fd-w68qb       &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;       Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          2m
reviews-v1-b4c984bdc-9s6j5        &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;       Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          2m
reviews-v2-575446d5db-r6kwc       &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;       Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          2m
reviews-v3-74458c4889-kr4wb       &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;       Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          2m&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
As we can see each pod has 2 containers in it, the app container and istio-proxy. You can also configure &lt;a href=&#34;https://istio.io/docs/setup/kubernetes/sidecar-injection/#automatic-sidecar-injection&#34;&gt;automatic sidecar injection&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also all services are running:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ kubectl get services
NAME          TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE
details       ClusterIP   &lt;span style=&#34;color:#ae81ff&#34;&gt;10.245&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;134.179&lt;/span&gt;   &amp;lt;none&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt;        9080/TCP   3m&lt;/span&gt;
kubernetes    ClusterIP   &lt;span style=&#34;color:#ae81ff&#34;&gt;10.245&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;       &amp;lt;none&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt;        443/TCP    3d&lt;/span&gt;
productpage   ClusterIP   &lt;span style=&#34;color:#ae81ff&#34;&gt;10.245&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;32.221&lt;/span&gt;    &amp;lt;none&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt;        9080/TCP   3m&lt;/span&gt;
ratings       ClusterIP   &lt;span style=&#34;color:#ae81ff&#34;&gt;10.245&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;159.112&lt;/span&gt;   &amp;lt;none&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt;        9080/TCP   3m&lt;/span&gt;
reviews       ClusterIP   &lt;span style=&#34;color:#ae81ff&#34;&gt;10.245&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;77.125&lt;/span&gt;    &amp;lt;none&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt;        9080/TCP   3m&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;But how do I access the app?
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;istio-&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;/samples/bookinfo $ kubectl apply -f networking/bookinfo-gateway.yaml
gateway.networking.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bookinfo-gateway&amp;#34;&lt;/span&gt; created
virtualservice.networking.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bookinfo&amp;#34;&lt;/span&gt; created&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
In Istio a Gateway configures a load balancer for HTTP/TCP traffic, most commonly operating at the edge of the mesh to enable ingress traffic for an application (L4-L6).&lt;/p&gt;

&lt;p&gt;After that we need to set some environment variables to fetch the LB ip, port, etc.
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ export INGRESS_HOST=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{.status.loadBalancer.ingress[0].ip}&amp;#39;&lt;/span&gt;)
$ export INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{.spec.ports[?(@.name==&amp;#34;http2&amp;#34;)].port}&amp;#39;&lt;/span&gt;)
$ export SECURE_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{.spec.ports[?(@.name==&amp;#34;https&amp;#34;)].port}&amp;#39;&lt;/span&gt;)
$ export GATEWAY_URL=$INGRESS_HOST:$INGRESS_PORT

curl -o /dev/&lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt; -s -w &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%{http_code}\n&amp;#34;&lt;/span&gt; http://${GATEWAY_URL}/productpage&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
If the latest curl returns 200 then we&amp;rsquo;re good, you can also browse the app &lt;code&gt;open http://${GATEWAY_URL}/productpage&lt;/code&gt; and you will see something like the following image:
&lt;figure&gt;
    &lt;img src=&#34;https://kainlite.github.io/img/productpage-example.png&#34; width=&#34;100%&#34;/&gt; &lt;figcaption&gt;
            &lt;h4&gt;Product page example&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Also you can use &lt;a href=&#34;https://grafana.com/&#34;&gt;Grafana&lt;/a&gt; to check some metrics about the service usage, etc. (You don&amp;rsquo;t have to worry about prometheus since it&amp;rsquo;s enabled by default). Spin up the port-forward so we don&amp;rsquo;t have to expose grafana: to the world with: &lt;code&gt;kubectl -n istio-system port-forward $(kubectl -n istio-system get pod -l app=grafana -o jsonpath=&#39;{.items[0].metadata.name}&#39;) 3000:3000&lt;/code&gt;, and then &lt;code&gt;open http://localhost:3000&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;As a general advice check all the settings that Istio offers try the ones that you think that could be useful for your project and always measure and compare.&lt;/p&gt;

&lt;h3 id=&#34;notes&#34;&gt;Notes&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Do mind that &lt;strong&gt;pilot&lt;/strong&gt; pod requires at least 4 Gbs of memory, so you will need at least one node with that amount of memory.&lt;/li&gt;
&lt;li&gt;You can check the load balancer status under: Manage -&amp;gt; Networking -&amp;gt; Load balancers. And if everything is okay your LB will say Healthy.&lt;/li&gt;
&lt;li&gt;Grafana is not enabled by default but we do enable it via helm with &lt;code&gt;--set grafana.enabled=true&lt;/code&gt;, if you want to check all the possible options &lt;a href=&#34;https://istio.io/docs/reference/config/installation-options/&#34;&gt;go here&lt;/a&gt;, if you are using more than two &lt;code&gt;--set&lt;/code&gt; options I would recommend creating a &lt;code&gt;values.yaml&lt;/code&gt; file and use that instead.&lt;/li&gt;
&lt;li&gt;Istio is a big beast and should be treated carefully, there is a lot more to learn and test out. We only scratched the surface here.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;upcoming-posts&#34;&gt;Upcoming posts&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;More examples using Istio.&lt;/li&gt;
&lt;li&gt;Linkerd.&lt;/li&gt;
&lt;li&gt;Maybe some Golang fun.&lt;/li&gt;
&lt;li&gt;Serverless or kubeless, that&amp;rsquo;s the question.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;errata&#34;&gt;Errata&lt;/h3&gt;

&lt;p&gt;If you spot any error or have any suggestion, please send me a message so it gets fixed.&lt;/p&gt;

&lt;p&gt;Also, you can check the source code and changes in the &lt;a href=&#34;https://github.com/kainlite/kainlite.github.io&#34;&gt;generated code&lt;/a&gt; and the &lt;a href=&#34;https://github.com/kainlite/blog&#34;&gt;sources here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting started with skaffold</title>
      <link>https://kainlite.github.io/blog/getting_started_with_skaffold/</link>
      <pubDate>Thu, 03 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kainlite.github.io/blog/getting_started_with_skaffold/</guid>
      <description>

&lt;h3 id=&#34;skaffold&#34;&gt;&lt;strong&gt;Skaffold&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;This time we will see how to get started with &lt;a href=&#34;https://github.com/GoogleContainerTools/skaffold&#34;&gt;Skaffold&lt;/a&gt;, it seems a relatively mature project, and it does a lot more than some of the previous explored alternatives: &lt;em&gt;Skaffold is a command line tool that facilitates continuous development for Kubernetes applications. You can iterate on your application source code locally then deploy to local or remote Kubernetes clusters. Skaffold handles the workflow for building, pushing and deploying your application. It also provides building blocks and describe customizations for a CI/CD pipeline.&lt;/em&gt; (Extracted from &lt;a href=&#34;https://github.com/GoogleContainerTools/skaffold&#34;&gt;github&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;In this example I will be using &lt;a href=&#34;https://m.do.co/c/01d040b789de&#34;&gt;Digital Ocean&lt;/a&gt; (that&amp;rsquo;s my referral link), note that I do not have any association with Digital Ocean but they give you $100 to test their products for 60 days, if you spend $25 I get another $25, I got the idea from &lt;a href=&#34;https://www.youtube.com/watch?v=fhYSKEy0s8w&#34;&gt;Pelado Nerd Spanish Youtube Channel&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;let-s-get-started&#34;&gt;Let&amp;rsquo;s get started&lt;/h3&gt;

&lt;p&gt;Once you have created your account and added your credit card you will get the $100 of free credit, then you will have to go to Manage on the left side panel and click on Kubernetes, then create your cluster with the amount of nodes that you consider necessary but remember to power them off or delete these resources so you don&amp;rsquo;t waste the free credit or your credit card itself. Once you have created your cluster and downloaded the kubectl config you&amp;rsquo;re ready to go.&lt;/p&gt;

&lt;p&gt;We will be working with the chat bot again you can see the original &lt;a href=&#34;https://kainlite.github.io/blog/go_echobot/&#34;&gt;article here&lt;/a&gt;, and the repo &lt;a href=&#34;https://github.com/kainlite/echobot/tree/skaffold&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s tell our kubectl to use our recently downloaded config:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ export KUBECONFIG=/home/kainlite/Downloads/k8s-&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;-&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;-&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;-do-&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;-nyc1-&lt;span style=&#34;color:#ae81ff&#34;&gt;1546545313076&lt;/span&gt;-kubeconfig.yaml
$ kubectl get nodes -o wide

NAME                 STATUS    ROLES     AGE       VERSION   EXTERNAL-IP       OS-IMAGE                       KERNEL-VERSION   CONTAINER-RUNTIME
crazy-wozniak-&lt;span style=&#34;color:#ae81ff&#34;&gt;8306&lt;/span&gt;   Ready     &amp;lt;none&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt;    6h        v1.13.1   178.128.154.205   Debian GNU/Linux 9 (stretch)   4.9.0-8-amd64    docker://18.9.0&lt;/span&gt;
crazy-wozniak-830t   Ready     &amp;lt;none&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt;    6h        v1.13.1   167.99.224.115    Debian GNU/Linux 9 (stretch)   4.9.0-8-amd64    docker://18.9.0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
Your config might have a slightly different name, but it should be similar. We can see in the output a lot of information about our nodes (workers).&lt;/p&gt;

&lt;p&gt;But let&amp;rsquo;s cut to the chase, we are here for &lt;em&gt;Skaffold&lt;/em&gt;:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/v0.&lt;span style=&#34;color:#ae81ff&#34;&gt;20.0&lt;/span&gt;/skaffold-linux-amd64 &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; chmod +x skaffold &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo mv skaffold /usr/local/bin&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
You can install the binary using the provided line (linux) or downloading it from the &lt;a href=&#34;https://github.com/GoogleContainerTools/skaffold/releases&#34;&gt;releases page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Once installed we can see the &lt;a href=&#34;https://github.com/GoogleContainerTools/skaffold/tree/master/examples&#34;&gt;examples&lt;/a&gt;, I will be using the getting-started example:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;apiVersion: skaffold/v1beta2
kind: Config
build:
  artifacts:
  - image: kainlite/echobot
deploy:
  kubectl:
    manifests:
      - k8s-*&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
With very litle YAML we can accomplish a lot.&lt;/p&gt;

&lt;p&gt;We need a manifest file that matches that pattern so skaffold can deploy/re-deploy our application, so let&amp;rsquo;s generate one with &lt;code&gt;kubectl run echobot --image=kainlite/echobot --dry-run -o yaml&lt;/code&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    run: echobot
  name: echobot
spec:
  replicas: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
  selector:
    matchLabels:
      run: echobot
  strategy: {}
  template:
    metadata:
      labels:
        run: echobot
    spec:
      containers:
      - image: kainlite/echobot
        name: echobot
        env:
        - name: SLACK_API_TOKEN
          value: really_long_token
        livenessProbe:
          exec:
            command:
            - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/bin/sh&amp;#39;&lt;/span&gt;
            - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-c&amp;#39;&lt;/span&gt;
            - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/app/health_check.sh&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
The above command can be used to generate any kind of k8s resource :), I stripped it a bit, because there were fields that I didn&amp;rsquo;t want in and added some that we need for it to work.&lt;/p&gt;

&lt;p&gt;Then the only thing left to do is testing that everything works properly:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ skaffold build

Starting build...
Building [kainlite/echobot]...
Sending build context to Docker daemon  &lt;span style=&#34;color:#ae81ff&#34;&gt;66.&lt;/span&gt;56kB
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : FROM golang:&lt;span style=&#34;color:#ae81ff&#34;&gt;1.11&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;-alpine as builder
 ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; 57915f96905a&lt;/span&gt;
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : WORKDIR /app
 ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ---&amp;gt; e04488a7f16b&lt;/span&gt;
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : RUN adduser -D -g &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;app&amp;#39;&lt;/span&gt; app &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;     chown -R app:app /app &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;     apk add git &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apk add gcc musl-dev
 ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Running in 1339601fff6f&lt;/span&gt;
fetch http://dl-cdn.alpinelinux.org/alpine/v3.&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;/main/x86_64/APKINDEX.tar.gz
fetch http://dl-cdn.alpinelinux.org/alpine/v3.&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;/community/x86_64/APKINDEX.tar.gz
(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;) Installing nghttp2-libs (&lt;span style=&#34;color:#ae81ff&#34;&gt;1.32&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;-r0)
(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;) Installing libssh2 (&lt;span style=&#34;color:#ae81ff&#34;&gt;1.8&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;-r3)
(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;) Installing libcurl (&lt;span style=&#34;color:#ae81ff&#34;&gt;7.61&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;-r1)
(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;) Installing expat (&lt;span style=&#34;color:#ae81ff&#34;&gt;2.2&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;-r0)
(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;) Installing pcre2 (&lt;span style=&#34;color:#ae81ff&#34;&gt;10.31&lt;/span&gt;-r0)
(&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;) Installing git (&lt;span style=&#34;color:#ae81ff&#34;&gt;2.18&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;-r0)
Executing busybox-&lt;span style=&#34;color:#ae81ff&#34;&gt;1.28&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;-r1.trigger
OK: &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt; MiB in &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; packages
(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;) Installing binutils (&lt;span style=&#34;color:#ae81ff&#34;&gt;2.30&lt;/span&gt;-r5)
(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;) Installing gmp (&lt;span style=&#34;color:#ae81ff&#34;&gt;6.1&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;-r1)
(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;) Installing isl (&lt;span style=&#34;color:#ae81ff&#34;&gt;0.18&lt;/span&gt;-r0)
(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;) Installing libgomp (&lt;span style=&#34;color:#ae81ff&#34;&gt;6.4&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;-r9)
(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;) Installing libatomic (&lt;span style=&#34;color:#ae81ff&#34;&gt;6.4&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;-r9)
(&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;) Installing pkgconf (&lt;span style=&#34;color:#ae81ff&#34;&gt;1.5&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;-r0)
(&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;) Installing libgcc (&lt;span style=&#34;color:#ae81ff&#34;&gt;6.4&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;-r9)
(&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;) Installing mpfr3 (&lt;span style=&#34;color:#ae81ff&#34;&gt;3.1&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;-r1)
(&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;) Installing mpc1 (&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;-r1)
(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;) Installing libstdc++ (&lt;span style=&#34;color:#ae81ff&#34;&gt;6.4&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;-r9)
(&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;) Installing gcc (&lt;span style=&#34;color:#ae81ff&#34;&gt;6.4&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;-r9)
(&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;) Installing musl-dev (&lt;span style=&#34;color:#ae81ff&#34;&gt;1.1&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;-r10)
Executing busybox-&lt;span style=&#34;color:#ae81ff&#34;&gt;1.28&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;-r1.trigger
OK: &lt;span style=&#34;color:#ae81ff&#34;&gt;113&lt;/span&gt; MiB in &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; packages
 ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; 0e7a97e577dc&lt;/span&gt;
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : ADD . /app/
 ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; 72cfd4dea99b&lt;/span&gt;
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : RUN go get -d -v ./... &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; go build -o main . &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; chown -R app:app /app /home/app
 ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Running in 4482bfd3e8f7&lt;/span&gt;
go: finding github.com/gorilla/websocket v1.&lt;span style=&#34;color:#ae81ff&#34;&gt;4.0&lt;/span&gt;
go: finding github.com/nlopes/slack v0.&lt;span style=&#34;color:#ae81ff&#34;&gt;4.0&lt;/span&gt;
go: finding github.com/pkg/errors v0.&lt;span style=&#34;color:#ae81ff&#34;&gt;8.0&lt;/span&gt;
go: downloading github.com/nlopes/slack v0.&lt;span style=&#34;color:#ae81ff&#34;&gt;4.0&lt;/span&gt;
go: downloading github.com/pkg/errors v0.&lt;span style=&#34;color:#ae81ff&#34;&gt;8.0&lt;/span&gt;
go: downloading github.com/gorilla/websocket v1.&lt;span style=&#34;color:#ae81ff&#34;&gt;4.0&lt;/span&gt;
 ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; 8ea604c7fb37&lt;/span&gt;
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : FROM golang:&lt;span style=&#34;color:#ae81ff&#34;&gt;1.11&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;-alpine
 ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; 57915f96905a&lt;/span&gt;
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : WORKDIR /app
 ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ---&amp;gt; e04488a7f16b&lt;/span&gt;
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : RUN adduser -D -g &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;app&amp;#39;&lt;/span&gt; app &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;     chown -R app:app /app
 ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ---&amp;gt; 33b206dba7e4&lt;/span&gt;
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : COPY --from=builder --chown=app /app/health_check.sh /app/health_check.sh
 ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ---&amp;gt; 34d3cd1a5bb0&lt;/span&gt;
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : COPY --from=builder --chown=app /app/main /app/main
 ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ---&amp;gt; 0c3d838b25dc&lt;/span&gt;
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : USER app
 ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ---&amp;gt; 95c2bf90800c&lt;/span&gt;
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : CMD [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/app/main&amp;#34;&lt;/span&gt;]
 ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ---&amp;gt; 3541257ff16c&lt;/span&gt;
Successfully built 3541257ff16c
Successfully tagged 1fca8a8c999a8cd9b943456b70d90807:latest
The push refers to repository [docker.io/kainlite/echobot]
ee06a8f42495: Preparing
12468476a0ef: Preparing
ec122f36b39d: Preparing
e94f3271cc73: Preparing
93391cb9fd4b: Preparing
cb9d0f9550f6: Preparing
93448d8c2605: Preparing
c54f8a17910a: Preparing
df64d3292fd6: Preparing
cb9d0f9550f6: Waiting
c54f8a17910a: Waiting
93448d8c2605: Waiting
e94f3271cc73: Layer already exists
93391cb9fd4b: Layer already exists
12468476a0ef: Layer already exists
ec122f36b39d: Layer already exists
ee06a8f42495: Layer already exists
93448d8c2605: Layer already exists
cb9d0f9550f6: Layer already exists
df64d3292fd6: Layer already exists
c54f8a17910a: Layer already exists
fc03e3d-dirty-&lt;span style=&#34;color:#ae81ff&#34;&gt;3541257&lt;/span&gt;: digest: sha256:99c6d3d5b226a1947e8f96c0a5f963c8e499848d271f121ad50551046a0dc7ca size: &lt;span style=&#34;color:#ae81ff&#34;&gt;2197&lt;/span&gt;
Build complete in &lt;span style=&#34;color:#ae81ff&#34;&gt;48.&lt;/span&gt;642618413s
Starting test...
Test complete in &lt;span style=&#34;color:#ae81ff&#34;&gt;9.&lt;/span&gt;15µs
kainlite/echobot -&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; kainlite/echobot:fc03e3d-dirty-3541257&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
As we can see skaffold build not only did the docker build but also tagged and pushed the image to &lt;a href=&#34;https://cloud.docker.com/repository/docker/kainlite/echobot/tags&#34;&gt;docker hub&lt;/a&gt;, which is really nice and really useful to build a CI/CD system with it.&lt;/p&gt;

&lt;p&gt;But wait, we need to deploy that to our cluster, right on:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ skaffold deploy
Starting build...
Building [kainlite/echobot]...
Sending build context to Docker daemon  &lt;span style=&#34;color:#ae81ff&#34;&gt;66.&lt;/span&gt;56kB
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : FROM golang:&lt;span style=&#34;color:#ae81ff&#34;&gt;1.11&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;-alpine as builder
 ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; 57915f96905a&lt;/span&gt;
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : WORKDIR /app
 ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ---&amp;gt; e04488a7f16b&lt;/span&gt;
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : RUN adduser -D -g &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;app&amp;#39;&lt;/span&gt; app &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;     chown -R app:app /app &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;     apk add git &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apk add gcc musl-dev
 ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ---&amp;gt; 0e7a97e577dc&lt;/span&gt;
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : ADD . /app/
 ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ---&amp;gt; 72cfd4dea99b&lt;/span&gt;
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : RUN go get -d -v ./... &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; go build -o main . &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; chown -R app:app /app /home/app
 ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ---&amp;gt; 8ea604c7fb37&lt;/span&gt;
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : FROM golang:&lt;span style=&#34;color:#ae81ff&#34;&gt;1.11&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;-alpine
 ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; 57915f96905a&lt;/span&gt;
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : WORKDIR /app
 ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ---&amp;gt; e04488a7f16b&lt;/span&gt;
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : RUN adduser -D -g &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;app&amp;#39;&lt;/span&gt; app &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;     chown -R app:app /app
 ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ---&amp;gt; 33b206dba7e4&lt;/span&gt;
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : COPY --from=builder --chown=app /app/health_check.sh /app/health_check.sh
 ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ---&amp;gt; 34d3cd1a5bb0&lt;/span&gt;
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : COPY --from=builder --chown=app /app/main /app/main
 ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ---&amp;gt; 0c3d838b25dc&lt;/span&gt;
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : USER app
 ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ---&amp;gt; 95c2bf90800c&lt;/span&gt;
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : CMD [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/app/main&amp;#34;&lt;/span&gt;]
 ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ---&amp;gt; 3541257ff16c&lt;/span&gt;
Successfully built 3541257ff16c
Successfully tagged 510226574761304cc9d64a343d5bdbff:latest
The push refers to repository [docker.io/kainlite/echobot]
ee06a8f42495: Preparing
12468476a0ef: Preparing
ec122f36b39d: Preparing
e94f3271cc73: Preparing
93391cb9fd4b: Preparing
cb9d0f9550f6: Preparing
93448d8c2605: Preparing
c54f8a17910a: Preparing
df64d3292fd6: Preparing
cb9d0f9550f6: Waiting
93448d8c2605: Waiting
c54f8a17910a: Waiting
df64d3292fd6: Waiting
12468476a0ef: Layer already exists
e94f3271cc73: Layer already exists
cb9d0f9550f6: Layer already exists
ec122f36b39d: Layer already exists
93391cb9fd4b: Layer already exists
ee06a8f42495: Layer already exists
c54f8a17910a: Layer already exists
df64d3292fd6: Layer already exists
93448d8c2605: Mounted from library/golang
fc03e3d-dirty-&lt;span style=&#34;color:#ae81ff&#34;&gt;3541257&lt;/span&gt;: digest: sha256:99c6d3d5b226a1947e8f96c0a5f963c8e499848d271f121ad50551046a0dc7ca size: &lt;span style=&#34;color:#ae81ff&#34;&gt;2197&lt;/span&gt;
Build complete in &lt;span style=&#34;color:#ae81ff&#34;&gt;15.&lt;/span&gt;136865292s
Starting test...
Test complete in &lt;span style=&#34;color:#ae81ff&#34;&gt;17.&lt;/span&gt;912µs
Starting deploy...
kubectl client version: &lt;span style=&#34;color:#ae81ff&#34;&gt;1.10&lt;/span&gt;
kubectl version &lt;span style=&#34;color:#ae81ff&#34;&gt;1.12&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; or greater is recommended for use with skaffold
deployment.extensions &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;echobot&amp;#34;&lt;/span&gt; configured
Deploy complete in &lt;span style=&#34;color:#ae81ff&#34;&gt;5.&lt;/span&gt;676513226s&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
Deploy does a lot like with gitkube, it build the image, pushes it to the registry and then makes the deployment to the cluster, as you can see in there skaffold relies on kubectl and I have an old version of it.&lt;/p&gt;

&lt;p&gt;After a few seconds we can see that our deployment has been triggered and we have a new pod being created for it.
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ kubectl get pods
NAME                       READY     STATUS              RESTARTS   AGE
echobot-57fdcccf76-4qwvq   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;       ContainerCreating   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          5s
echobot-6fcd78658c-njvpx   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;       Terminating         &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          9m&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
Skaffold also has another nice option that it&amp;rsquo;s called &lt;em&gt;dev&lt;/em&gt; it watches the folder for changes and re-deploys the app so you can focus on code.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s clean up and call it a day:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ skaffold delete
Cleaning up...
deployment.extensions &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;echobot&amp;#34;&lt;/span&gt; deleted
Cleanup complete in &lt;span style=&#34;color:#ae81ff&#34;&gt;3.&lt;/span&gt;833219278s&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h3 id=&#34;notes&#34;&gt;Notes&lt;/h3&gt;

&lt;p&gt;I really liked the workflow that skaffold provides, I hope that I can use it some more in the near future. And remember to shutdown the kubernetes cluster if you are using Digital Ocean so you don&amp;rsquo;t get charged by surprise later on.&lt;/p&gt;

&lt;h3 id=&#34;errata&#34;&gt;Errata&lt;/h3&gt;

&lt;p&gt;If you spot any error or have any suggestion, please send me a message so it gets fixed.&lt;/p&gt;

&lt;p&gt;Also, you can check the source code and changes in the &lt;a href=&#34;https://github.com/kainlite/kainlite.github.io&#34;&gt;generated code&lt;/a&gt; and the &lt;a href=&#34;https://github.com/kainlite/blog&#34;&gt;sources here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting started with gitkube</title>
      <link>https://kainlite.github.io/blog/getting_started_with_gitkube/</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kainlite.github.io/blog/getting_started_with_gitkube/</guid>
      <description>

&lt;h3 id=&#34;gitkube&#34;&gt;&lt;strong&gt;Gitkube&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;This time we will see how to get started with &lt;a href=&#34;https://gitkube.sh/&#34;&gt;Gitkube&lt;/a&gt;, it&amp;rsquo;s a young project but it seems to work fine and it has an interesting approach compared to other alternatives, since it only relies on git and kubectl, other than that it&amp;rsquo;s just a &lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/&#34;&gt;CRD&lt;/a&gt; and a controller, so you end up with 2 pods in kube-system one for the controller and the other for gitkubed, gitkubed is in charge of cloning your repos and also build the docker images, it seems that the idea behind gitkube is for the daily use in a dev/test environment where you need to try your changes quickly and without hassle. You can find more &lt;a href=&#34;https://github.com/hasura/gitkube-example&#34;&gt;examples here&lt;/a&gt;, also be sure to check their page and documentation if you like it or want to learn more.&lt;/p&gt;

&lt;p&gt;In the examples I will be using &lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/install-minikube&#34;&gt;minikube&lt;/a&gt; or you can &lt;a href=&#34;https://github.com/kainlite/kainlite.github.io&#34;&gt;check out this repo&lt;/a&gt; that has a good overview of minikube, once installed and started (&lt;code&gt;minikube start&lt;/code&gt;) that command will download and configure the local environment, if you have been following the previous posts you already have minikube installed and working, &lt;em&gt;but in this post be sure to use &lt;em&gt;minikube tunnel&lt;/em&gt;&lt;/em&gt; if you configure gitkube with a load balancer (or if you configure any service type as load balancer):&lt;/p&gt;

&lt;h3 id=&#34;let-s-get-started&#34;&gt;Let&amp;rsquo;s get started&lt;/h3&gt;

&lt;p&gt;We&amp;rsquo;re going to deploy or re-deploy our echo bot one more time but this time using gitkube.
You can find the chat bot: &lt;a href=&#34;https://kainlite.github.io/blog/go_echobot/&#34;&gt;article here&lt;/a&gt;, and the repo: &lt;a href=&#34;https://github.com/kainlite/echobot/tree/gitkube&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First of all we need to install the gitkube binary in our machine and then the CRD in our kubernetes cluster:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ kubectl create -f https://storage.googleapis.com/gitkube/gitkube-setup-stable.yaml
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;remotes.gitkube.sh&amp;#34;&lt;/span&gt; created
serviceaccount &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gitkube&amp;#34;&lt;/span&gt; created
clusterrolebinding.rbac.authorization.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gitkube&amp;#34;&lt;/span&gt; created
configmap &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gitkube-ci-conf&amp;#34;&lt;/span&gt; created
deployment.extensions &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gitkubed&amp;#34;&lt;/span&gt; created
deployment.extensions &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gitkube-controller&amp;#34;&lt;/span&gt; created

$ kubectl --namespace kube-system expose deployment gitkubed --type=LoadBalancer --name=gitkubed
service &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gitkubed&amp;#34;&lt;/span&gt; exposed&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
Note that there are 2 ways to install gitkube into our cluster, using the manifests as displayed there or using the gitkube binary and doing &lt;code&gt;gitkube install&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To install the gitkube binary, the easiest way is to do:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;curl https://raw.githubusercontent.com/hasura/gitkube/master/gimme.sh &lt;span style=&#34;color:#e6db74&#34;&gt;| sudo bash&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
This will download and copy the binary into: &lt;code&gt;/usr/local/bin&lt;/code&gt;, as a general rule I recommend reading whatever you are going to pipe into bash in your terminal to avoid potential dangers of &lt;em&gt;the internet&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Then we need to generate (and then create it in the cluster) a file called &lt;code&gt;remote.yaml&lt;/code&gt; (or any name you like), it&amp;rsquo;s necessary in order to tell gitkube how to deploy our application once we &lt;code&gt;git push&lt;/code&gt; it:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ gitkube remote generate -f remote.yaml
Remote name: minikube
namespace: default
SSH public key file: ~/.ssh/id_rsa.pub
Initialisation: K8S YAML Manifests
Manifests/Chart directory: Enter
Choose docker registry: docker.io/kainlite
Deployment name: echobot
Container name: echobot
Dockerfile path: Dockerfile
Build context path: ./
Add another container? [y/N] Enter
Add another deployment? [y/N] Enter&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
And this will yield the following &lt;code&gt;remote.yaml&lt;/code&gt; file that we then need to create in our cluster as it is a custom resource it might look a bit different from the default kubernetes resources.&lt;/p&gt;

&lt;p&gt;The actual file &lt;code&gt;remote.yaml&lt;/code&gt;:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;apiVersion: gitkube.sh/v1alpha1
kind: Remote
metadata:
  creationTimestamp: &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;
  name: minikube
  namespace: default
spec:
  authorizedKeys:
  - &lt;span style=&#34;color:#e6db74&#34;&gt;|
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA8jvVVtDSVe25p2U2tDGQyVrnv3YcWjJc6AXTUMc0YNi+QDm6s+hMTwkf2wDRD7b6Y3kmgNSqLEE0EEgOkA69c8PgypM7AwbKZ51V9XcdPd7NyLabpomNiftpUwi01DGfBr25lJV9h2MHwsI/6w1izDvQyN7fAl+aTFgx+VGg1p4FygXWeBqm0n0DfHmBI7PDXxGbuFTJHUmRVS+HPd5Bi31S9Kq6eoodBWtV2MlVnZkpF67FWt2Xo2rFKVf4pZR4N1yjZKRsvIaI5i14LvtOoOqNQ+/tPMAFAif3AhldOW06fgnddYGi/iF+CatVttwNDWmClSOek9LO72UzR4s0xQ== gabriel@kainlite&lt;/span&gt;
  deployments:
  - containers:
    - dockerfile: Dockerfile
      name: echobot
      path: ./
    name: echobot
  manifests:
    helm: {}
    path: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
  registry:
    credentials:
      secretKeyRef:
        key: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
      secretRef: minikube-regsecret
    url: docker.io/kainlite
status:
  remoteUrl: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
  remoteUrlDesc: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
There are a few details to have in mind here, the &lt;em&gt;deployment&lt;/em&gt; name because gitkube expects a deployment to be already present with that name in order to update/upgrade it, the path to the Dockerfile, or helm chart, credentials for the registry if any, I&amp;rsquo;m using a public image, so we don&amp;rsquo;t need any of that. The &lt;em&gt;wizard&lt;/em&gt; will let you choose and customize a few options for your deployment.&lt;/p&gt;

&lt;p&gt;The last step would be to finally create the resource:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ gitkube remote create -f remote.yaml
INFO[&lt;span style=&#34;color:#ae81ff&#34;&gt;0000&lt;/span&gt;] remote minikube created
INFO[&lt;span style=&#34;color:#ae81ff&#34;&gt;0000&lt;/span&gt;] waiting for remote url
INFO[&lt;span style=&#34;color:#ae81ff&#34;&gt;0000&lt;/span&gt;] remote url: ssh://default-minikube@&lt;span style=&#34;color:#ae81ff&#34;&gt;10.98&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;213.202&lt;/span&gt;/~/git/default-minikube

  &lt;span style=&#34;color:#75715e&#34;&gt;# add the remote to your git repo and push:&lt;/span&gt;
  git remote add minikube ssh://default-minikube@&lt;span style=&#34;color:#ae81ff&#34;&gt;10.98&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;213.202&lt;/span&gt;/~/git/default-minikube
  git push minikube master&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;After adding the new remote called &lt;em&gt;minikube&lt;/em&gt;  we have everything ready to go, so let&amp;rsquo;s test it and see what happens:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ git push minikube master
Enumerating objects: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, done.
Counting objects: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;% (&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;), done.
Delta compression using up to &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; threads
Compressing objects: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;% (&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;), done.
Writing objects: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;% (&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;1.92&lt;/span&gt; KiB &lt;span style=&#34;color:#e6db74&#34;&gt;| 1.92 MiB/s, done.&lt;/span&gt;
Total &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; (delta &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;), reused &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; (delta &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
remote: Gitkube build system : Tue Jan  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;47&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt; UTC &lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt;: Initialising
remote:
remote: Creating the build directory
remote: Checking out &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;master:a0265bc5d0229dce0cffc985ca22ebe28532ee95&amp;#39;&lt;/span&gt; to &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/default-minikube/build/default-minikube&amp;#39;&lt;/span&gt;
remote:
remote: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; deployment(s) found in this repo
remote: Trying to build them...
remote:
remote: Building Docker image for : echobot
remote:
remote: Building Docker image : docker.io/kainlite/default-minikube-default.echobot-echobot:a0265bc5d0229dce0cffc985ca22ebe28532ee95
remote: Sending build context to Docker daemon   &lt;span style=&#34;color:#ae81ff&#34;&gt;7.&lt;/span&gt;68kB
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : FROM golang:&lt;span style=&#34;color:#ae81ff&#34;&gt;1.11&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;-alpine as builder
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; 57915f96905a&lt;/span&gt;
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : WORKDIR /app
remote: Removing intermediate container d2f9ab49935a
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; 997342e65c61&lt;/span&gt;
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : RUN adduser -D -g &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;app&amp;#39;&lt;/span&gt; app &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;     chown -R app:app /app &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;     apk add git &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apk add gcc musl-dev
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Running in f2aac9f74aad&lt;/span&gt;
remote: fetch http://dl-cdn.alpinelinux.org/alpine/v3.&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;/main/x86_64/APKINDEX.tar.gz
remote: fetch http://dl-cdn.alpinelinux.org/alpine/v3.&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;/community/x86_64/APKINDEX.tar.gz
remote: (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;) Installing nghttp2-libs (&lt;span style=&#34;color:#ae81ff&#34;&gt;1.32&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;-r0)
remote: (&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;) Installing libssh2 (&lt;span style=&#34;color:#ae81ff&#34;&gt;1.8&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;-r3)
remote: (&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;) Installing libcurl (&lt;span style=&#34;color:#ae81ff&#34;&gt;7.61&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;-r1)
remote: (&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;) Installing expat (&lt;span style=&#34;color:#ae81ff&#34;&gt;2.2&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;-r0)
remote: (&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;) Installing pcre2 (&lt;span style=&#34;color:#ae81ff&#34;&gt;10.31&lt;/span&gt;-r0)
remote: (&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;) Installing git (&lt;span style=&#34;color:#ae81ff&#34;&gt;2.18&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;-r0)
remote: Executing busybox-&lt;span style=&#34;color:#ae81ff&#34;&gt;1.28&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;-r1.trigger
remote: OK: &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt; MiB in &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; packages
remote: (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;) Installing binutils (&lt;span style=&#34;color:#ae81ff&#34;&gt;2.30&lt;/span&gt;-r5)
remote: (&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;) Installing gmp (&lt;span style=&#34;color:#ae81ff&#34;&gt;6.1&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;-r1)
remote: (&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;) Installing isl (&lt;span style=&#34;color:#ae81ff&#34;&gt;0.18&lt;/span&gt;-r0)
remote: (&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;) Installing libgomp (&lt;span style=&#34;color:#ae81ff&#34;&gt;6.4&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;-r9)
remote: (&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;) Installing libatomic (&lt;span style=&#34;color:#ae81ff&#34;&gt;6.4&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;-r9)
remote: (&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;) Installing pkgconf (&lt;span style=&#34;color:#ae81ff&#34;&gt;1.5&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;-r0)
remote: (&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;) Installing libgcc (&lt;span style=&#34;color:#ae81ff&#34;&gt;6.4&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;-r9)
remote: (&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;) Installing mpfr3 (&lt;span style=&#34;color:#ae81ff&#34;&gt;3.1&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;-r1)
remote: (&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;) Installing mpc1 (&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;-r1)
remote: (&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;) Installing libstdc++ (&lt;span style=&#34;color:#ae81ff&#34;&gt;6.4&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;-r9)
remote: (&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;) Installing gcc (&lt;span style=&#34;color:#ae81ff&#34;&gt;6.4&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;-r9)
remote: (&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;) Installing musl-dev (&lt;span style=&#34;color:#ae81ff&#34;&gt;1.1&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;-r10)
remote: Executing busybox-&lt;span style=&#34;color:#ae81ff&#34;&gt;1.28&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;-r1.trigger
remote: OK: &lt;span style=&#34;color:#ae81ff&#34;&gt;113&lt;/span&gt; MiB in &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; packages
remote: Removing intermediate container f2aac9f74aad
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; 7c6d8b9d1137&lt;/span&gt;
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : ADD . /app/
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; ca751c2678c4&lt;/span&gt;
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : RUN go get -d -v ./... &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; go build -o main . &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; chown -R app:app /app /home/app
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Running in be54522345e4&lt;/span&gt;
remote: go: finding github.com/gorilla/websocket v1.&lt;span style=&#34;color:#ae81ff&#34;&gt;4.0&lt;/span&gt;
remote: go: finding github.com/nlopes/slack v0.&lt;span style=&#34;color:#ae81ff&#34;&gt;4.0&lt;/span&gt;
remote: go: finding github.com/pkg/errors v0.&lt;span style=&#34;color:#ae81ff&#34;&gt;8.0&lt;/span&gt;
remote: go: downloading github.com/nlopes/slack v0.&lt;span style=&#34;color:#ae81ff&#34;&gt;4.0&lt;/span&gt;
remote: go: downloading github.com/gorilla/websocket v1.&lt;span style=&#34;color:#ae81ff&#34;&gt;4.0&lt;/span&gt;
remote: go: downloading github.com/pkg/errors v0.&lt;span style=&#34;color:#ae81ff&#34;&gt;8.0&lt;/span&gt;
remote: Removing intermediate container be54522345e4
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; 16e44978b140&lt;/span&gt;
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : FROM golang:&lt;span style=&#34;color:#ae81ff&#34;&gt;1.11&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;-alpine
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; 57915f96905a&lt;/span&gt;
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : WORKDIR /app
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache&lt;/span&gt;
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; 997342e65c61&lt;/span&gt;
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : RUN adduser -D -g &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;app&amp;#39;&lt;/span&gt; app &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;     chown -R app:app /app
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Running in e578037b1d2f&lt;/span&gt;
remote: Removing intermediate container e578037b1d2f
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; 55f48da0f9ac&lt;/span&gt;
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : COPY --from=builder --chown=app /app/health_check.sh /app/health_check.sh
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; 139250fd6c77&lt;/span&gt;
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : COPY --from=builder --chown=app /app/main /app/main
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; 2f1eb9f16e9f&lt;/span&gt;
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : USER app
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Running in 5b53baa5ea2c&lt;/span&gt;
remote: Removing intermediate container 5b53baa5ea2c
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; a72f27dccff2&lt;/span&gt;
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : CMD [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/app/main&amp;#34;&lt;/span&gt;]
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Running in b12d58002f16&lt;/span&gt;
remote: Removing intermediate container b12d58002f16
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; 034275449e08&lt;/span&gt;
remote: Successfully built &lt;span style=&#34;color:#ae81ff&#34;&gt;034275449e08&lt;/span&gt;
remote: Successfully tagged kainlite/default-minikube-default.echobot-echobot:a0265bc5d0229dce0cffc985ca22ebe28532ee95
remote: pushing docker.io/kainlite/default-minikube-default.echobot-echobot:a0265bc5d0229dce0cffc985ca22ebe28532ee95 to registry
remote: The push refers to repository [docker.io/kainlite/default-minikube-default.echobot-echobot]
remote: bba61bf193fe: Preparing
remote: 3f0355bbea40: Preparing
remote: 2ebcdc9e5e8f: Preparing
remote: 6f1324339fd4: Preparing
remote: 93391cb9fd4b: Preparing
remote: cb9d0f9550f6: Preparing
remote: 93448d8c2605: Preparing
remote: c54f8a17910a: Preparing
remote: df64d3292fd6: Preparing
remote: c54f8a17910a: Waiting
remote: cb9d0f9550f6: Waiting
remote: 93448d8c2605: Waiting
remote: df64d3292fd6: Waiting
remote: 93391cb9fd4b: Mounted from kainlite/echobot
remote: 3f0355bbea40: Pushed
remote: 2ebcdc9e5e8f: Pushed
remote: cb9d0f9550f6: Mounted from kainlite/echobot
remote: 93448d8c2605: Mounted from kainlite/echobot
remote: 6f1324339fd4: Pushed
remote: bba61bf193fe: Pushed
remote: c54f8a17910a: Mounted from kainlite/echobot
remote: df64d3292fd6: Mounted from kainlite/echobot
remote: a0265bc5d0229dce0cffc985ca22ebe28532ee95: digest: sha256:3046c989fe1b1c4f700aaad875658c73ef571028f731546df38fb404ac22a9c9 size: &lt;span style=&#34;color:#ae81ff&#34;&gt;2198&lt;/span&gt;
remote:
remote: Updating Kubernetes deployment: echobot
remote: Error from server (NotFound): deployments.extensions &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;echobot&amp;#34;&lt;/span&gt; not found
To ssh://&lt;span style=&#34;color:#ae81ff&#34;&gt;10.98&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;213.202&lt;/span&gt;/~/git/default-minikube
 ! [remote rejected] master -&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; master (pre-receive hook declined)&lt;/span&gt;
error: failed to push some refs to &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ssh://default-minikube@10.98.213.202/~/git/default-minikube&amp;#39;&lt;/span&gt;
kainlite@skynet-pc ~/Webs/echobot/code  gitkube  $ git push minikube master
Enumerating objects: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, done.
Counting objects: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;% (&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;), done.
Delta compression using up to &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; threads
Compressing objects: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;% (&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;), done.
Writing objects: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;% (&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;1.92&lt;/span&gt; KiB &lt;span style=&#34;color:#e6db74&#34;&gt;| 1.92 MiB/s, done.&lt;/span&gt;
Total &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; (delta &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;), reused &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; (delta &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
remote: Gitkube build system : Tue Jan  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;58&lt;/span&gt; UTC &lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt;: Initialising
remote:
remote: Creating the build directory
remote: Checking out &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;master:a0265bc5d0229dce0cffc985ca22ebe28532ee95&amp;#39;&lt;/span&gt; to &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/default-minikube/build/default-minikube&amp;#39;&lt;/span&gt;
remote:
remote: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; deployment(s) found in this repo
remote: Trying to build them...
remote:
remote: Building Docker image for : echobot
remote:
remote: Building Docker image : docker.io/kainlite/default-minikube-default.echobot-echobot:a0265bc5d0229dce0cffc985ca22ebe28532ee95
remote: Sending build context to Docker daemon   &lt;span style=&#34;color:#ae81ff&#34;&gt;7.&lt;/span&gt;68kB
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : FROM golang:&lt;span style=&#34;color:#ae81ff&#34;&gt;1.11&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;-alpine as builder
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; 57915f96905a&lt;/span&gt;
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : WORKDIR /app
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache&lt;/span&gt;
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; 997342e65c61&lt;/span&gt;
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : RUN adduser -D -g &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;app&amp;#39;&lt;/span&gt; app &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;     chown -R app:app /app &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;     apk add git &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apk add gcc musl-dev
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache&lt;/span&gt;
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; 7c6d8b9d1137&lt;/span&gt;
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : ADD . /app/
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache&lt;/span&gt;
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; ca751c2678c4&lt;/span&gt;
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : RUN go get -d -v ./... &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; go build -o main . &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; chown -R app:app /app /home/app
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache&lt;/span&gt;
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; 16e44978b140&lt;/span&gt;
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : FROM golang:&lt;span style=&#34;color:#ae81ff&#34;&gt;1.11&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;-alpine
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; 57915f96905a&lt;/span&gt;
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : WORKDIR /app
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache&lt;/span&gt;
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; 997342e65c61&lt;/span&gt;
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : RUN adduser -D -g &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;app&amp;#39;&lt;/span&gt; app &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;     chown -R app:app /app
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache&lt;/span&gt;
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; 55f48da0f9ac&lt;/span&gt;
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : COPY --from=builder --chown=app /app/health_check.sh /app/health_check.sh
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache&lt;/span&gt;
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; 139250fd6c77&lt;/span&gt;
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : COPY --from=builder --chown=app /app/main /app/main
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache&lt;/span&gt;
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; 2f1eb9f16e9f&lt;/span&gt;
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : USER app
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache&lt;/span&gt;
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; a72f27dccff2&lt;/span&gt;
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : CMD [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/app/main&amp;#34;&lt;/span&gt;]
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Using cache&lt;/span&gt;
remote:  ---&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; 034275449e08&lt;/span&gt;
remote: Successfully built &lt;span style=&#34;color:#ae81ff&#34;&gt;034275449e08&lt;/span&gt;
remote: Successfully tagged kainlite/default-minikube-default.echobot-echobot:a0265bc5d0229dce0cffc985ca22ebe28532ee95
remote: pushing docker.io/kainlite/default-minikube-default.echobot-echobot:a0265bc5d0229dce0cffc985ca22ebe28532ee95 to registry
remote: The push refers to repository [docker.io/kainlite/default-minikube-default.echobot-echobot]
remote: bba61bf193fe: Preparing
remote: 3f0355bbea40: Preparing
remote: 2ebcdc9e5e8f: Preparing
remote: 6f1324339fd4: Preparing
remote: 93391cb9fd4b: Preparing
remote: cb9d0f9550f6: Preparing
remote: 93448d8c2605: Preparing
remote: c54f8a17910a: Preparing
remote: df64d3292fd6: Preparing
remote: cb9d0f9550f6: Waiting
remote: 93448d8c2605: Waiting
remote: c54f8a17910a: Waiting
remote: df64d3292fd6: Waiting
remote: 2ebcdc9e5e8f: Layer already exists
remote: 6f1324339fd4: Layer already exists
remote: 3f0355bbea40: Layer already exists
remote: bba61bf193fe: Layer already exists
remote: 93391cb9fd4b: Layer already exists
remote: 93448d8c2605: Layer already exists
remote: cb9d0f9550f6: Layer already exists
remote: df64d3292fd6: Layer already exists
remote: c54f8a17910a: Layer already exists
remote: a0265bc5d0229dce0cffc985ca22ebe28532ee95: digest: sha256:3046c989fe1b1c4f700aaad875658c73ef571028f731546df38fb404ac22a9c9 size: &lt;span style=&#34;color:#ae81ff&#34;&gt;2198&lt;/span&gt;
remote:
remote: Updating Kubernetes deployment: echobot
remote: deployment &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;echobot&amp;#34;&lt;/span&gt; image updated
remote: deployment &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;echobot&amp;#34;&lt;/span&gt; successfully rolled out
remote: NAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE
remote: echobot   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;            &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;           31s
remote:
remote: Removing build directory
remote:
remote: Gitkube build system : Tue Jan  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; UTC &lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt;: Finished build
remote:
remote:
To ssh://&lt;span style=&#34;color:#ae81ff&#34;&gt;10.98&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;213.202&lt;/span&gt;/~/git/default-minikube
 * [new branch]      master -&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; master&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
Quite a lot happened there, first of all gitkubed checked out the commit from the branch or HEAD that we pushed to &lt;code&gt;/home/default-minikube/build/default-minikube&lt;/code&gt; and then started building and tagged the docker image with the corresponding SHA, after that it pushed the image to &lt;a href=&#34;https://cloud.docker.com/u/kainlite/repository/docker/kainlite/default-minikube-default.echobot-echobot&#34;&gt;docker hub&lt;/a&gt; and then updated the deployment that we already had in there for the echo bot.&lt;/p&gt;

&lt;p&gt;The last step would be to verify that the pod was actually updated, so we can inspect the pod configuration with &lt;code&gt;kubectl describe pod echobot-654cdbfb99-g4bwv&lt;/code&gt;:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt; $ kubectl describe pod echobot-654cdbfb99-g4bwv
Name:               echobot-654cdbfb99-g4bwv
Namespace:          default
Priority:           &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
PriorityClassName:  &amp;lt;none&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Node:               minikube/10.0.2.15
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Start Time:         Tue, 01 Jan 2019 20:51:10 -0300
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Labels:             app=echobot
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    pod-template-hash=654cdbfb99
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Annotations:        &amp;lt;none&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Status:             Running
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;IP:                 172.17.0.9
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Controlled By:      ReplicaSet/echobot-654cdbfb99
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Containers:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  echobot:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Container ID:   docker://fe26ba9be6e2840c0d43a4fcbb4d79af38a00aa3a16411dee5e4af3823d44664
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Image:          docker.io/kainlite/default-minikube-default.echobot-echobot:a0265bc5d0229dce0cffc985ca22ebe28532ee95
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Image ID:       docker-pullable://kainlite/default-minikube-default.echobot-echobot@sha256:3046c989fe1b1c4f700aaad875658c73ef571028f731546df38fb404ac22a9c9
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Port:           &amp;lt;none&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Host Port:      &amp;lt;none&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    State:          Running
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      Started:      Tue, 01 Jan 2019 20:51:11 -0300
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Ready:          True
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Restart Count:  0
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Liveness:       exec [/bin/sh -c /app/health_check.sh] delay=0s timeout=1s period=10s #success=1 #failure=3
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Environment:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      SLACK_API_TOKEN:  really_long_token
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Mounts:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      /var/run/secrets/kubernetes.io/serviceaccount from default-token-ks4jx (ro)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Conditions:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  Type              Status
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  Initialized       True
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  Ready             True
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  ContainersReady   True
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  PodScheduled      True
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Volumes:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  default-token-ks4jx:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Type:        Secret (a volume populated by a Secret)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    SecretName:  default-token-ks4jx
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Optional:    false
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;QoS Class:       BestEffort
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Node-Selectors:  &amp;lt;none&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Tolerations:     node.kubernetes.io/not-ready:NoExecute for 300s
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                 node.kubernetes.io/unreachable:NoExecute for 300s
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Events:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  Type    Reason     Age   From               Message
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  ----    ------     ----  ----               -------
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  Normal  Scheduled  39m   default-scheduler  Successfully assigned default/echobot-654cdbfb99-g4bwv to minikube
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  Normal  Pulled     39m   kubelet, minikube  Container image &amp;#34;docker.io/kainlite/default-minikube-default.echobot-echobot:a0265bc5d0229dce0cffc985ca22ebe28532ee95&amp;#34; already present on machine
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  Normal  Created    39m   kubelet, minikube  Created container
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  Normal  Started    39m   kubelet, minikube  Started container&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
As we can see the image is the one that got built from our &lt;code&gt;git push&lt;/code&gt; and everything is working as expected.&lt;/p&gt;

&lt;p&gt;And that&amp;rsquo;s it for now, I think this tool has a lot of potential, it&amp;rsquo;s simple, nice and fast.&lt;/p&gt;

&lt;h3 id=&#34;errata&#34;&gt;Errata&lt;/h3&gt;

&lt;p&gt;If you spot any error or have any suggestion, please send me a message so it gets fixed.&lt;/p&gt;

&lt;p&gt;Also, you can check the source code and changes in the &lt;a href=&#34;https://github.com/kainlite/kainlite.github.io&#34;&gt;generated code&lt;/a&gt; and the &lt;a href=&#34;https://github.com/kainlite/blog&#34;&gt;sources here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Go echo bot</title>
      <link>https://kainlite.github.io/blog/go_echobot/</link>
      <pubDate>Sat, 29 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kainlite.github.io/blog/go_echobot/</guid>
      <description>

&lt;h3 id=&#34;echo-bot&#34;&gt;&lt;strong&gt;Echo bot&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;This post was going to be about advanced ksonnet usage, but it went more about the echo bot itself, so I decided to rename it.&lt;/p&gt;

&lt;p&gt;To be honest, there is no other way to get the benefits of having &lt;a href=&#34;https://ksonnet.io/&#34;&gt;ksonnet&lt;/a&gt; if you&amp;rsquo;re not going to take advantage of the &lt;em&gt;deployments as code&lt;/em&gt; facilities that it brings thanks to Jsonnet.&lt;/p&gt;

&lt;p&gt;This time we will see how to use &lt;a href=&#34;https://github.com/cybermaggedon/ksonnet-cheat-sheet&#34;&gt;proper templates&lt;/a&gt;, it seems that the templates generated with &lt;code&gt;ks&lt;/code&gt; are outdated at the time of this writing ksonnet version is: 0.13.1, no surprise here because it&amp;rsquo;s not a really mature tool. It does require a lot of effort in learning, hacking and reading to get things to work, but hopefully soon it will be easier, of course this is my personal opinion and I have not used it for a real project yet, but I expect it to grow and become more usable before I attempt to do something for the real world with it.&lt;/p&gt;

&lt;p&gt;In the examples I will be using &lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/install-minikube&#34;&gt;minikube&lt;/a&gt; or you can &lt;a href=&#34;https://github.com/kainlite/kainlite.github.io&#34;&gt;check out this repo&lt;/a&gt; that has a good overview of minikube, once installed and started (&lt;code&gt;minikube start&lt;/code&gt;) that command will download and configure the local environment, if you have been following the previous posts you already have minikube installed and working:&lt;/p&gt;

&lt;h3 id=&#34;let-s-get-started&#34;&gt;Let&amp;rsquo;s get started&lt;/h3&gt;

&lt;p&gt;This time I&amp;rsquo;m not going to deploy another wordpress instance but a simple Slack echo bot made with go:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; (
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;os&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;strings&amp;#34;&lt;/span&gt;

        &lt;span style=&#34;color:#a6e22e&#34;&gt;slack&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/nlopes/slack&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;api&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;slack&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;New&lt;/span&gt;(
                &lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SLACK_API_TOKEN&amp;#34;&lt;/span&gt;),
        )

        &lt;span style=&#34;color:#a6e22e&#34;&gt;rtm&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;api&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;NewRTM&lt;/span&gt;()
        &lt;span style=&#34;color:#66d9ef&#34;&gt;go&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rtm&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ManageConnection&lt;/span&gt;()

        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;msg&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;range&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rtm&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;IncomingEvents&lt;/span&gt; {
                &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Event Received: &amp;#34;&lt;/span&gt;)
                &lt;span style=&#34;color:#66d9ef&#34;&gt;switch&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ev&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Data&lt;/span&gt;.(&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt;) {
                &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;slack&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;HelloEvent&lt;/span&gt;:
                        &lt;span style=&#34;color:#75715e&#34;&gt;// Ignore hello
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
                &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;slack&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ConnectedEvent&lt;/span&gt;:
                        &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Infos:&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;ev&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Info&lt;/span&gt;)
                        &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Connection counter:&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;ev&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ConnectionCount&lt;/span&gt;)

                &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;slack&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;MessageEvent&lt;/span&gt;:
                        &lt;span style=&#34;color:#75715e&#34;&gt;// Only echo what it said to me
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;                        &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Message: %v\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;ev&lt;/span&gt;)
                        &lt;span style=&#34;color:#a6e22e&#34;&gt;info&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rtm&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;GetInfo&lt;/span&gt;()
                        &lt;span style=&#34;color:#a6e22e&#34;&gt;prefix&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Sprintf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;@%s&amp;gt; &amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;info&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;User&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ID&lt;/span&gt;)

                        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ev&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;User&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;info&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;User&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ID&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;strings&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;HasPrefix&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;ev&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Text&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;prefix&lt;/span&gt;) {
                                &lt;span style=&#34;color:#a6e22e&#34;&gt;rtm&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;SendMessage&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;rtm&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;NewOutgoingMessage&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;ev&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Text&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;ev&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Channel&lt;/span&gt;))
                        }

                &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;slack&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;PresenceChangeEvent&lt;/span&gt;:
                        &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Presence Change: %v\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;ev&lt;/span&gt;)

                &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;slack&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;LatencyReport&lt;/span&gt;:
                        &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Current latency: %v\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;ev&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Value&lt;/span&gt;)

                &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;slack&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;RTMError&lt;/span&gt;:
                        &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Error: %s\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;ev&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Error&lt;/span&gt;())

                &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;slack&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;InvalidAuthEvent&lt;/span&gt;:
                        &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Invalid credentials&amp;#34;&lt;/span&gt;)
                        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;

                &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;:

                        &lt;span style=&#34;color:#75715e&#34;&gt;// Ignore other events..
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;                        &lt;span style=&#34;color:#75715e&#34;&gt;// fmt.Printf(&amp;#34;Unexpected: %v\n&amp;#34;, msg.Data)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;                }
        }
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
As you can see it&amp;rsquo;s the simplest example from the readme of the &lt;a href=&#34;https://github.com/nlopes/slack&#34;&gt;Go Slack API&lt;/a&gt; project, it only connects to Slack and when it reads a message if it&amp;rsquo;s addressed to the bot then it echoes the message back, creating a bot and everything else is out of the scope of this article but it&amp;rsquo;s really simple, you only need to create an app in the Slack workspace, set it as a bot and grab the token (there is a lot more that you can customize but that is the most basic procedure to get started with a bot), then you just invite it to any channel that you want and start interacting with it.&lt;/p&gt;

&lt;p&gt;Here you can see the &lt;code&gt;Dockerfile&lt;/code&gt;, for security we create an app user for the build and for running it, and to save space and bandwidth we only ship what we need using a multi-stage build:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Build&lt;/span&gt;
FROM golang:&lt;span style=&#34;color:#ae81ff&#34;&gt;1.11&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;-alpine as builder

WORKDIR /app
RUN adduser -D -g &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;app&amp;#39;&lt;/span&gt; app &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; \
    chown -R app:app /app &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; \
    apk add git &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apk add gcc musl-dev

ADD . /app/
RUN go get -d -v ./... &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; go build -o main . &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; chown -R app:app /app /home/app

&lt;span style=&#34;color:#75715e&#34;&gt;# Run&lt;/span&gt;
FROM golang:&lt;span style=&#34;color:#ae81ff&#34;&gt;1.11&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;-alpine

WORKDIR /app
RUN adduser -D -g &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;app&amp;#39;&lt;/span&gt; app &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; \
    chown -R app:app /app

COPY --from=builder --chown=app /app/health_check.sh /app/health_check.sh
COPY --from=builder --chown=app /app/main /app/main

USER app
CMD [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/app/main&amp;#34;&lt;/span&gt;]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
There are a few more files in there, you can see the full sources &lt;a href=&#34;https://github.com/kainlite/echobot&#34;&gt;here&lt;/a&gt;, for example &lt;code&gt;health_check.sh&lt;/code&gt;, as our app doesn&amp;rsquo;t listen on any port we need a way to tell kubernetes how to check if our app is alive.&lt;/p&gt;

&lt;p&gt;Okay, enough boilerplate let&amp;rsquo;s get to business, so let&amp;rsquo;s create a new ksonnet application:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ ks init echobot
INFO Using context &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;minikube&amp;#34;&lt;/span&gt; from kubeconfig file &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/.kube/config&amp;#34;&lt;/span&gt;
INFO Creating environment &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;default&amp;#34;&lt;/span&gt; with namespace &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;default&amp;#34;&lt;/span&gt;, pointing to &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;version:v1.8.0&amp;#34;&lt;/span&gt; cluster at address &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://192.168.99.100:8443&amp;#34;&lt;/span&gt;
INFO Generating ksonnet-lib data at path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;~/Webs/echobot/echobot/lib/ksonnet-lib/v1.8.0&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;And now let&amp;rsquo;s grab a template and modify it accordingly to be able to create the deployment for the bot &lt;code&gt;components/echobot.jsonnet&lt;/code&gt;:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;// Import KSonnet library
local params = std.extVar(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__ksonnet/params&amp;#39;&lt;/span&gt;).components.demo;
local k = import &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;k.libsonnet&amp;#39;&lt;/span&gt;;

// Specify the import objects that we need
local container = k.extensions.v1beta1.deployment.mixin.spec.template.spec.containersType;
local depl = k.extensions.v1beta1.deployment;

// Environment variables, instead of hardcoding it here we could use a param or a secret
// But I will leave that as an exercise for you :)
local envs = [
  {
    name: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SLACK_API_TOKEN&amp;#39;&lt;/span&gt;,
    value: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;really-long-token&amp;#39;&lt;/span&gt;,
  },
];

local livenessProbe = {
  exec: {
    command: [
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/bin/sh&amp;#39;&lt;/span&gt;,
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-c&amp;#39;&lt;/span&gt;,
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/app/health_check.sh&amp;#39;&lt;/span&gt;,
    ],
  },
};

// Define containers
local containers = [
  container.new(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;echobot&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;kainlite/echobot:0.0.2&amp;#39;&lt;/span&gt;) {
    env: (envs),
    livenessProbe: livenessProbe,
  },
];

// Define deployment with &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; replicas
local deployment =
  depl.new(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;echobot&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, containers, { app: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;echobot&amp;#39;&lt;/span&gt; });

local resources = [deployment];

// Return list of resources.
k.core.v1.list.new(resources)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
Note that I have uploaded that image to docker hub so you can use it to follow the example if you want, after that just replace &lt;code&gt;really-long-token&lt;/code&gt; with your token, and then do:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ ks apply default
INFO Applying deployments echobot
INFO Creating non-existent deployments echobot&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;And now if we check our deployment and pod, we should see something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://kainlite.github.io/img/echobot.png&#34; alt=&#34;Echo bot&#34; /&gt;&lt;/p&gt;

&lt;p&gt;And in the logs:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt; $ kubectl get pods
NAME                               READY     STATUS    RESTARTS   AGE
echobot-7456f7d7dd-twg4r           &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;       Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          53s

$ kubectl logs -f echobot-7456f7d7dd-twg4r
Event Received: Event Received: Infos: &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;{wss://cerberus-xxxx.lb.slack-msgs.com/websocket/1gvXP_yQCFE-Y=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0xc000468000&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0xc0004482a0&lt;/span&gt; [] [] [] [] []}
Connection counter: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
Event Received: Event Received: Current latency: &lt;span style=&#34;color:#ae81ff&#34;&gt;1.&lt;/span&gt;256397423s
Event Received: Current latency: &lt;span style=&#34;color:#ae81ff&#34;&gt;1.&lt;/span&gt;25679313s
Event Received: Current latency: &lt;span style=&#34;color:#ae81ff&#34;&gt;1.&lt;/span&gt;256788737s
Event Received: Message: &lt;span style=&#34;color:#75715e&#34;&gt;&amp;amp;{{message&lt;/span&gt; CEDGU6EA0 UEDJT5DDH &amp;lt;@UED48HD33&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; echo! 1546124966.002300  false [] [] &amp;lt;nil&amp;gt;  false 0  false  1546124966.002300   &amp;lt;nil&amp;gt;      [] 0 []  [] false &amp;lt;nil&amp;gt;  0 TEDJT5CTD []  false false} &amp;lt;nil&amp;gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;And that folks is all I have for now, I hope you enjoyed this small tour of ksonnet. The source code for the bot can be found &lt;a href=&#34;https://github.com/kainlite/echobot&#34;&gt;here&lt;/a&gt;. In a future post I might explore &lt;a href=&#34;https://ksonnet.io/docs/examples/helm/&#34;&gt;ksonnet and helm charts&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;upcoming-topics&#34;&gt;Upcoming topics&lt;/h3&gt;

&lt;p&gt;As promised I will be doing one post about &lt;a href=&#34;https://github.com/hasura/gitkube&#34;&gt;Gitkube&lt;/a&gt; and &lt;a href=&#34;https://github.com/GoogleContainerTools/skaffold&#34;&gt;Skaffold&lt;/a&gt;, there are a lot of deployment tools for kubernetes but those are the most promising ones to me, also after that I will start covering more topics about &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;, &lt;a href=&#34;https://containerd.io/&#34;&gt;ContainerD&lt;/a&gt;, &lt;a href=&#34;https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/&#34;&gt;KubeADM&lt;/a&gt;, and Kubernetes in general.&lt;/p&gt;

&lt;h3 id=&#34;errata&#34;&gt;Errata&lt;/h3&gt;

&lt;p&gt;If you spot any error or have any suggestion, please send me a message so it gets fixed.&lt;/p&gt;

&lt;p&gt;Also, you can check the source code and changes in the &lt;a href=&#34;https://github.com/kainlite/kainlite.github.io&#34;&gt;generated code&lt;/a&gt; and the &lt;a href=&#34;https://github.com/kainlite/blog&#34;&gt;sources here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting started with ksonnet</title>
      <link>https://kainlite.github.io/blog/getting_started_with_ksonnet/</link>
      <pubDate>Thu, 27 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kainlite.github.io/blog/getting_started_with_ksonnet/</guid>
      <description>

&lt;h3 id=&#34;introduction&#34;&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;This tutorial will show you how to create a simple application and also how to deploy it to kubernetes using &lt;a href=&#34;https://ksonnet.io/&#34;&gt;ksonnet&lt;/a&gt;, in the examples I will be using &lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/install-minikube&#34;&gt;minikube&lt;/a&gt; or you can &lt;a href=&#34;https://github.com/kainlite/kainlite.github.io&#34;&gt;check out this repo&lt;/a&gt; that has a good overview of minikube, once installed and started (&lt;code&gt;minikube start&lt;/code&gt;) that command will download and configure the local environment, if you have been following the previous posts you already have minikube installed and working, before we dive into an example let&amp;rsquo;s review some terminology from ksonnet (extracted from the &lt;a href=&#34;https://ksonnet.io/docs/concepts/&#34;&gt;official documentation&lt;/a&gt;):&lt;/p&gt;

&lt;h4 id=&#34;application&#34;&gt;Application&lt;/h4&gt;

&lt;p&gt;A ksonnet application represents a well-structured directory of Kubernetes manifests (this is generated using the &lt;code&gt;ks init&lt;/code&gt;).&lt;/p&gt;

&lt;h4 id=&#34;environment&#34;&gt;Environment&lt;/h4&gt;

&lt;p&gt;An environment consists of four elements, some of which can be pulled from your current kubeconfig context: Name, Server, Namespace, API version. The environment determines to which cluster you&amp;rsquo;re going to deploy the application.&lt;/p&gt;

&lt;h4 id=&#34;component&#34;&gt;Component&lt;/h4&gt;

&lt;p&gt;A component can be as simple as a Kubernetes resource (a Pod, Deployment, etc), or a fully working stack for example EFK/ELK, you can generate components using &lt;code&gt;ks generate&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&#34;prototype&#34;&gt;Prototype&lt;/h4&gt;

&lt;p&gt;Prototype + Parameters = Component. Think of a prototype as a base template before you apply the parameters, to set a name, replicas, etc for the resource, you can explore some system prototypes with &lt;code&gt;ks prototype&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&#34;parameter&#34;&gt;Parameter&lt;/h4&gt;

&lt;p&gt;It gives live to a component with dynamic values, you can use &lt;code&gt;ks param&lt;/code&gt; to view or modify params, there are App params (global), Component params, and Environment params (overrides app params).&lt;/p&gt;

&lt;h4 id=&#34;module&#34;&gt;Module&lt;/h4&gt;

&lt;p&gt;Modules provide a way for you to share components across environments. More concisely, a module refers to a subdirectory in components/ containing its own params.libsonnet. To create a module &lt;code&gt;ks module create &amp;lt;module name&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&#34;part&#34;&gt;Part&lt;/h4&gt;

&lt;p&gt;It provides a way to organize and re-use code.&lt;/p&gt;

&lt;h4 id=&#34;package&#34;&gt;Package&lt;/h4&gt;

&lt;p&gt;A package is a set of related prototypes and associates helper libraries, it allows you to create and share packages between applications.&lt;/p&gt;

&lt;h4 id=&#34;registry&#34;&gt;Registry&lt;/h4&gt;

&lt;p&gt;It&amp;rsquo;s essentially a repository for packages, it supports the incubator registry, github, filesystem, and Helm.&lt;/p&gt;

&lt;h4 id=&#34;manifest&#34;&gt;Manifest&lt;/h4&gt;

&lt;p&gt;The same old YAML or JSON manifest but this time written in &lt;a href=&#34;https://jsonnet.org/learning/tutorial.html&#34;&gt;Jsonnet&lt;/a&gt;, basically Jsonnet is a simple extension of JSON.&lt;/p&gt;

&lt;p&gt;Phew, that&amp;rsquo;s a lot of names and terminology at once, let&amp;rsquo;s get started with the terminal already.&lt;/p&gt;

&lt;h3 id=&#34;let-s-get-started&#34;&gt;Let&amp;rsquo;s get started&lt;/h3&gt;

&lt;p&gt;This command will generate the following folder structure &lt;code&gt;ks init wordpress&lt;/code&gt;:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;INFO Using context &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;minikube&amp;#34;&lt;/span&gt; from kubeconfig file &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/.kube/config&amp;#34;&lt;/span&gt;
INFO Creating environment &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;default&amp;#34;&lt;/span&gt; with namespace &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;default&amp;#34;&lt;/span&gt;, pointing to &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;version:v1.12.4&amp;#34;&lt;/span&gt; cluster at address &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://192.168.99.100:8443&amp;#34;&lt;/span&gt;
INFO Generating ksonnet-lib data at path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;~/k8s-examples/wordpress/lib/ksonnet-lib/v1.12.4&amp;#39;&lt;/span&gt;

$ ls -l &lt;span style=&#34;color:#e6db74&#34;&gt;|  awk &amp;#39;{ print $9 }&amp;#39;&lt;/span&gt;
app.yaml        &amp;lt;--- Defines versions, namespace, cluster address, app name, registry.
components      &amp;lt;--- Components by default it&amp;#39;s empty and has a params file.
environments    &amp;lt;--- By default there is only one environment called default.
lib             &amp;lt;--- Here we can find the ksonnet helpers that match the Kubernetes API with the common resources (Pods, Deployments, etc).
vendor          &amp;lt;--- Here is where the installed packages/apps go, it can be seen as a dependencies folder.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s generate a &lt;em&gt;deployed-service&lt;/em&gt; and inspect it&amp;rsquo;s context:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ ks generate deployed-service wordpress \
  --image bitnami/wordpress:&lt;span style=&#34;color:#ae81ff&#34;&gt;5.0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; \
  --type ClusterIP

INFO Writing component at &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;~/k8s-examples/wordpress/components/wordpress.jsonnet&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
At the moment of this writing the latest version of Wordpress is 5.0.2, it&amp;rsquo;s always recommended to use static version numbers instead of tags like latest (because latest can not be latest).&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s see how our component looks like:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;local env = std.extVar(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__ksonnet/environments&amp;#34;&lt;/span&gt;);
local params = std.extVar(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__ksonnet/params&amp;#34;&lt;/span&gt;).components.wordpress;
[
  {
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;apiVersion&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;v1&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;kind&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Service&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;metadata&amp;#34;&lt;/span&gt;: {
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: params.name
    },
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;spec&amp;#34;&lt;/span&gt;: {
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ports&amp;#34;&lt;/span&gt;: [
        {
          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;port&amp;#34;&lt;/span&gt;: params.servicePort,
          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;targetPort&amp;#34;&lt;/span&gt;: params.containerPort
        }
      ],
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;selector&amp;#34;&lt;/span&gt;: {
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;app&amp;#34;&lt;/span&gt;: params.name
      },
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: params.type
    }
  },
  {
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;apiVersion&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;apps/v1beta2&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;kind&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Deployment&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;metadata&amp;#34;&lt;/span&gt;: {
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: params.name
    },
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;spec&amp;#34;&lt;/span&gt;: {
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;replicas&amp;#34;&lt;/span&gt;: params.replicas,
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;selector&amp;#34;&lt;/span&gt;: {
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;matchLabels&amp;#34;&lt;/span&gt;: {
          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;app&amp;#34;&lt;/span&gt;: params.name
        },
      },
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;template&amp;#34;&lt;/span&gt;: {
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;metadata&amp;#34;&lt;/span&gt;: {
          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;labels&amp;#34;&lt;/span&gt;: {
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;app&amp;#34;&lt;/span&gt;: params.name
          }
        },
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;spec&amp;#34;&lt;/span&gt;: {
          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;containers&amp;#34;&lt;/span&gt;: [
            {
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;image&amp;#34;&lt;/span&gt;: params.image,
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: params.name,
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ports&amp;#34;&lt;/span&gt;: [
                {
                  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;containerPort&amp;#34;&lt;/span&gt;: params.containerPort
                }
              ]
            }
          ]
        }
      }
    }
  }
]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
It&amp;rsquo;s just another template for some known resources, a &lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/service/&#34;&gt;service&lt;/a&gt; and a &lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/controllers/deployment/&#34;&gt;deployment&lt;/a&gt; that&amp;rsquo;s where the name came from: &lt;em&gt;deployed-service&lt;/em&gt;, but where are those params coming from?&lt;/p&gt;

&lt;p&gt;If we run &lt;code&gt;ks show default&lt;/code&gt;:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;---
apiVersion: v1
kind: Service
metadata:
  labels:
    ksonnet.io/component: wordpress
  name: wordpress
spec:
  ports:
  - port: &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;
    targetPort: &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;
  selector:
    app: wordpress
  type: ClusterIP
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    ksonnet.io/component: wordpress
  name: wordpress
spec:
  replicas: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
      - image: bitnami/wordpress:&lt;span style=&#34;color:#ae81ff&#34;&gt;5.0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
        name: wordpress
        ports:
        - containerPort: &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
We will see what our package will generate in &lt;em&gt;YAML&lt;/em&gt; with some good defaults. And by default if you remember from the definitions a component needs a params file to fill the blanks in this case it is &lt;code&gt;components/params.libsonnet&lt;/code&gt;:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;{
  global: {
    // User-defined global parameters; accessible to all component and environments, Ex:
    // replicas: &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,
  },
  components: {
    // Component-level parameters, defined initially from &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ks prototype use ...&amp;#39;&lt;/span&gt;
    // Each object below should correspond to a component in the components/ directory
    wordpress: {
      containerPort: &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;,
      image: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bitnami/wordpress:5.0.2&amp;#34;&lt;/span&gt;,
      name: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wordpress&amp;#34;&lt;/span&gt;,
      replicas: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
      servicePort: &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;,
      type: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ClusterIP&amp;#34;&lt;/span&gt;,
    },
  },
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
But that&amp;rsquo;s not enough to run wordpress is it?, No is not, we need a database with persistent storage for it to work properly, so we will need to generate and extend another &lt;em&gt;deployed-service&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The next step would be to create another component:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ ks generate deployed-service mariadb \
  --image bitnami/mariadb:&lt;span style=&#34;color:#ae81ff&#34;&gt;10.1&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;37&lt;/span&gt; \
  --type ClusterIP

INFO Writing component at &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/kainlite/Webs/k8s-examples/wordpress/components/mariadb.jsonnet&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
The latest stable version of MariaDB 10.1 GA at the moment of this writting is 10.1.37.&lt;/p&gt;

&lt;p&gt;Then we will need to add a persistent volume and also tell Wordpress to use this MariaDB instance. How do we do that, we will need to modify a few files, like this (in order to re-use things I placed the mysql variables in the global section, for this example that will simplify things, but it might not be the best approach for a production environment):
The resulting &lt;code&gt;components/params.json&lt;/code&gt; will be:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;{
  global: {
    // User-defined global parameters; accessible to all component and environments, Ex:
    // replicas: &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,
    mariadbEmptyPassword: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;no&amp;#34;&lt;/span&gt;,
    mariadbUser: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mywordpressuser&amp;#34;&lt;/span&gt;,
    mariadbPassword: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mywordpresspassword&amp;#34;&lt;/span&gt;,
    mariadbDatabase: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bitnami_wordpress&amp;#34;&lt;/span&gt;,
  },
  components: {
    // Component-level parameters, defined initially from &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ks prototype use ...&amp;#39;&lt;/span&gt;
    // Each object below should correspond to a component in the components/ directory
    wordpress: {
      containerPort: &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;,
      image: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bitnami/wordpress:5.0.2&amp;#34;&lt;/span&gt;,
      name: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wordpress&amp;#34;&lt;/span&gt;,
      replicas: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
      servicePort: &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;,
      type: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ClusterIP&amp;#34;&lt;/span&gt;,
    },
    mariadb: {
      containerPort: &lt;span style=&#34;color:#ae81ff&#34;&gt;3306&lt;/span&gt;,
      image: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bitnami/mariadb:10.1.37&amp;#34;&lt;/span&gt;,
      name: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mariadb&amp;#34;&lt;/span&gt;,
      replicas: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
      servicePort: &lt;span style=&#34;color:#ae81ff&#34;&gt;3306&lt;/span&gt;,
      type: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ClusterIP&amp;#34;&lt;/span&gt;,
    },
  },
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;The resulting &lt;code&gt;components/wordpress.jsonnet&lt;/code&gt; will be:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;local env = std.extVar(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__ksonnet/environments&amp;#34;&lt;/span&gt;);
local params = std.extVar(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__ksonnet/params&amp;#34;&lt;/span&gt;).components.wordpress;
[
  {
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;apiVersion&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;v1&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;kind&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Service&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;metadata&amp;#34;&lt;/span&gt;: {
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: params.name
    },
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;spec&amp;#34;&lt;/span&gt;: {
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ports&amp;#34;&lt;/span&gt;: [
        {
          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;port&amp;#34;&lt;/span&gt;: params.servicePort,
          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;targetPort&amp;#34;&lt;/span&gt;: params.containerPort
        }
      ],
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;selector&amp;#34;&lt;/span&gt;: {
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;app&amp;#34;&lt;/span&gt;: params.name
      },
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: params.type
    }
  },
  {
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;apiVersion&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;apps/v1beta2&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;kind&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Deployment&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;metadata&amp;#34;&lt;/span&gt;: {
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: params.name
    },
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;spec&amp;#34;&lt;/span&gt;: {
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;replicas&amp;#34;&lt;/span&gt;: params.replicas,
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;selector&amp;#34;&lt;/span&gt;: {
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;matchLabels&amp;#34;&lt;/span&gt;: {
          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;app&amp;#34;&lt;/span&gt;: params.name
        },
      },
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;template&amp;#34;&lt;/span&gt;: {
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;metadata&amp;#34;&lt;/span&gt;: {
          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;labels&amp;#34;&lt;/span&gt;: {
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;app&amp;#34;&lt;/span&gt;: params.name
          }
        },
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;spec&amp;#34;&lt;/span&gt;: {
          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;containers&amp;#34;&lt;/span&gt;: [
            {
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;image&amp;#34;&lt;/span&gt;: params.image,
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: params.name,
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ports&amp;#34;&lt;/span&gt;: [
                {
                  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;containerPort&amp;#34;&lt;/span&gt;: params.containerPort
                }
              ],
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;env&amp;#34;&lt;/span&gt;: [
                {
                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;WORDPRESS_DATABASE_USER&amp;#34;&lt;/span&gt;,
                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;: params.mariadbUser,
                },
                {
                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;WORDPRESS_DATABASE_PASSWORD&amp;#34;&lt;/span&gt;,
                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;: params.mariadbPassword,
                },
                {
                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;WORDPRESS_DATABASE_NAME&amp;#34;&lt;/span&gt;,
                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;: params.mariadbDatabase,
                },
                {
                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;WORDPRESS_HOST&amp;#34;&lt;/span&gt;,
                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mariadb&amp;#34;&lt;/span&gt;,
                }
              ]
            }
          ]
        }
      }
    }
  }
]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
The only thing that changed here is &lt;code&gt;spec.containers.env&lt;/code&gt; which wasn&amp;rsquo;t present before.&lt;/p&gt;

&lt;p&gt;The resulting &lt;code&gt;components/mariadb.jsonnet&lt;/code&gt; will be:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;local env = std.extVar(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__ksonnet/environments&amp;#34;&lt;/span&gt;);
local params = std.extVar(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__ksonnet/params&amp;#34;&lt;/span&gt;).components.mariadb;
[
{
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;apiVersion&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;v1&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;kind&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Service&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;metadata&amp;#34;&lt;/span&gt;: {
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: params.name
        },
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;spec&amp;#34;&lt;/span&gt;: {
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ports&amp;#34;&lt;/span&gt;: [
            {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;port&amp;#34;&lt;/span&gt;: params.servicePort,
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;targetPort&amp;#34;&lt;/span&gt;: params.containerPort
            }
            ],
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;selector&amp;#34;&lt;/span&gt;: {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;app&amp;#34;&lt;/span&gt;: params.name
            },
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: params.type
        }
},
{
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;apiVersion&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;apps/v1beta2&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;kind&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Deployment&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;metadata&amp;#34;&lt;/span&gt;: {
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: params.name
    },
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;spec&amp;#34;&lt;/span&gt;: {
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;replicas&amp;#34;&lt;/span&gt;: params.replicas,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;selector&amp;#34;&lt;/span&gt;: {
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;matchLabels&amp;#34;&lt;/span&gt;: {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;app&amp;#34;&lt;/span&gt;: params.name
            },
        },
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;template&amp;#34;&lt;/span&gt;: {
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;metadata&amp;#34;&lt;/span&gt;: {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;labels&amp;#34;&lt;/span&gt;: {
                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;app&amp;#34;&lt;/span&gt;: params.name
                }
            },
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;spec&amp;#34;&lt;/span&gt;: {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;containers&amp;#34;&lt;/span&gt;: [
                {
                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;image&amp;#34;&lt;/span&gt;: params.image,
                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: params.name,
                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ports&amp;#34;&lt;/span&gt;: [
                    {
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;containerPort&amp;#34;&lt;/span&gt;: params.containerPort
                    },
                    ],
                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;env&amp;#34;&lt;/span&gt;: [
                    {
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ALLOW_EMPTY_PASSWORD&amp;#34;&lt;/span&gt;,
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;: params.mariadbEmptyPassword,
                    },
                    {
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MARIADB_USER&amp;#34;&lt;/span&gt;,
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;: params.mariadbUser,
                    },
                    {
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MARIADB_PASSWORD&amp;#34;&lt;/span&gt;,
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;: params.mariadbPassword,
                    },
                    {
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MARIADB_ROOT_PASSWORD&amp;#34;&lt;/span&gt;,
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;: params.mariadbPassword,
                    },
                    {
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MARIADB_DATABASE&amp;#34;&lt;/span&gt;,
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;: params.mariadbDatabase,
                    },
                    ],
                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;volumeMounts&amp;#34;&lt;/span&gt;: [
                    {
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mountPath&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/var/lib/mysql&amp;#34;&lt;/span&gt;,
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mariadb&amp;#34;&lt;/span&gt;
                    }
                    ]
                }
                ],
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;volumes&amp;#34;&lt;/span&gt;: [
                {
                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mariadb&amp;#34;&lt;/span&gt;,
                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hostPath&amp;#34;&lt;/span&gt;: {
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/home/docker/mariadb-data&amp;#34;&lt;/span&gt;
                    }
                }
                ]
            }
        }
    }
}
]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
I know, I know, that is a lot of JSON, I trust you have a decent scroll :).&lt;/p&gt;

&lt;p&gt;The only things that changed here are &lt;code&gt;spec.containers.env&lt;/code&gt;, &lt;code&gt;spec.containers.volumeMount&lt;/code&gt; and &lt;code&gt;spec.volumes&lt;/code&gt; which weren&amp;rsquo;t present before, that&amp;rsquo;s all you need to make wordpress work with mariadb.&lt;/p&gt;

&lt;p&gt;This post only scratched the surface of what Ksonnet and Jsonnet can do, in another post I will describe more advances features with less &lt;em&gt;JSON&lt;/em&gt; / &lt;em&gt;YAML&lt;/em&gt;. There are a lot of things that can be improved and we will cover those things in the next post, if you want to see all the source code for this post go &lt;a href=&#34;https://github.com/kainlite/ksonnet-wordpress-example&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s clean up &lt;code&gt;ks delete default&lt;/code&gt;:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;INFO Deleting services mariadb
INFO Deleting deployments mariadb
INFO Deleting services wordpress
INFO Deleting deployments wordpress&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h3 id=&#34;notes&#34;&gt;Notes&lt;/h3&gt;

&lt;p&gt;If you want to check the wordpress installation via browser you can do &lt;code&gt;minikube proxy&lt;/code&gt; and then look up the following URL: &lt;a href=&#34;http://localhost:8001/api/v1/namespaces/default/services/wordpress/proxy/&#34;&gt;Wordpress&lt;/a&gt; (I&amp;rsquo;m using the default namespace here and the service name is wordpress, if you use ingress you don&amp;rsquo;t need to do this step)&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m not aware if Ksonnet supports releases and rollbacks like Helm, but it seems it could be emulated using git tags and just some git hooks.&lt;/p&gt;

&lt;p&gt;If everything goes well, you should see something like this in the logs:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ kubectl logs -f wordpress-5b4d6bd47c-bdtmw

Welcome to the Bitnami wordpress container
Subscribe to project updates by watching https://github.com/bitnami/bitnami-docker-wordpress
Submit issues and feature requests at https://github.com/bitnami/bitnami-docker-wordpress/issues

nami    INFO  Initializing apache
apache  INFO  ==&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Patching httpoxy...&lt;/span&gt;
apache  INFO  ==&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Configuring dummy certificates...&lt;/span&gt;
nami    INFO  apache successfully initialized
nami    INFO  Initializing php
nami    INFO  php successfully initialized
nami    INFO  Initializing mysql-client
nami    INFO  mysql-client successfully initialized
nami    INFO  Initializing libphp
nami    INFO  libphp successfully initialized
nami    INFO  Initializing wordpress
mysql-c INFO  Trying to connect to MySQL server
mysql-c INFO  Found MySQL server listening at mariadb:&lt;span style=&#34;color:#ae81ff&#34;&gt;3306&lt;/span&gt;
mysql-c INFO  MySQL server listening and working at mariadb:&lt;span style=&#34;color:#ae81ff&#34;&gt;3306&lt;/span&gt;
wordpre INFO
wordpre INFO  &lt;span style=&#34;color:#75715e&#34;&gt;########################################################################&lt;/span&gt;
wordpre INFO   Installation parameters for wordpress:
wordpre INFO     First Name: FirstName
wordpre INFO     Last Name: LastName
wordpre INFO     Username: user
wordpre INFO     Password: &lt;span style=&#34;color:#75715e&#34;&gt;**********&lt;/span&gt;
wordpre INFO     Email: user@example.com
wordpre INFO     Blog Name: User&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s Blog!
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;wordpre INFO     Table Prefix: wp_
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;wordpre INFO   (Passwords are not shown for security reasons)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;wordpre INFO  ########################################################################
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;wordpre INFO
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;nami    INFO  wordpress successfully initialized
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;INFO  ==&amp;gt; Starting wordpress...
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[Thu Dec 27 04:30:59.684053 2018] [ssl:warn] [pid 116] AH01909: localhost:443:0 server certificate does NOT include an ID which matches the server name
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[Thu Dec 27 04:30:59.684690 2018] [ssl:warn] [pid 116] AH01909: localhost:443:0 server certificate does NOT include an ID which matches the server name
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[Thu Dec 27 04:30:59.738783 2018] [ssl:warn] [pid 116] AH01909: localhost:443:0 server certificate does NOT include an ID which matches the server name
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[Thu Dec 27 04:30:59.739701 2018] [ssl:warn] [pid 116] AH01909: localhost:443:0 server certificate does NOT include an ID which matches the server name
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[Thu Dec 27 04:30:59.765798 2018] [mpm_prefork:notice] [pid 116] AH00163: Apache/2.4.37 (Unix) OpenSSL/1.1.0j PHP/7.2.13 configured -- resuming normal operations
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[Thu Dec 27 04:30:59.765874 2018] [core:notice] [pid 116] AH00094: Command line: &amp;#39;&lt;/span&gt;httpd -f /bitnami/apache/conf/httpd.conf -D FOREGROUND&amp;#39;
&lt;span style=&#34;color:#ae81ff&#34;&gt;172.17&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt; - - [&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;/Dec/&lt;span style=&#34;color:#ae81ff&#34;&gt;2018&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; +&lt;span style=&#34;color:#ae81ff&#34;&gt;0000&lt;/span&gt;] &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GET / HTTP/1.1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3718&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;172.17&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt; - - [&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;/Dec/&lt;span style=&#34;color:#ae81ff&#34;&gt;2018&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; +&lt;span style=&#34;color:#ae81ff&#34;&gt;0000&lt;/span&gt;] &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GET /wp-includes/js/wp-embed.min.js?ver=5.0.2 HTTP/1.1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;753&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;172.17&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt; - - [&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;/Dec/&lt;span style=&#34;color:#ae81ff&#34;&gt;2018&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; +&lt;span style=&#34;color:#ae81ff&#34;&gt;0000&lt;/span&gt;] &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GET /wp-includes/css/dist/block-library/theme.min.css?ver=5.0.2 HTTP/1.1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;452&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;172.17&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt; - - [&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;/Dec/&lt;span style=&#34;color:#ae81ff&#34;&gt;2018&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; +&lt;span style=&#34;color:#ae81ff&#34;&gt;0000&lt;/span&gt;] &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GET /wp-includes/css/dist/block-library/style.min.css?ver=5.0.2 HTTP/1.1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4281&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;172.17&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt; - - [&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;/Dec/&lt;span style=&#34;color:#ae81ff&#34;&gt;2018&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; +&lt;span style=&#34;color:#ae81ff&#34;&gt;0000&lt;/span&gt;] &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GET /wp-content/themes/twentynineteen/style.css?ver=1.1 HTTP/1.1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;19371&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;172.17&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt; - - [&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;/Dec/&lt;span style=&#34;color:#ae81ff&#34;&gt;2018&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; +&lt;span style=&#34;color:#ae81ff&#34;&gt;0000&lt;/span&gt;] &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GET /wp-content/themes/twentynineteen/print.css?ver=1.1 HTTP/1.1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1230&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;And that folks is all I have for now, be sure to check out the &lt;a href=&#34;https://ksonnet.io/docs/&#34;&gt;Ksonnet official documentation&lt;/a&gt; and &lt;code&gt;ks help&lt;/code&gt; to know more about what ksonnet can do to help you deploy your applications to any kubernetes cluster.&lt;/p&gt;

&lt;h3 id=&#34;errata&#34;&gt;Errata&lt;/h3&gt;

&lt;p&gt;If you spot any error or have any suggestion, please send me a message so it gets fixed.&lt;/p&gt;

&lt;p&gt;Also you can check the source code and changes in the &lt;a href=&#34;https://github.com/kainlite/kainlite.github.io&#34;&gt;generated code&lt;/a&gt; and the &lt;a href=&#34;https://github.com/kainlite/blog&#34;&gt;sources here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Deploying my apps with Helm</title>
      <link>https://kainlite.github.io/blog/deploying_my_apps_with_helm/</link>
      <pubDate>Mon, 24 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kainlite.github.io/blog/deploying_my_apps_with_helm/</guid>
      <description>

&lt;h3 id=&#34;deploying-my-apps-with-helm&#34;&gt;&lt;strong&gt;Deploying my apps with Helm&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;If you are already familiar with &lt;a href=&#34;https://helm.sh/&#34;&gt;Helm&lt;/a&gt;, and the different types of kubernetes workloads / resource types you might be wondering how to install apps directly to kubernetes, yes, you don&amp;rsquo;t have to re-invent the wheel for your mysql installation, or your postgres, or nginx, jenkins, You name it. Helm solves that problem with &lt;a href=&#34;https://github.com/helm/charts&#34;&gt;Charts&lt;/a&gt;, this list has the official charts maintained by the community, where the folder incubator may refer to charts that are still not compliant with the &lt;a href=&#34;https://github.com/helm/charts/blob/master/CONTRIBUTING.md#technical-requirements&#34;&gt;technical requirements&lt;/a&gt; but probably usable and the folder stable is for &lt;em&gt;graduated&lt;/em&gt; charts. This is not the only source of charts as you can imagine, You can use any source for your charts, even just the &lt;a href=&#34;https://docs.helm.sh/using_helm/#helm-install-installing-a-package&#34;&gt;tgz&lt;/a&gt; files, as we will see in this post.&lt;/p&gt;

&lt;p&gt;How do I search for charts?:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ helm search wordpress
NAME                    CHART VERSION   APP VERSION     DESCRIPTION
stable/wordpress        &lt;span style=&#34;color:#ae81ff&#34;&gt;3.3&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;           &lt;span style=&#34;color:#ae81ff&#34;&gt;4.9&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;           Web publishing platform for building blogs and websites.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
Note that I&amp;rsquo;m not a fan of Wordpress or PHP itself, but it seems like the most common example everywhere. As we can see here it says stable/wordpress so we know that we&amp;rsquo;re using the official repo in the folder stable, but what if we don&amp;rsquo;t want that chart, but someone else provides one with more features or something that You like better. Let&amp;rsquo;s use the one from &lt;a href=&#34;https://bitnami.com/stack/wordpress/helm&#34;&gt;Bitnami&lt;/a&gt;, so if we check their page you can select different kind of deployments but for it to work we need to add another external repo:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;helm repo add bitnami https://charts.bitnami.com/bitnami&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
So if we search again we will now see two options (at the moment of this writing, the latest version is actually 5.0.2):
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ helm search wordpress
NAME                    CHART VERSION   APP VERSION     DESCRIPTION
bitnami/wordpress       &lt;span style=&#34;color:#ae81ff&#34;&gt;5.0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;           &lt;span style=&#34;color:#ae81ff&#34;&gt;5.0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;           Web publishing platform for building blogs and websites.
stable/wordpress        &lt;span style=&#34;color:#ae81ff&#34;&gt;3.3&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;           &lt;span style=&#34;color:#ae81ff&#34;&gt;4.9&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;           Web publishing platform for building blogs and websites.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
Let&amp;rsquo;s check the &lt;a href=&#34;https://github.com/helm/charts/tree/master/stable/wordpress&#34;&gt;documentation&lt;/a&gt; of the chart to create our &lt;code&gt;values.yaml&lt;/code&gt; file, note that in this example the stable wordpress chart it&amp;rsquo;s also maintained by Bitnami, so they have the same configuration :), this won&amp;rsquo;t always be the case but it simplifies things for us.&lt;/p&gt;

&lt;p&gt;Our example &lt;code&gt;values.yaml&lt;/code&gt; will look like:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;wordpressBlogName: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Testing Helm Charts&amp;#34;&lt;/span&gt;
persistence:
  size: 1Gi
ingress:
  enabled: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
We will only change the blog name by default, the persistent volume size and also enable &lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/ingress/&#34;&gt;ingress&lt;/a&gt; (Our app should be available through &lt;code&gt;wordpress.local&lt;/code&gt; inside the cluster), if you are using minikube be sure to enable the &lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/ingress/&#34;&gt;ingress&lt;/a&gt; addon.
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ minikube addons enable ingress
ingress was successfully enabled&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;We can then install &lt;code&gt;stable/wordpress&lt;/code&gt; or &lt;code&gt;bitnami/wordpress&lt;/code&gt;, we will follow up with the one from Bitnami repo.
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ helm install bitnami/wordpress \
--set image.repository=bitnami/wordpress \
--set image.tag=&lt;span style=&#34;color:#ae81ff&#34;&gt;5.0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; \
-f values.yaml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
As it&amp;rsquo;s a common good practice to use specific versions we will do it here, it&amp;rsquo;s better to do it this way because you can easily move between known versions and also avoid unknown states, this can happen by misunderstanding what latest means, &lt;a href=&#34;https://medium.com/@mccode/the-misunderstood-docker-tag-latest-af3babfd6375&#34;&gt;follow the example&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You should see something like:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;NAME:   plucking-condor
LAST DEPLOYED: Mon Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;06&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;38&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2018&lt;/span&gt;
NAMESPACE: default
STATUS: DEPLOYED

RESOURCES:
==&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; v1/Pod(related)&lt;/span&gt;
NAME                                        READY  STATUS             RESTARTS  AGE
plucking-condor-wordpress-84845db8b5-hkqhc  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;    ContainerCreating  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;         0s
plucking-condor-mariadb-&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;                   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;    Pending            &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;         0s

==&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; v1/Secret&lt;/span&gt;

NAME                       AGE
plucking-condor-mariadb    0s
plucking-condor-wordpress  0s

==&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; v1/ConfigMap&lt;/span&gt;
plucking-condor-mariadb        0s
plucking-condor-mariadb-tests  0s

==&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; v1/PersistentVolumeClaim&lt;/span&gt;
plucking-condor-wordpress  0s

==&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; v1/Service&lt;/span&gt;
plucking-condor-mariadb    0s
plucking-condor-wordpress  0s

==&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; v1beta1/Deployment&lt;/span&gt;
plucking-condor-wordpress  0s

==&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; v1beta1/StatefulSet&lt;/span&gt;
plucking-condor-mariadb  0s

==&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; v1beta1/Ingress&lt;/span&gt;
wordpress.local-plucking-condor  0s


NOTES:
&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;. Get the WordPress URL:

  You should be able to access your new WordPress installation through
  http://wordpress.local/admin

&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;. Login with the following credentials to see your blog

  echo Username: user
  echo Password: $(kubectl get secret --namespace default plucking-condor-wordpress -o jsonpath=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{.data.wordpress-password}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;| base64 --decode)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
Depending on the cluster provider or installation itself, you might need to replace the &lt;code&gt;persistence.storageClass&lt;/code&gt; to match what your cluster has, note that in the values file is represented like JSON with dot notation but in your &lt;code&gt;values.yaml&lt;/code&gt; you need to stick to YAML format and indent &lt;code&gt;storageClass&lt;/code&gt; under persistence as usual, the kubernetes API parses and uses JSON but YAML seems more human friendly.&lt;/p&gt;

&lt;p&gt;At this point we should a working wordpress installation, also move between versions, but be aware that the application is in charge of the database schema and updating it to match what the new version needs, this can also be troublesome rolling back or when downgrading, so if you use persistent data &lt;em&gt;ALWAYS&lt;/em&gt; have a working backup, because when things go south, you will want to quickly go back to a known state, also note that I said &amp;ldquo;working backup&amp;rdquo;, yes, test that the backup works and that You can restore it somewhere else before doing anything destructive or that can has repercussions, this will bring you peace of mind and better ways to organize yourself while upgrading, etc.&lt;/p&gt;

&lt;p&gt;Now let&amp;rsquo;s check that all resources are indeed working and that we can use our recently installed app.
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ kubectl get all
NAME                                             READY     STATUS        RESTARTS   AGE
pod/plucking-condor-mariadb-&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;                    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;       Running       &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          12m
pod/plucking-condor-wordpress-84845db8b5-hkqhc   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;       Running       &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          12m

NAME                                TYPE           CLUSTER-IP       EXTERNAL-IP      PORT(S)                      AGE
service/kubernetes                  ClusterIP      &lt;span style=&#34;color:#ae81ff&#34;&gt;10.96&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;        &amp;lt;none&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt;           443/TCP                      37h&lt;/span&gt;
service/plucking-condor-mariadb     ClusterIP      &lt;span style=&#34;color:#ae81ff&#34;&gt;10.106&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;219.59&lt;/span&gt;    &amp;lt;none&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt;           3306/TCP                     12m&lt;/span&gt;
service/plucking-condor-wordpress   LoadBalancer   &lt;span style=&#34;color:#ae81ff&#34;&gt;10.100&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;239.163&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;10.100&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;239.163&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;31764&lt;/span&gt;/TCP,&lt;span style=&#34;color:#ae81ff&#34;&gt;443&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;32308&lt;/span&gt;/TCP   12m

NAME                                        DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/plucking-condor-wordpress   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;            &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;           12m

NAME                                                   DESIRED   CURRENT   READY     AGE
replicaset.apps/plucking-condor-wordpress-84845db8b5   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;         12m

NAME                                       DESIRED   CURRENT   AGE
statefulset.apps/plucking-condor-mariadb   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;         12m&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
You can deploy it to a custom namespace (In this case I deployed it to the default namespace), the only change for that would be to set the parameter &lt;code&gt;--namespace&lt;/code&gt; in the &lt;code&gt;helm install&lt;/code&gt; line.&lt;/p&gt;

&lt;p&gt;If you use minikube then ingress will expose a nodeport that we can find using &lt;code&gt;minikube service list&lt;/code&gt; then using the browser or curl to navigate our freshly installed wordpress.
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt; $ minikube service list
|-------------|---------------------------|--------------------------------&lt;span style=&#34;color:#e6db74&#34;&gt;|
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;|  NAMESPACE  |           NAME            |              URL               |
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;|-------------|---------------------------|--------------------------------|
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;| default     | kubernetes                | No node port                   |
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;| default     | plucking-condor-mariadb   | No node port                   |
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;| default     | plucking-condor-wordpress | http://192.168.99.100:31764    |
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;|             |                           | http://192.168.99.100:32308    |
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;| kube-system | default-http-backend      | http://192.168.99.100:30001    |
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;| kube-system | kube-dns                  | No node port                   |
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;| kube-system | kubernetes-dashboard      | No node port                   |
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;| kube-system | tiller-deploy             | No node port                   |
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;|-------------|---------------------------|--------------------------------|&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
In the cloud or on premises this will indeed be different and you should have a publicly available installation using your own domain name (In this case http is at: &lt;a href=&#34;http://192.168.99.100:31764&#34;&gt;http://192.168.99.100:31764&lt;/a&gt; and https at: &lt;a href=&#34;http://192.168.99.100:32308&#34;&gt;http://192.168.99.100:32308&lt;/a&gt;, and &lt;a href=&#34;http://192.168.99.100:30001&#34;&gt;http://192.168.99.100:30001&lt;/a&gt; is the default backend for the ingress controller), your ips can be different but the basics are the same.&lt;/p&gt;

&lt;p&gt;Sample screenshot:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://kainlite.github.io/img/wordpress-example.png&#34; alt=&#34;Wordpress example&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;notes&#34;&gt;Notes&lt;/h3&gt;

&lt;p&gt;As long as we have the &lt;a href=&#34;https://kubernetes.io/docs/concepts/storage/persistent-volumes/&#34;&gt;persistent volume&lt;/a&gt; our data should be preserved in this case the PV is used for tha database, but we could add another volume to preserve images, etc.&lt;/p&gt;

&lt;p&gt;Clean everything up:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;helm del --purge plucking-condor&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s all I have for now, I will be adding more content next week.&lt;/p&gt;

&lt;h3 id=&#34;don-t-repeat-yourself&#34;&gt;Don&amp;rsquo;t Repeat Yourself&lt;/h3&gt;

&lt;p&gt;DRY is a good design goal and part of the art of a good template is knowing when to add a new template and when to update or use an existing one. While helm and go helps with that, there is no perfect tool so we will explore other options in the following posts, explore what the community provides and what seems like a suitable tool for you. Happy Helming!.&lt;/p&gt;

&lt;h3 id=&#34;upcoming-topics&#34;&gt;Upcoming topics&lt;/h3&gt;

&lt;p&gt;The following posts will be about package managers, development deployment tools, etc. It&amp;rsquo;s hard to put all the tools in a category, but they are trying to solve similar problems in different ways, and we will be exploring the ones that seem more promising to me, if you would like me to cover any other tool/project/whatever, just send me a message :)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Getting started with Ksonnet and friends.&lt;/li&gt;
&lt;li&gt;Getting started with Skaffold.&lt;/li&gt;
&lt;li&gt;Getting started with Gitkube.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;errata&#34;&gt;Errata&lt;/h3&gt;

&lt;p&gt;If you spot any error or have any suggestion, please send me a message so it gets fixed.&lt;/p&gt;

&lt;p&gt;Also you can check the source code and changes in the &lt;a href=&#34;https://github.com/kainlite/kainlite.github.io&#34;&gt;generated code&lt;/a&gt; and the &lt;a href=&#34;https://github.com/kainlite/blog&#34;&gt;sources here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting started with Helm</title>
      <link>https://kainlite.github.io/blog/getting_started_with_helm/</link>
      <pubDate>Sun, 23 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kainlite.github.io/blog/getting_started_with_helm/</guid>
      <description>

&lt;h3 id=&#34;introduction&#34;&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;This tutorial will show you how to create a simple chart and also how to deploy it to kubernetes using &lt;a href=&#34;https://helm.sh/&#34;&gt;Helm&lt;/a&gt;, in the examples I will be using &lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/install-minikube&#34;&gt;minikube&lt;/a&gt; or you can &lt;a href=&#34;https://github.com/kainlite/kainlite.github.io&#34;&gt;check out this repo&lt;/a&gt; that has a good overview of minikube, once installed and started (&lt;code&gt;minikube start&lt;/code&gt;) that command will download and configure the local environment, you can follow with the following example:&lt;/p&gt;

&lt;p&gt;Create the chart:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;helm create hello-world&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
Always use valid DNS names if you are going to have services, otherwise you will have issues later on.&lt;/p&gt;

&lt;p&gt;Inspect the contents, as you will notice every resource is just a kubernetes resource with some placeholders and basic logic to get something more reusable:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;cd hello-world

charts       &amp;lt;--- Dependencies, charts that your chart depends on.
Chart.yaml   &amp;lt;--- Metadata mostly, defines the version of your chart, etc.
templates    &amp;lt;--- Here is where the magic happens.
values.yaml  &amp;lt;--- Default values file (this is used to replace in the templates at runtime)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
Note: the following link explains the basics of &lt;a href=&#34;https://docs.helm.sh/developing_charts/#managing-dependencies-manually-via-the-charts-directory&#34;&gt;dependencies&lt;/a&gt;, your chart can have as many dependencies as you need, the only thing that you need to do is add or install the other charts as dependencies.&lt;/p&gt;

&lt;p&gt;The file &lt;code&gt;values.yaml&lt;/code&gt; by default will look like the following snippet:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;replicaCount: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;

image:
  repository: nginx
  tag: stable
  pullPolicy: IfNotPresent

nameOverride: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
fullnameOverride: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;

service:
  type: ClusterIP
  port: &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;

ingress:
  enabled: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
  annotations: {}
    &lt;span style=&#34;color:#75715e&#34;&gt;# kubernetes.io/ingress.class: nginx&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# kubernetes.io/tls-acme: &amp;#34;true&amp;#34;&lt;/span&gt;
  path: /
  hosts:
    - chart-example.local
  tls: []
  &lt;span style=&#34;color:#75715e&#34;&gt;#  - secretName: chart-example-tls&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#    hosts:&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#      - chart-example.local&lt;/span&gt;

resources: {}
nodeSelector: {}
tolerations: []
affinity: {}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;The next step would be to check the &lt;code&gt;templates&lt;/code&gt; folder:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;deployment.yaml  &amp;lt;--- Standard kubernetes deployment with go templates variables.
_helpers.tpl     &amp;lt;--- This file defines some common variables.
ingress.yaml     &amp;lt;--- Ingress route, etc.
NOTES.txt        &amp;lt;--- Once deployed this file will display the details of our deployment, usually login data, how to connect, etc.
service.yaml     &amp;lt;--- The service that we will use internally and/or via ingress to reach our deployed service.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
Go &lt;a href=&#34;https://blog.gopheracademy.com/advent-2017/using-go-templates/&#34;&gt;templates&lt;/a&gt; basics, if you need a refresher or a crash course in go templates, also always be sure to check Helm&amp;rsquo;s own &lt;a href=&#34;https://github.com/helm/helm/blob/master/docs/chart_template_guide/functions_and_pipelines.md&#34;&gt;documentation&lt;/a&gt; and also some &lt;a href=&#34;https://github.com/helm/helm/blob/master/docs/charts_tips_and_tricks.md&#34;&gt;tips and tricks&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s check the &lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/controllers/deployment/&#34;&gt;deployment&lt;/a&gt; file:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello-world.fullname&amp;#34;&lt;/span&gt; . }}
  labels:
    app.kubernetes.io/name: {{ include &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello-world.name&amp;#34;&lt;/span&gt; . }}
    helm.sh/chart: {{ include &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello-world.chart&amp;#34;&lt;/span&gt; . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello-world.name&amp;#34;&lt;/span&gt; . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello-world.name&amp;#34;&lt;/span&gt; . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ .Values.image.repository }}:{{ .Values.image.tag }}&amp;#34;&lt;/span&gt;
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
{{ toYaml .Values.resources &lt;span style=&#34;color:#e6db74&#34;&gt;| indent 12 }}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    {{- with .Values.nodeSelector }}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      nodeSelector:&lt;/span&gt;
{{ toYaml . &lt;span style=&#34;color:#e6db74&#34;&gt;| indent 8 }}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    {{- end }}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    {{- with .Values.affinity }}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      affinity:&lt;/span&gt;
{{ toYaml . &lt;span style=&#34;color:#e6db74&#34;&gt;| indent 8 }}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    {{- end }}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    {{- with .Values.tolerations }}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      tolerations:&lt;/span&gt;
{{ toYaml . &lt;span style=&#34;color:#e6db74&#34;&gt;| indent 8 }}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    {{- end }}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
As you can see everything will get replaced by what you define in the &lt;code&gt;values.yaml&lt;/code&gt; file and everything is under &lt;code&gt;.Values&lt;/code&gt; unless you define a local variable or some other variable using helpers for example.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s check the &lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/service/&#34;&gt;service&lt;/a&gt; file:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;apiVersion: v1
kind: Service
metadata:
  name: {{ include &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello-world.fullname&amp;#34;&lt;/span&gt; . }}
  labels:
    app.kubernetes.io/name: {{ include &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello-world.name&amp;#34;&lt;/span&gt; . }}
    helm.sh/chart: {{ include &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello-world.chart&amp;#34;&lt;/span&gt; . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ .Values.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: {{ include &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello-world.name&amp;#34;&lt;/span&gt; . }}
    app.kubernetes.io/instance: {{ .Release.Name }}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s check the &lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/ingress/&#34;&gt;ingress&lt;/a&gt; file:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;{{- if .Values.ingress.enabled -}}
{{- $fullName := include &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello-world.fullname&amp;#34;&lt;/span&gt; . -}}
{{- $ingressPath := .Values.ingress.path -}}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    app.kubernetes.io/name: {{ include &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello-world.name&amp;#34;&lt;/span&gt; . }}
    helm.sh/chart: {{ include &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello-world.chart&amp;#34;&lt;/span&gt; . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- with .Values.ingress.annotations }}
  annotations:
{{ toYaml . &lt;span style=&#34;color:#e6db74&#34;&gt;| indent 4 }}&lt;/span&gt;
{{- end }}
spec:
{{- if .Values.ingress.tls }}
  tls:
  {{- range .Values.ingress.tls }}
    - hosts:
      {{- range .hosts }}
        - {{ . &lt;span style=&#34;color:#e6db74&#34;&gt;| quote }}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      {{- end }}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      secretName: {{ .secretName }}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  {{- end }}&lt;/span&gt;
{{- end }}
  rules:
  {{- range .Values.ingress.hosts }}
    - host: {{ . &lt;span style=&#34;color:#e6db74&#34;&gt;| quote }}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      http:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        paths:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          - path: {{ $ingressPath }}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            backend:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              serviceName: {{ $fullName }}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              servicePort: http
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  {{- end }}&lt;/span&gt;
{{- end }}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
The ingress file is one of the most interesting ones in my humble opinion because it has a if else example and also local variables (&lt;code&gt;$fullName&lt;/code&gt; for example), also iterates over a possible slice of dns record names (hosts), and the same if you have certs for them (a good way to get let&amp;rsquo;s encrypt certificates automatically is using cert-manager, in the next post I will expand on this example adding a basic web app with mysql and ssl/tls).&lt;/p&gt;

&lt;p&gt;After checking that everything is up to our needs the only thing missing is to finally deploy it to kubernetes (But first let&amp;rsquo;s install tiller):
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ helm init
$HELM_HOME has been configured at /home/gabriel/.helm.

Tiller (the Helm server-side component) has been installed into your Kubernetes Cluster.

Please note: by default, Tiller is deployed with an insecure &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;allow unauthenticated users&amp;#39;&lt;/span&gt; policy.
To prevent this, run `helm init` with the --tiller-tls-verify flag.
For more information on securing your installation see: https://docs.helm.sh/using_helm/&lt;span style=&#34;color:#75715e&#34;&gt;#securing-your-helm-installation&lt;/span&gt;
Happy Helming!&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
Note that many of the complains that Helm receives are because of the admin-y capabilities that Tiller has. A good note on the security issues that Tiller can suffer and some possible mitigation alternatives can be found on the &lt;a href=&#34;https://engineering.bitnami.com/articles/helm-security.html&#34;&gt;Bitnami page&lt;/a&gt;, this mostly applies to multi-tenant clusters. And also be sure to check &lt;a href=&#34;https://docs.helm.sh/using_helm/#securing-your-helm-installation&#34;&gt;Securing Helm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Deploy our chart:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ helm install --name my-nginx -f values.yaml .
NAME:   my-nginx
LAST DEPLOYED: Sun Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2018&lt;/span&gt;
NAMESPACE: default
STATUS: DEPLOYED

RESOURCES:
==&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; v1/Service&lt;/span&gt;
NAME                  AGE
my-nginx-hello-world  0s

==&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; v1beta2/Deployment&lt;/span&gt;
my-nginx-hello-world  0s

==&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; v1/Pod(related)&lt;/span&gt;

NAME                                   READY  STATUS   RESTARTS  AGE
my-nginx-hello-world-6f948db8d5-s76zl  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;    Pending  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;         0s

NOTES:
&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;. Get the application URL by running these commands:
  export POD_NAME=$(kubectl get pods --namespace default -l &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;app.kubernetes.io/name=hello-world,app.kubernetes.io/instance=my-nginx&amp;#34;&lt;/span&gt; -o jsonpath=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{.items[0].metadata.name}&amp;#34;&lt;/span&gt;)
  echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Visit http://127.0.0.1:8080 to use your application&amp;#34;&lt;/span&gt;
  kubectl port-forward $POD_NAME &lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
Our deployment was successful and we can see that our pod is waiting to be scheduled.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s check that our service is there:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ kubectl get services
NAME                   TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE
kubernetes             ClusterIP   &lt;span style=&#34;color:#ae81ff&#34;&gt;10.96&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;       &amp;lt;none&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt;        443/TCP   1h&lt;/span&gt;
my-nginx-hello-world   ClusterIP   &lt;span style=&#34;color:#ae81ff&#34;&gt;10.111&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;222.70&lt;/span&gt;   &amp;lt;none&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt;        80/TCP    5m&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;And now we can test that everything is okay by running another pod in interactive mode, for example:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ kubectl run -i --tty alpine --image=alpine -- sh
If you don&amp;#39;t see a command prompt, try pressing enter.

/ &lt;span style=&#34;color:#75715e&#34;&gt;# apk add curl&lt;/span&gt;
fetch http://dl-cdn.alpinelinux.org/alpine/v3.&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;/main/x86_64/APKINDEX.tar.gz
fetch http://dl-cdn.alpinelinux.org/alpine/v3.&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;/community/x86_64/APKINDEX.tar.gz
(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;) Installing ca-certificates (&lt;span style=&#34;color:#ae81ff&#34;&gt;20171114&lt;/span&gt;-r3)
(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;) Installing nghttp2-libs (&lt;span style=&#34;color:#ae81ff&#34;&gt;1.32&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;-r0)
(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;) Installing libssh2 (&lt;span style=&#34;color:#ae81ff&#34;&gt;1.8&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;-r3)
(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;) Installing libcurl (&lt;span style=&#34;color:#ae81ff&#34;&gt;7.61&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;-r1)
(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;) Installing curl (&lt;span style=&#34;color:#ae81ff&#34;&gt;7.61&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;-r1)
Executing busybox-&lt;span style=&#34;color:#ae81ff&#34;&gt;1.28&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;-r2.trigger
Executing ca-certificates-&lt;span style=&#34;color:#ae81ff&#34;&gt;20171114&lt;/span&gt;-r3.trigger
OK: &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; MiB in &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt; packages

/ &lt;span style=&#34;color:#75715e&#34;&gt;# curl -v my-nginx-hello-world&lt;/span&gt;
* Rebuilt URL to: my-nginx-hello-world/
*   Trying &lt;span style=&#34;color:#ae81ff&#34;&gt;10.111&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;222.70&lt;/span&gt;...
* TCP_NODELAY set
* Connected to my-nginx-hello-world (&lt;span style=&#34;color:#ae81ff&#34;&gt;10.111&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;222.70&lt;/span&gt;) port &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt; (&lt;span style=&#34;color:#75715e&#34;&gt;#0)&lt;/span&gt;
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; GET / HTTP/1.1&lt;/span&gt;
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Host: my-nginx-hello-world&lt;/span&gt;
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; User-Agent: curl/7.61.1&lt;/span&gt;
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; Accept: */*&lt;/span&gt;
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt; HTTP/1.1 200 OK
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt; Server: nginx/1.14.2
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt; Date: Sun, 23 Dec 2018 03:45:31 GMT
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt; Content-Type: text/html
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt; Content-Length: 612
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt; Last-Modified: Tue, 04 Dec 2018 14:44:49 GMT
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt; Connection: keep-alive
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt; ETag: &amp;#34;5c0692e1-264&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt; Accept-Ranges: bytes
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;html&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;head&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;title&amp;gt;Welcome to nginx!&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;style&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    body {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        width: 35em;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        margin: 0 auto;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        font-family: Tahoma, Verdana, Arial, sans-serif;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    }
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;/style&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;body&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;h1&amp;gt;Welcome to nginx!&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;p&amp;gt;If you see this page, the nginx web server is successfully installed and
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;working. Further configuration is required.&amp;lt;/p&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;p&amp;gt;For online documentation and support please refer to
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;a href=&amp;#34;http://nginx.org/&amp;#34;&amp;gt;nginx.org&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Commercial support is available at
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;a href=&amp;#34;http://nginx.com/&amp;#34;&amp;gt;nginx.com&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;Thank you for using nginx.&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;* Connection #0 to host my-nginx-hello-world left intact&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
And voila we see our nginx deployed there and accessible via service name to our other pods (this is fantastic for microservices).&lt;/p&gt;

&lt;p&gt;Our current deployment can be checked like this:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ helm ls
NAME            REVISION        UPDATED                         STATUS          CHART                   APP VERSION     NAMESPACE
my-nginx        &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;               Sun Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2018&lt;/span&gt;        DEPLOYED        hello-world-&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;             default&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;The last example would be to upgrade our deployment, lets change the &lt;code&gt;tag&lt;/code&gt; in the &lt;code&gt;values.yaml&lt;/code&gt; file from &lt;code&gt;stable&lt;/code&gt; to &lt;code&gt;mainline&lt;/code&gt; and update also the metadata file (&lt;code&gt;Chart.yaml&lt;/code&gt;) to let Helm know that this is a new version of our chart.
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt; $ helm upgrade my-nginx . -f values.yaml
Release &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;my-nginx&amp;#34;&lt;/span&gt; has been upgraded. Happy Helming!
LAST DEPLOYED: Sun Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2018&lt;/span&gt;
NAMESPACE: default
STATUS: DEPLOYED

RESOURCES:
==&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; v1/Pod(related)&lt;/span&gt;
NAME                                   READY  STATUS             RESTARTS  AGE
my-nginx-hello-world-6f948db8d5-s76zl  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;    Running            &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;         25m
my-nginx-hello-world-c5cdcc95c-shgc6   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;/&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;    ContainerCreating  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;         0s

==&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; v1/Service&lt;/span&gt;

NAME                  AGE
my-nginx-hello-world  25m

==&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; v1beta2/Deployment&lt;/span&gt;
my-nginx-hello-world  25m


NOTES:
&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;. Get the application URL by running these commands:
  export POD_NAME=$(kubectl get pods --namespace default -l &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;app.kubernetes.io/name=hello-world,app.kubernetes.io/instance=my-nginx&amp;#34;&lt;/span&gt; -o jsonpath=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{.items[0].metadata.name}&amp;#34;&lt;/span&gt;)
  echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Visit http://127.0.0.1:8080 to use your application&amp;#34;&lt;/span&gt;
  kubectl port-forward $POD_NAME &lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
Note that I always specify the -f values.yaml just for explicitness.&lt;/p&gt;

&lt;p&gt;It seems that our upgrade went well, let&amp;rsquo;s see what Helm sees
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ helm ls
NAME            REVISION        UPDATED                         STATUS          CHART                   APP VERSION     NAMESPACE
my-nginx        &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;               Sun Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2018&lt;/span&gt;        DEPLOYED        hello-world-&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;             default&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;But before we go let&amp;rsquo;s validate that it did deployed the nginx version that we wanted to have:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ kubectl exec my-nginx-hello-world-c5cdcc95c-shgc6 -- /usr/sbin/nginx -v
nginx version: nginx/&lt;span style=&#34;color:#ae81ff&#34;&gt;1.15&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
At the moment of this writing mainline is 1.15.7, we could rollback to the previous version by doing:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ helm rollback my-nginx &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
Rollback was a success! Happy Helming!&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
Basically this command needs a deployment name &lt;code&gt;my-nginx&lt;/code&gt; and the revision number to rollback to in this case &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s check the versions again:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ kubectl exec my-nginx-hello-world-6f948db8d5-bsml2 -- /usr/sbin/nginx -v
nginx version: nginx/&lt;span style=&#34;color:#ae81ff&#34;&gt;1.14&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s clean up:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ helm del --purge my-nginx
release &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;my-nginx&amp;#34;&lt;/span&gt; deleted&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;If you need to see what will be sent to the kubernetes API then you can use the following command (sometimes it&amp;rsquo;s really useful for debugging or to inject a sidecar using pipes):
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ helm template . -name my-nginx -f values.yaml
&lt;span style=&#34;color:#75715e&#34;&gt;# Source: hello-world/templates/service.yaml&lt;/span&gt;
apiVersion: v1
kind: Service
metadata:
  name: ame-hello-world&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;And that folks is all I have for now, be sure to check own &lt;a href=&#34;https://docs.helm.sh/&#34;&gt;Helm Documentation&lt;/a&gt; and &lt;code&gt;helm help&lt;/code&gt; to know more about what helm can do to help you deploy your applications to any kubernetes cluster.&lt;/p&gt;

&lt;h3 id=&#34;don-t-repeat-yourself&#34;&gt;Don&amp;rsquo;t Repeat Yourself&lt;/h3&gt;

&lt;p&gt;DRY is a good design goal and part of the art of a good template is knowing when to add a new template and when to update an existing one. While you&amp;rsquo;re figuring that out, accept that you&amp;rsquo;ll be doing some refactoring. Helm and go makes that easy and fast.&lt;/p&gt;

&lt;h3 id=&#34;upcoming-topics&#34;&gt;Upcoming topics&lt;/h3&gt;

&lt;p&gt;The following posts will be about package managers, development deployment tools, etc. It&amp;rsquo;s hard to put all the tools in a category, but they are trying to solve similar problems in different ways, and we will be exploring the ones that seem more promising to me, if you would like me to cover any other tool/project/whatever, just send me a message :)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kainlite.github.io/blog/deploying_my_apps_with_helm/&#34;&gt;Expand on helm, search and install community charts&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kainlite.github.io/blog/getting_started_with_ksonnet/&#34;&gt;Getting started with Ksonnet and friends&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kainlite.github.io/blog/getting_started_with_skaffold/&#34;&gt;Getting started with Skaffold&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kainlite.github.io/blog/getting_started_with_gitkube/&#34;&gt;Getting started with Gitkube&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;errata&#34;&gt;Errata&lt;/h3&gt;

&lt;p&gt;If you spot any error or have any suggestion, please send me a message so it gets fixed.&lt;/p&gt;

&lt;p&gt;Also you can check the source code and changes in the &lt;a href=&#34;https://github.com/kainlite/kainlite.github.io&#34;&gt;generated code&lt;/a&gt; and the &lt;a href=&#34;https://github.com/kainlite/blog&#34;&gt;sources here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
