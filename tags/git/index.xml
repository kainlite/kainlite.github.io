<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on Kubernetes, CI/CD, Git, Linux, Containers, Golang... and more</title>
    <link>https://techsquad.rocks/tags/git/</link>
    <description>Recent content in Git on Kubernetes, CI/CD, Git, Linux, Containers, Golang... and more</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 03 Feb 2019 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://techsquad.rocks/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sending emails with AWS Lambda and SES from a HTML form.</title>
      <link>https://techsquad.rocks/blog/sending_emails_with_lambda_and_ses/</link>
      <pubDate>Sun, 03 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://techsquad.rocks/blog/sending_emails_with_lambda_and_ses/</guid>
      <tags>
      
        <tag>development</tag>
      
        <tag>serverless</tag>
      
        <tag>git</tag>
      
        <tag>linux</tag>
      
      </tags>
      <description>

&lt;h5 id=&#34;serverless-series&#34;&gt;&lt;strong&gt;Serverless series&lt;/strong&gt;&lt;/h5&gt;

&lt;p&gt;Part I: &lt;a href=&#34;https://techsquad.rocks/blog/serving_static_sites_with_s3_and_cloudfront/&#34;&gt;Serving static websites with s3 and cloudfront&lt;/a&gt;, so refer to that one before starting this one if you want to know how did we get here.&lt;/p&gt;

&lt;p&gt;Part II: &lt;a href=&#34;https://techsquad.rocks/blog/sending_emails_with_lambda_and_ses/&#34;&gt;Sending emails with AWS Lambda and SES from a HTML form&lt;/a&gt;, &lt;strong&gt;You are here&lt;/strong&gt;.&lt;/p&gt;

&lt;h5 id=&#34;introduction&#34;&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h5&gt;

&lt;p&gt;This article is part of the serverless series, in this article we will see how to create a serverless function in AWS Lambda to send an email coming from the HTML form in the site the source code can be &lt;a href=&#34;https://github.com/kainlite/aws-serverless-go-ses-example&#34;&gt;found here&lt;/a&gt;, that is the go version but if you prefer node you can use &lt;a href=&#34;https://github.com/kainlite/aws-serverless-nodejs-ses-example&#34;&gt;this one&lt;/a&gt;.&lt;/p&gt;

&lt;h5 id=&#34;serverless-framework&#34;&gt;&lt;strong&gt;Serverless framework&lt;/strong&gt;&lt;/h5&gt;

&lt;p&gt;&lt;strong&gt;As usual I will be using the serverless framework to manage our functions, create the project&lt;/strong&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mkdir techsquad-functions &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cd techsquad-functions &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; serverless create -t aws-go
&lt;span style=&#34;color:#75715e&#34;&gt;# OUTPUT:&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Serverless: Generating boilerplate...&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#  _______                             __&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# |   _   .-----.----.--.--.-----.----|  .-----.-----.-----.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# |   |___|  -__|   _|  |  |  -__|   _|  |  -__|__ --|__ --|&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# |____   |_____|__|  \___/|_____|__| |__|_____|_____|_____|&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# |   |   |             The Serverless Application Framework&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# |       |                           serverless.com, v1.36.1&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#  -------&amp;#39;&lt;/span&gt;
#
&lt;span style=&#34;color:#75715e&#34;&gt;# Serverless: Successfully generated boilerplate for template: &amp;#34;aws-go&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Serverless: NOTE: Please update the &amp;#34;service&amp;#34; property in serverless.yml with your service name&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;After creating the project we can update the serverless manifest as follow:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;service: sendMail

frameworkVersion: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;gt;=1.28.0 &amp;lt;2.0.0&amp;#34;&lt;/span&gt;

provider:
  name: aws
  runtime: go1.x
  region: us-east-1
  memorySize: &lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt;
  versionFunctions: false
  stage: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prod&amp;#39;&lt;/span&gt;

  iamRoleStatements:
    - Effect: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Allow&amp;#34;&lt;/span&gt;
      Action:
        - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ses:*&amp;#34;&lt;/span&gt;
        - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lambda:*&amp;#34;&lt;/span&gt;
      Resource:
        - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;

package:
 exclude:
   - ./**
 include:
   - ./send_mail/send_mail

functions:
  send_mail:
    handler: send_mail/send_mail
    events:
      - http:
          path: sendMail
          method: post&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
The interesting parts here are the IAM permissions and the function send_mail, the rest is pretty much standard, we define a function and the event HTTP POST for the API Gateway, where our executable can be found and we also request permissions to send emails via SES.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deploy the function&lt;/strong&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;make deploy
&lt;span style=&#34;color:#75715e&#34;&gt;# OUTPUT:&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# rm -rf ./send_mail/send_mail&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# env GOOS=linux go build -ldflags=&amp;#34;-s -w&amp;#34; -o send_mail/send_mail send_mail/main.go&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# sls deploy --verbose&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Serverless: WARNING: Missing &amp;#34;tenant&amp;#34; and &amp;#34;app&amp;#34; properties in serverless.yml. Without these properties, you can not publish the service to the Serverless Platform.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Serverless: Packaging service...&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Serverless: Excluding development dependencies...&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Serverless: Uploading CloudFormation file to S3...&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Serverless: Uploading artifacts...&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Serverless: Uploading service .zip file to S3 (7.31 MB)...&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Serverless: Validating template...&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Serverless: Updating Stack...&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Serverless: Checking Stack update progress...&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# CloudFormation - UPDATE_IN_PROGRESS - AWS::CloudFormation::Stack - sendMail-prod&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# CloudFormation - UPDATE_IN_PROGRESS - AWS::Lambda::Function - SendUnderscoremailLambdaFunction&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# CloudFormation - UPDATE_COMPLETE - AWS::Lambda::Function - SendUnderscoremailLambdaFunction&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# CloudFormation - CREATE_IN_PROGRESS - AWS::ApiGateway::Deployment - ApiGatewayDeployment1549246566486&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# CloudFormation - CREATE_IN_PROGRESS - AWS::ApiGateway::Deployment - ApiGatewayDeployment1549246566486&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# CloudFormation - CREATE_COMPLETE - AWS::ApiGateway::Deployment - ApiGatewayDeployment1549246566486&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# CloudFormation - UPDATE_COMPLETE_CLEANUP_IN_PROGRESS - AWS::CloudFormation::Stack - sendMail-prod&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# CloudFormation - DELETE_IN_PROGRESS - AWS::ApiGateway::Deployment - ApiGatewayDeployment1549246013644&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# CloudFormation - DELETE_COMPLETE - AWS::ApiGateway::Deployment - ApiGatewayDeployment1549246013644&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# CloudFormation - UPDATE_COMPLETE - AWS::CloudFormation::Stack - sendMail-prod&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Serverless: Stack update finished...&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Service Information&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# service: sendMail&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# stage: prod&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# region: us-east-1&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# stack: sendMail-prod&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# api keys:&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   None&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# endpoints:&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   POST - https://m8ebtlirjg.execute-api.us-east-1.amazonaws.com/prod/sendMail&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# functions:&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   send_mail: sendMail-prod-send_mail&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# layers:&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   None&lt;/span&gt;
#
&lt;span style=&#34;color:#75715e&#34;&gt;# Stack Outputs&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# ServiceEndpoint: https://m8ebtlirjg.execute-api.us-east-1.amazonaws.com/prod&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# ServerlessDeploymentBucketName: sendmail-prod-serverlessdeploymentbucket-1vbmb6gwt8559&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
Everything looks right, so what&amp;rsquo;s next? the source code.&lt;/p&gt;

&lt;h5 id=&#34;lambda&#34;&gt;&lt;strong&gt;Lambda&lt;/strong&gt;&lt;/h5&gt;

&lt;p&gt;This is basically the full source code for this function, as you will see it&amp;rsquo;s really simple:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; (
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;context&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;encoding/json&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;

	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/aws/aws-lambda-go/events&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/aws/aws-lambda-go/lambda&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/aws/aws-sdk-go/aws&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/aws/aws-sdk-go/aws/awserr&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/aws/aws-sdk-go/aws/session&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/aws/aws-sdk-go/service/ses&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Response&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;events&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;APIGatewayProxyResponse&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;RequestData&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; {
	&lt;span style=&#34;color:#a6e22e&#34;&gt;Email&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;
	&lt;span style=&#34;color:#a6e22e&#34;&gt;Message&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;
}

&lt;span style=&#34;color:#75715e&#34;&gt;// This could be env vars
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; (
	&lt;span style=&#34;color:#a6e22e&#34;&gt;Sender&lt;/span&gt;    = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;web@serverless.techsquad.rocks&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#a6e22e&#34;&gt;Recipient&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;kainlite@gmail.com&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#a6e22e&#34;&gt;CharSet&lt;/span&gt;   = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Handler&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;ctx&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;context&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Context&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;request&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;events&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;APIGatewayProxyRequest&lt;/span&gt;) (&lt;span style=&#34;color:#a6e22e&#34;&gt;Response&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt;) {
	&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Request: %+v\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;request&lt;/span&gt;)

	&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Processing request data for request %s.\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;request&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;RequestContext&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;RequestID&lt;/span&gt;)
	&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Body size = %d.\n&amp;#34;&lt;/span&gt;, len(&lt;span style=&#34;color:#a6e22e&#34;&gt;request&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Body&lt;/span&gt;))

	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;requestData&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;RequestData&lt;/span&gt;
	&lt;span style=&#34;color:#a6e22e&#34;&gt;json&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Unmarshal&lt;/span&gt;([]byte(&lt;span style=&#34;color:#a6e22e&#34;&gt;request&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Body&lt;/span&gt;), &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;requestData&lt;/span&gt;)

	&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RequestData: %+v&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;requestData&lt;/span&gt;)
	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(&lt;span style=&#34;color:#a6e22e&#34;&gt;requestData&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Email&lt;/span&gt;) &amp;gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; len(&lt;span style=&#34;color:#a6e22e&#34;&gt;requestData&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Message&lt;/span&gt;) &amp;gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; {
		&lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt; = &lt;span style=&#34;color:#a6e22e&#34;&gt;send&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;requestData&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Email&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;requestData&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Message&lt;/span&gt;)
	}

	&lt;span style=&#34;color:#a6e22e&#34;&gt;resp&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Response&lt;/span&gt;{
		&lt;span style=&#34;color:#a6e22e&#34;&gt;StatusCode&lt;/span&gt;:      &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;,
		&lt;span style=&#34;color:#a6e22e&#34;&gt;IsBase64Encoded&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;,
		&lt;span style=&#34;color:#a6e22e&#34;&gt;Body&lt;/span&gt;:            &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;,
		&lt;span style=&#34;color:#a6e22e&#34;&gt;Headers&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;map&lt;/span&gt;[&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;]&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;{
			&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt;:           &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;application/json&amp;#34;&lt;/span&gt;,
			&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-MyCompany-Func-Reply&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;send-mail-handler&amp;#34;&lt;/span&gt;,
		},
	}

	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;resp&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;send&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;Email&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Message&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;) (&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt;) {
	&lt;span style=&#34;color:#75715e&#34;&gt;// This could be an env var
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;sess&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;session&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;NewSession&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Config&lt;/span&gt;{
		&lt;span style=&#34;color:#a6e22e&#34;&gt;Region&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;String&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;us-east-1&amp;#34;&lt;/span&gt;)},
	)

	&lt;span style=&#34;color:#75715e&#34;&gt;// Create an SES session.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;svc&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ses&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;New&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sess&lt;/span&gt;)

	&lt;span style=&#34;color:#75715e&#34;&gt;// Assemble the email.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ses&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;SendEmailInput&lt;/span&gt;{
		&lt;span style=&#34;color:#a6e22e&#34;&gt;Destination&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ses&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Destination&lt;/span&gt;{
			&lt;span style=&#34;color:#a6e22e&#34;&gt;CcAddresses&lt;/span&gt;: []&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;{},
			&lt;span style=&#34;color:#a6e22e&#34;&gt;ToAddresses&lt;/span&gt;: []&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;{
				&lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;String&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;Recipient&lt;/span&gt;),
			},
		},
		&lt;span style=&#34;color:#a6e22e&#34;&gt;Message&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ses&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Message&lt;/span&gt;{
			&lt;span style=&#34;color:#a6e22e&#34;&gt;Body&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ses&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Body&lt;/span&gt;{
				&lt;span style=&#34;color:#a6e22e&#34;&gt;Html&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ses&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Content&lt;/span&gt;{
					&lt;span style=&#34;color:#a6e22e&#34;&gt;Charset&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;String&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;CharSet&lt;/span&gt;),
					&lt;span style=&#34;color:#a6e22e&#34;&gt;Data&lt;/span&gt;:    &lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;String&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;Message&lt;/span&gt;),
				},
				&lt;span style=&#34;color:#a6e22e&#34;&gt;Text&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ses&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Content&lt;/span&gt;{
					&lt;span style=&#34;color:#a6e22e&#34;&gt;Charset&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;String&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;CharSet&lt;/span&gt;),
					&lt;span style=&#34;color:#a6e22e&#34;&gt;Data&lt;/span&gt;:    &lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;String&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;Message&lt;/span&gt;),
				},
			},
			&lt;span style=&#34;color:#a6e22e&#34;&gt;Subject&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ses&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Content&lt;/span&gt;{
				&lt;span style=&#34;color:#a6e22e&#34;&gt;Charset&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;String&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;CharSet&lt;/span&gt;),
				&lt;span style=&#34;color:#a6e22e&#34;&gt;Data&lt;/span&gt;:    &lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;String&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;Email&lt;/span&gt;),
			},
		},
		&lt;span style=&#34;color:#75715e&#34;&gt;// We are using the same sender because it needs to be validated in SES.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;Source&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;String&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;Sender&lt;/span&gt;),

		&lt;span style=&#34;color:#75715e&#34;&gt;// Uncomment to use a configuration set
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;//ConfigurationSetName: aws.String(ConfigurationSet),
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	}

	&lt;span style=&#34;color:#75715e&#34;&gt;// Attempt to send the email.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;svc&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;SendEmail&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;input&lt;/span&gt;)

	&lt;span style=&#34;color:#75715e&#34;&gt;// Display error messages if they occur.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {
		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;aerr&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;ok&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;.(&lt;span style=&#34;color:#a6e22e&#34;&gt;awserr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Error&lt;/span&gt;); &lt;span style=&#34;color:#a6e22e&#34;&gt;ok&lt;/span&gt; {
			&lt;span style=&#34;color:#66d9ef&#34;&gt;switch&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;aerr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Code&lt;/span&gt;() {
			&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ses&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ErrCodeMessageRejected&lt;/span&gt;:
				&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;ses&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ErrCodeMessageRejected&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;aerr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Error&lt;/span&gt;())
			&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ses&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ErrCodeMailFromDomainNotVerifiedException&lt;/span&gt;:
				&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;ses&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ErrCodeMailFromDomainNotVerifiedException&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;aerr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Error&lt;/span&gt;())
			&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ses&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ErrCodeConfigurationSetDoesNotExistException&lt;/span&gt;:
				&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;ses&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ErrCodeConfigurationSetDoesNotExistException&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;aerr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Error&lt;/span&gt;())
			&lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;:
				&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aerr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Error&lt;/span&gt;())
			}
		} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
			&lt;span style=&#34;color:#75715e&#34;&gt;// Print the error, cast err to awserr.Error to get the Code and
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;// Message from an error.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;			&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Error&lt;/span&gt;())
		}

		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;there was an unexpected error&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;
	}

	&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Email Sent to address: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Recipient&lt;/span&gt;)
	&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;)
	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sent!&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
	&lt;span style=&#34;color:#a6e22e&#34;&gt;lambda&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Start&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;Handler&lt;/span&gt;)
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
The code is pretty much straight forward it only expects 2 parameters and it will send an email and return sent! if everything went well. You can debug and compile your function before uploading by issuing the command &lt;code&gt;make&lt;/code&gt; (This is really useful), and if you use &lt;code&gt;make deploy&lt;/code&gt; you will save lots of time by only deploying working files.&lt;/p&gt;

&lt;h5 id=&#34;ses&#34;&gt;&lt;strong&gt;SES&lt;/strong&gt;&lt;/h5&gt;

&lt;p&gt;For this to work you will need to verify/validate your domain in SES.&lt;/p&gt;

&lt;p&gt;Go to &lt;code&gt;SES-&amp;gt;Domains-&amp;gt;Verify a New Domain&lt;/code&gt;.
&lt;figure&gt;
    &lt;img src=&#34;https://techsquad.rocks/img/aws-ses-validate-domain.png&#34; width=&#34;100%&#34;/&gt; 
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;After putting your domain in, you will see something like this:
&lt;figure&gt;
    &lt;img src=&#34;https://techsquad.rocks/img/aws-ses-validation-and-dkim.png&#34; width=&#34;100%&#34;/&gt; 
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;As I don&amp;rsquo;t have this domain in Route53 I don&amp;rsquo;t have a button to add the records to it (which makes everything simpler and faster), but it&amp;rsquo;s easy enough just create a few dns records and wait a few minutes until you get something like this:
&lt;figure&gt;
    &lt;img src=&#34;https://techsquad.rocks/img/aws-ses-validation-ok.png&#34; width=&#34;100%&#34;/&gt; 
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;After that just test it&lt;/strong&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;serverless invoke -f send_mail -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{ &amp;#34;Email&amp;#34;: &amp;#34;kainlite@gmail.com&amp;#34;, &amp;#34;Message&amp;#34;: &amp;#34;test&amp;#34; }&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# OUTPUT:&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;statusCode&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;headers&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;application/json&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-MyCompany-Func-Reply&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;send-mail-handler&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;body&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
After hitting enter the message popped up right away in my inbox :).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Another option is to use &lt;a href=&#34;https://devhints.io/curl&#34;&gt;curl&lt;/a&gt;&lt;/strong&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{ &amp;#34;email&amp;#34;: &amp;#34;kainlite@gmail.com&amp;#34;, &amp;#34;message&amp;#34;: &amp;#34;test2&amp;#34; }&amp;#39;&lt;/span&gt; | http https://m8ebtlirjg.execute-api.us-east-1.amazonaws.com/prod/sendMail
&lt;span style=&#34;color:#75715e&#34;&gt;# OUTPUT:&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# HTTP/1.1 200 OK&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Access-Control-Allow-Origin: *&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Connection: keep-alive&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Content-Length: 32&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Content-Type: application/json&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Date: Sun, 03 Feb 2019 02:24:25 GMT&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Via: 1.1 3421ea0c15d4fdc0bcb792131861cb1f.cloudfront.net (CloudFront)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# X-Amz-Cf-Id: kGK4R9kTpcWjZap8aeyPu0vdiCtpQ4gnhCAtCeeA6OJufzaTDL__0w==&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# X-Amzn-Trace-Id: Root=1-5c5650d9-7c3c8fcc5e303ca480739560;Sampled=0&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# X-Cache: Miss from cloudfront&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# x-amz-apigw-id: UgGR7FlWIAMF75Q=&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# x-amzn-RequestId: d2f45b14-275a-11e9-a8f3-47d675eed13e&lt;/span&gt;
#
&lt;span style=&#34;color:#75715e&#34;&gt;# sent!&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OR &lt;a href=&#34;https://devhints.io/httpie&#34;&gt;httpie&lt;/a&gt;&lt;/strong&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl -i -X POST https://m8ebtlirjg.execute-api.us-east-1.amazonaws.com/prod/sendMail -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{ &amp;#34;email&amp;#34;: &amp;#34;kainlite@gmail.com&amp;#34;, &amp;#34;message&amp;#34;: &amp;#34;test3&amp;#34; }&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# OUTPUT:&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# HTTP/2 200&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# content-type: application/json&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# content-length: 32&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# date: Sun, 03 Feb 2019 02:28:04 GMT&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# x-amzn-requestid: 55cc72d0-275b-11e9-99bd-91c3fab78a2f&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# access-control-allow-origin: *&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# x-amz-apigw-id: UgG0OEigoAMF-Yg=&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# x-amzn-trace-id: Root=1-5c5651b4-fc5427b4798e14dc61fe161e;Sampled=0&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# x-cache: Miss from cloudfront&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# via: 1.1 2167e4d6cf81822217c1ea31b3d3ba7e.cloudfront.net (CloudFront)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# x-amz-cf-id: FttmBoeUaSwQ2AArTgVmI5br51zwVMfUrVpXPLGm1HacV4yS9IYMHA==&lt;/span&gt;
#
&lt;span style=&#34;color:#75715e&#34;&gt;# sent!&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;And that&amp;rsquo;s all for now, see you in the next article.&lt;/p&gt;

&lt;h3 id=&#34;errata&#34;&gt;Errata&lt;/h3&gt;

&lt;p&gt;If you spot any error or have any suggestion, please send me a message so it gets fixed.&lt;/p&gt;

&lt;p&gt;Also, you can check the source code and changes in the &lt;a href=&#34;https://github.com/kainlite/kainlite.github.io&#34;&gt;generated code&lt;/a&gt; and the &lt;a href=&#34;https://github.com/kainlite/blog&#34;&gt;sources here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Serve your static website in Github</title>
      <link>https://techsquad.rocks/blog/serving_static_sites_with_github/</link>
      <pubDate>Tue, 29 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://techsquad.rocks/blog/serving_static_sites_with_github/</guid>
      <tags>
      
        <tag>development</tag>
      
        <tag>serverless</tag>
      
        <tag>git</tag>
      
      </tags>
      <description>

&lt;h3 id=&#34;introduction&#34;&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;GitHub offers static web hosting for you and your apps this is called &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt;, you can use markdown (&lt;a href=&#34;https://jekyllrb.com/&#34;&gt;jekyll&lt;/a&gt; or just plain html), for example for this blog I generate all the files with &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo.io&lt;/a&gt; and that gets deployed to GitHub Pages, the configuration is fairly simple as we will see in the following example (this blog setup).&lt;/p&gt;

&lt;p&gt;GitHub pages offers some great examples that are really easy to follow, but if you want to know how I configured everything for this blog continue reading :), if you like it or have any comment use the disqus box at the bottom of the page.&lt;/p&gt;

&lt;h3 id=&#34;pages&#34;&gt;&lt;strong&gt;Pages&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The first step in order to use GH Pages is to create a repo (assuming that you already have an account) with the following name: username.github.io in my case is kainlite.github.io, as we can see in the following screenshot:
&lt;figure&gt;
    &lt;img src=&#34;https://techsquad.rocks/img/github-pages-repository.png&#34; width=&#34;100%&#34;/&gt; 
&lt;/figure&gt;

This repo already has the blog files, but as with any github repo you will see the default commands to push something to it, the next step is to configure the pages itself, for that you need to go to &lt;a href=&#34;https://github.com/username/username.github.io/settings&#34;&gt;Settings&lt;/a&gt; (be sure to replace username in the link), then scroll down to the GitHub Pages section. It will look something like this:&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;
    &lt;img src=&#34;https://techsquad.rocks/img/github-pages-configuration.png&#34; width=&#34;100%&#34;/&gt; 
&lt;/figure&gt;

As you can see the configuration is fairly simple, you choose the branch that will be used to serve the site, you can even pick a theme if you are going to go with Jekyll, and you can also have a custom domain and https, in this case as I push the static html files to the master branch I selected that branch, you can have any branch you like but it&amp;rsquo;s common to use gh-pages.&lt;/p&gt;

&lt;h5 id=&#34;dns&#34;&gt;&lt;strong&gt;DNS&lt;/strong&gt;&lt;/h5&gt;

&lt;p&gt;For the custom domain you need to create the following entries in your DNS &lt;code&gt;dig techsquad.rocks&lt;/code&gt;, you can find these ips in &lt;a href=&#34;https://help.github.com/articles/setting-up-an-apex-domain/&#34;&gt;this page&lt;/a&gt;:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;techsquad.rocks.        &lt;span style=&#34;color:#ae81ff&#34;&gt;300&lt;/span&gt;     IN      A       &lt;span style=&#34;color:#ae81ff&#34;&gt;185&lt;/span&gt;.199.110.153
techsquad.rocks.        &lt;span style=&#34;color:#ae81ff&#34;&gt;300&lt;/span&gt;     IN      A       &lt;span style=&#34;color:#ae81ff&#34;&gt;185&lt;/span&gt;.199.111.153
techsquad.rocks.        &lt;span style=&#34;color:#ae81ff&#34;&gt;300&lt;/span&gt;     IN      A       &lt;span style=&#34;color:#ae81ff&#34;&gt;185&lt;/span&gt;.199.108.153
techsquad.rocks.        &lt;span style=&#34;color:#ae81ff&#34;&gt;300&lt;/span&gt;     IN      A       &lt;span style=&#34;color:#ae81ff&#34;&gt;185&lt;/span&gt;.199.109.153&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
After a few minutes it should start working, and whatever you have in that repo will be served as static files, there are some limits but they are really high so you can probably start your site or blog or whatever without having to worry to much about it. If you want to know what those limits are go &lt;a href=&#34;https://help.github.com/articles/what-is-github-pages/&#34;&gt;here&lt;/a&gt;, as of now the repository size limit is 1Gb, and there is a soft bandwidth limit of 100GB per month, also 10 builds per hour.&lt;/p&gt;

&lt;h5 id=&#34;go-hugo&#34;&gt;&lt;strong&gt;Go Hugo&lt;/strong&gt;&lt;/h5&gt;

&lt;p&gt;Now to the interesting part, &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt; let&amp;rsquo;s you configure and customize several aspects of the generated files, first be sure to install hugo with your package manager or with go, the steps to create a blog are fairly simple:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;hugo new site testing-hugo
&lt;span style=&#34;color:#75715e&#34;&gt;# OUTPUT:&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Congratulations! Your new Hugo site is created in /home/kainlite/Webs/testing-hugo.&lt;/span&gt;
#
&lt;span style=&#34;color:#75715e&#34;&gt;# Just a few more steps and you&amp;#39;re ready to go:&lt;/span&gt;
#
&lt;span style=&#34;color:#75715e&#34;&gt;# 1. Download a theme into the same-named folder.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    Choose a theme from https://themes.gohugo.io/, or&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    create your own with the &amp;#34;hugo new theme &amp;lt;THEMENAME&amp;gt;&amp;#34; command.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 2. Perhaps you want to add some content. You can add single files&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    with &amp;#34;hugo new &amp;lt;SECTIONNAME&amp;gt;/&amp;lt;FILENAME&amp;gt;.&amp;lt;FORMAT&amp;gt;&amp;#34;.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 3. Start the built-in live server via &amp;#34;hugo server&amp;#34;.&lt;/span&gt;
#
&lt;span style=&#34;color:#75715e&#34;&gt;# Visit https://gohugo.io/ for quickstart guide and full documentation.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
As I have shown in the tmux article, I like to have 2 panes one small pane where I can see the files being rebuilt at each save and another pane with Vim to edit the source code. You can start the hugo webserver for development with &lt;code&gt;hugo serve -D&lt;/code&gt; and it will listen by default in the port 1313. It is very common to use themes, so you can go to the &lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;themes page&lt;/a&gt; and start your project with one of those, there are several ways to install the themes, and you can see the installation steps at the theme page, for example for the blog I started with &lt;a href=&#34;https://themes.gohugo.io/hugo-sustain/&#34;&gt;Sustain&lt;/a&gt; but then modified it to match my needs.&lt;/p&gt;

&lt;h5 id=&#34;publishing-with-git-push&#34;&gt;&lt;strong&gt;Publishing with git push&lt;/strong&gt;&lt;/h5&gt;

&lt;p&gt;The most interesting part of this setup is the simple automation that I use to publish with &lt;code&gt;git push&lt;/code&gt;, I created the following hook in the blog repo &lt;code&gt;.git/hooks/pre-push&lt;/code&gt;:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
COMMIT_MESSAGE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;git log -n &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; --pretty&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;format:%s &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;local_ref&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;

hugo -d ~/Webs/kainlite.github.io
ANYTHING_CHANGED&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;cd ~/Webs/kainlite.github.io &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git diff --exit-code&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; $? -gt &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    cd ~/Webs/kainlite.github.io &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git add . &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;COMMIT_MESSAGE&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git push origin master
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
What this simple hook does is check if there is any change and push the changes with the same commit message than in the original repo, we first grab the commit message from the original repo, and then check if something changed with git, if it did then we just add all files and push that to the repo, that will trigger a build in github pages and once completed our page will be updated and visible (it can take a few seconds sometimes, but in general it&amp;rsquo;s pretty fast).&lt;/p&gt;

&lt;p&gt;And that&amp;rsquo;s how this blog was configured, in the upcoming articles I will show you how to host your static website with S3 and serve it with cloudflare, after that we will use a go lambda function to send the form email, let me know any comments or anything that you might want me to write about.&lt;/p&gt;

&lt;h5 id=&#34;pages-environment&#34;&gt;&lt;strong&gt;Pages Environment&lt;/strong&gt;&lt;/h5&gt;

&lt;p&gt;If you paid attention at the first screenshot you probably noticed that it says &lt;em&gt;1 Environment&lt;/em&gt; that means that GH Pages have been already configured and if we click it we can see something like this:
&lt;figure&gt;
    &lt;img src=&#34;https://techsquad.rocks/img/github-pages-environment.png&#34; width=&#34;100%&#34;/&gt; 
&lt;/figure&gt;

&lt;br /&gt;
For static html sites it would be unlikely to see a failure, but it can happen if you use Jekyll for example and there is any syntax error.&lt;/p&gt;

&lt;h3 id=&#34;errata&#34;&gt;Errata&lt;/h3&gt;

&lt;p&gt;If you spot any error or have any suggestion, please send me a message so it gets fixed.&lt;/p&gt;

&lt;p&gt;Also, you can check the source code and changes in the &lt;a href=&#34;https://github.com/kainlite/kainlite.github.io&#34;&gt;generated code&lt;/a&gt; and the &lt;a href=&#34;https://github.com/kainlite/blog&#34;&gt;sources here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting started with gitkube</title>
      <link>https://techsquad.rocks/blog/getting_started_with_gitkube/</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://techsquad.rocks/blog/getting_started_with_gitkube/</guid>
      <tags>
      
        <tag>git</tag>
      
        <tag>gitkube</tag>
      
        <tag>kubernetes</tag>
      
        <tag>deployment-tools</tag>
      
      </tags>
      <description>

&lt;h3 id=&#34;gitkube&#34;&gt;&lt;strong&gt;Gitkube&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;This time we will see how to get started with &lt;a href=&#34;https://gitkube.sh/&#34;&gt;Gitkube&lt;/a&gt;, it&amp;rsquo;s a young project but it seems to work fine and it has an interesting approach compared to other alternatives, since it only relies on git and kubectl, other than that it&amp;rsquo;s just a &lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/&#34;&gt;CRD&lt;/a&gt; and a controller, so you end up with 2 pods in kube-system one for the controller and the other for gitkubed, gitkubed is in charge of cloning your repos and also build the docker images, it seems that the idea behind gitkube is for the daily use in a dev/test environment where you need to try your changes quickly and without hassle. You can find more &lt;a href=&#34;https://github.com/hasura/gitkube-example&#34;&gt;examples here&lt;/a&gt;, also be sure to check their page and documentation if you like it or want to learn more.&lt;/p&gt;

&lt;p&gt;In the examples I will be using &lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/install-minikube&#34;&gt;minikube&lt;/a&gt; or you can &lt;a href=&#34;https://github.com/kainlite/kainlite.github.io&#34;&gt;check out this repo&lt;/a&gt; that has a good overview of minikube, once installed and started (&lt;code&gt;minikube start&lt;/code&gt;) that command will download and configure the local environment, if you have been following the previous posts you already have minikube installed and working, &lt;em&gt;but in this post be sure to use &lt;em&gt;minikube tunnel&lt;/em&gt;&lt;/em&gt; if you configure gitkube with a load balancer (or if you configure any service type as load balancer):&lt;/p&gt;

&lt;h3 id=&#34;let-s-get-started&#34;&gt;Let&amp;rsquo;s get started&lt;/h3&gt;

&lt;p&gt;We&amp;rsquo;re going to deploy or re-deploy our echo bot one more time but this time using gitkube.
You can find the chat bot: &lt;a href=&#34;https://techsquad.rocks/blog/go_echobot/&#34;&gt;article here&lt;/a&gt;, and the repo: &lt;a href=&#34;https://github.com/kainlite/echobot/tree/gitkube&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First of all we need to install the gitkube binary in our machine and then the CRD in our kubernetes cluster:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ kubectl create -f https://storage.googleapis.com/gitkube/gitkube-setup-stable.yaml
customresourcedefinition.apiextensions.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;remotes.gitkube.sh&amp;#34;&lt;/span&gt; created
serviceaccount &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gitkube&amp;#34;&lt;/span&gt; created
clusterrolebinding.rbac.authorization.k8s.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gitkube&amp;#34;&lt;/span&gt; created
configmap &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gitkube-ci-conf&amp;#34;&lt;/span&gt; created
deployment.extensions &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gitkubed&amp;#34;&lt;/span&gt; created
deployment.extensions &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gitkube-controller&amp;#34;&lt;/span&gt; created

$ kubectl --namespace kube-system expose deployment gitkubed --type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;LoadBalancer --name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;gitkubed
service &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gitkubed&amp;#34;&lt;/span&gt; exposed&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
Note that there are 2 ways to install gitkube into our cluster, using the manifests as displayed there or using the gitkube binary and doing &lt;code&gt;gitkube install&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To install the gitkube binary, the easiest way is to do:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl https://raw.githubusercontent.com/hasura/gitkube/master/gimme.sh | sudo bash&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
This will download and copy the binary into: &lt;code&gt;/usr/local/bin&lt;/code&gt;, as a general rule I recommend reading whatever you are going to pipe into bash in your terminal to avoid potential dangers of &lt;em&gt;the internet&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Then we need to generate (and then create it in the cluster) a file called &lt;code&gt;remote.yaml&lt;/code&gt; (or any name you like), it&amp;rsquo;s necessary in order to tell gitkube how to deploy our application once we &lt;code&gt;git push&lt;/code&gt; it:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ gitkube remote generate -f remote.yaml
Remote name: minikube
namespace: default
SSH public key file: ~/.ssh/id_rsa.pub
Initialisation: K8S YAML Manifests
Manifests/Chart directory: Enter
Choose docker registry: docker.io/kainlite
Deployment name: echobot
Container name: echobot
Dockerfile path: Dockerfile
Build context path: ./
Add another container? &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;y/N&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Enter
Add another deployment? &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;y/N&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Enter&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
And this will yield the following &lt;code&gt;remote.yaml&lt;/code&gt; file that we then need to create in our cluster as it is a custom resource it might look a bit different from the default kubernetes resources.&lt;/p&gt;

&lt;p&gt;The actual file &lt;code&gt;remote.yaml&lt;/code&gt;:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;apiVersion: gitkube.sh/v1alpha1
kind: Remote
metadata:
  creationTimestamp: &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;
  name: minikube
  namespace: default
spec:
  authorizedKeys:
  - &lt;span style=&#34;color:#e6db74&#34;&gt;|
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA8jvVVtDSVe25p2U2tDGQyVrnv3YcWjJc6AXTUMc0YNi+QDm6s+hMTwkf2wDRD7b6Y3kmgNSqLEE0EEgOkA69c8PgypM7AwbKZ51V9XcdPd7NyLabpomNiftpUwi01DGfBr25lJV9h2MHwsI/6w1izDvQyN7fAl+aTFgx+VGg1p4FygXWeBqm0n0DfHmBI7PDXxGbuFTJHUmRVS+HPd5Bi31S9Kq6eoodBWtV2MlVnZkpF67FWt2Xo2rFKVf4pZR4N1yjZKRsvIaI5i14LvtOoOqNQ+/tPMAFAif3AhldOW06fgnddYGi/iF+CatVttwNDWmClSOek9LO72UzR4s0xQ== gabriel@kainlite&lt;/span&gt;
  deployments:
  - containers:
    - dockerfile: Dockerfile
      name: echobot
      path: ./
    name: echobot
  manifests:
    helm: {}
    path: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
  registry:
    credentials:
      secretKeyRef:
        key: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
      secretRef: minikube-regsecret
    url: docker.io/kainlite
status:
  remoteUrl: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
  remoteUrlDesc: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
There are a few details to have in mind here, the &lt;em&gt;deployment&lt;/em&gt; name because gitkube expects a deployment to be already present with that name in order to update/upgrade it, the path to the Dockerfile, or helm chart, credentials for the registry if any, I&amp;rsquo;m using a public image, so we don&amp;rsquo;t need any of that. The &lt;em&gt;wizard&lt;/em&gt; will let you choose and customize a few options for your deployment.&lt;/p&gt;

&lt;p&gt;The last step would be to finally create the resource:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ gitkube remote create -f remote.yaml
INFO&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0000&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; remote minikube created
INFO&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0000&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; waiting &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; remote url
INFO&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0000&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; remote url: ssh://default-minikube@10.98.213.202/~/git/default-minikube

  &lt;span style=&#34;color:#75715e&#34;&gt;# add the remote to your git repo and push:&lt;/span&gt;
  git remote add minikube ssh://default-minikube@10.98.213.202/~/git/default-minikube
  git push minikube master&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;After adding the new remote called &lt;em&gt;minikube&lt;/em&gt;  we have everything ready to go, so let&amp;rsquo;s test it and see what happens:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ git push minikube master
Enumerating objects: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;.
Counting objects: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;% &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;/10&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;.
Delta compression using up to &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; threads
Compressing objects: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;% &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;/10&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;.
Writing objects: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;% &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;/10&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;.92 KiB | &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;.92 MiB/s, &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;.
Total &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;delta &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, reused &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;delta &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
remote: Gitkube build system : Tue Jan  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;:50:58 UTC &lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt;: Initialising
remote:
remote: Creating the build directory
remote: Checking out &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;master:a0265bc5d0229dce0cffc985ca22ebe28532ee95&amp;#39;&lt;/span&gt; to &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/default-minikube/build/default-minikube&amp;#39;&lt;/span&gt;
remote:
remote: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; deployment&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; found in this repo
remote: Trying to build them...
remote:
remote: Building Docker image &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; : echobot
remote:
remote: Building Docker image : docker.io/kainlite/default-minikube-default.echobot-echobot:a0265bc5d0229dce0cffc985ca22ebe28532ee95
remote: Sending build context to Docker daemon   &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;.68kB
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;/12 : FROM golang:1.11.2-alpine as builder
remote:  ---&amp;gt; 57915f96905a
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;/12 : WORKDIR /app
remote:  ---&amp;gt; Using cache
remote:  ---&amp;gt; 997342e65c61
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;/12 : RUN adduser -D -g &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;app&amp;#39;&lt;/span&gt; app &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;     chown -R app:app /app &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;     apk add git &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apk add gcc musl-dev
remote:  ---&amp;gt; Using cache
remote:  ---&amp;gt; 7c6d8b9d1137
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;/12 : ADD . /app/
remote:  ---&amp;gt; Using cache
remote:  ---&amp;gt; ca751c2678c4
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;/12 : RUN go get -d -v ./... &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; go build -o main . &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; chown -R app:app /app /home/app
remote:  ---&amp;gt; Using cache
remote:  ---&amp;gt; 16e44978b140
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;/12 : FROM golang:1.11.2-alpine
remote:  ---&amp;gt; 57915f96905a
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;/12 : WORKDIR /app
remote:  ---&amp;gt; Using cache
remote:  ---&amp;gt; 997342e65c61
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;/12 : RUN adduser -D -g &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;app&amp;#39;&lt;/span&gt; app &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;     chown -R app:app /app
remote:  ---&amp;gt; Using cache
remote:  ---&amp;gt; 55f48da0f9ac
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;/12 : COPY --from&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;builder --chown&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;app /app/health_check.sh /app/health_check.sh
remote:  ---&amp;gt; Using cache
remote:  ---&amp;gt; 139250fd6c77
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;/12 : COPY --from&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;builder --chown&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;app /app/main /app/main
remote:  ---&amp;gt; Using cache
remote:  ---&amp;gt; 2f1eb9f16e9f
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;/12 : USER app
remote:  ---&amp;gt; Using cache
remote:  ---&amp;gt; a72f27dccff2
remote: Step &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;/12 : CMD &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/app/main&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
remote:  ---&amp;gt; Using cache
remote:  ---&amp;gt; 034275449e08
remote: Successfully built 034275449e08
remote: Successfully tagged kainlite/default-minikube-default.echobot-echobot:a0265bc5d0229dce0cffc985ca22ebe28532ee95
remote: pushing docker.io/kainlite/default-minikube-default.echobot-echobot:a0265bc5d0229dce0cffc985ca22ebe28532ee95 to registry
remote: The push refers to repository &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;docker.io/kainlite/default-minikube-default.echobot-echobot&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
remote: bba61bf193fe: Preparing
remote: 3f0355bbea40: Preparing
remote: 2ebcdc9e5e8f: Preparing
remote: 6f1324339fd4: Preparing
remote: 93391cb9fd4b: Preparing
remote: cb9d0f9550f6: Preparing
remote: 93448d8c2605: Preparing
remote: c54f8a17910a: Preparing
remote: df64d3292fd6: Preparing
remote: cb9d0f9550f6: Waiting
remote: 93448d8c2605: Waiting
remote: c54f8a17910a: Waiting
remote: df64d3292fd6: Waiting
remote: 2ebcdc9e5e8f: Layer already exists
remote: 6f1324339fd4: Layer already exists
remote: 3f0355bbea40: Layer already exists
remote: bba61bf193fe: Layer already exists
remote: 93391cb9fd4b: Layer already exists
remote: 93448d8c2605: Layer already exists
remote: cb9d0f9550f6: Layer already exists
remote: df64d3292fd6: Layer already exists
remote: c54f8a17910a: Layer already exists
remote: a0265bc5d0229dce0cffc985ca22ebe28532ee95: digest: sha256:3046c989fe1b1c4f700aaad875658c73ef571028f731546df38fb404ac22a9c9 size: &lt;span style=&#34;color:#ae81ff&#34;&gt;2198&lt;/span&gt;
remote:
remote: Updating Kubernetes deployment: echobot
remote: deployment &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;echobot&amp;#34;&lt;/span&gt; image updated
remote: deployment &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;echobot&amp;#34;&lt;/span&gt; successfully rolled out
remote: NAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE
remote: echobot   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;            &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;           31s
remote:
remote: Removing build directory
remote:
remote: Gitkube build system : Tue Jan  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;:51:16 UTC &lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt;: Finished build
remote:
remote:
To ssh://10.98.213.202/~/git/default-minikube
 * &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;new branch&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;      master -&amp;gt; master&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
Quite a lot happened there, first of all gitkubed checked out the commit from the branch or HEAD that we pushed to &lt;code&gt;/home/default-minikube/build/default-minikube&lt;/code&gt; and then started building and tagged the docker image with the corresponding SHA, after that it pushed the image to &lt;a href=&#34;https://cloud.docker.com/u/kainlite/repository/docker/kainlite/default-minikube-default.echobot-echobot&#34;&gt;docker hub&lt;/a&gt; and then updated the deployment that we already had in there for the echo bot.&lt;/p&gt;

&lt;p&gt;The last step would be to verify that the pod was actually updated, so we can inspect the pod configuration with &lt;code&gt;kubectl describe pod echobot-654cdbfb99-g4bwv&lt;/code&gt;:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt; $ kubectl describe pod echobot-654cdbfb99-g4bwv
Name:               echobot-654cdbfb99-g4bwv
Namespace:          default
Priority:           &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
PriorityClassName:  &amp;lt;none&amp;gt;
Node:               minikube/10.0.2.15
Start Time:         Tue, &lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; Jan &lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;:51:10 -0300
Labels:             app&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;echobot
                    pod-template-hash&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;654cdbfb99
Annotations:        &amp;lt;none&amp;gt;
Status:             Running
IP:                 &lt;span style=&#34;color:#ae81ff&#34;&gt;172&lt;/span&gt;.17.0.9
Controlled By:      ReplicaSet/echobot-654cdbfb99
Containers:
  echobot:
    Container ID:   docker://fe26ba9be6e2840c0d43a4fcbb4d79af38a00aa3a16411dee5e4af3823d44664
    Image:          docker.io/kainlite/default-minikube-default.echobot-echobot:a0265bc5d0229dce0cffc985ca22ebe28532ee95
    Image ID:       docker-pullable://kainlite/default-minikube-default.echobot-echobot@sha256:3046c989fe1b1c4f700aaad875658c73ef571028f731546df38fb404ac22a9c9
    Port:           &amp;lt;none&amp;gt;
    Host Port:      &amp;lt;none&amp;gt;
    State:          Running
      Started:      Tue, &lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; Jan &lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;:51:11 -0300
    Ready:          True
    Restart Count:  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
    Liveness:       exec &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;/bin/sh -c /app/health_check.sh&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; delay&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;0s timeout&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1s period&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;10s &lt;span style=&#34;color:#75715e&#34;&gt;#success=1 #failure=3&lt;/span&gt;
    Environment:
      SLACK_API_TOKEN:  really_long_token
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-ks4jx &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ro&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
Conditions:
  Type              Status
  Initialized       True
  Ready             True
  ContainersReady   True
  PodScheduled      True
Volumes:
  default-token-ks4jx:
    Type:        Secret &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;a volume populated by a Secret&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    SecretName:  default-token-ks4jx
    Optional:    false
QoS Class:       BestEffort
Node-Selectors:  &amp;lt;none&amp;gt;
Tolerations:     node.kubernetes.io/not-ready:NoExecute &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; 300s
                 node.kubernetes.io/unreachable:NoExecute &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; 300s
Events:
  Type    Reason     Age   From               Message
  ----    ------     ----  ----               -------
  Normal  Scheduled  39m   default-scheduler  Successfully assigned default/echobot-654cdbfb99-g4bwv to minikube
  Normal  Pulled     39m   kubelet, minikube  Container image &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;docker.io/kainlite/default-minikube-default.echobot-echobot:a0265bc5d0229dce0cffc985ca22ebe28532ee95&amp;#34;&lt;/span&gt; already present on machine
  Normal  Created    39m   kubelet, minikube  Created container
  Normal  Started    39m   kubelet, minikube  Started container&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
As we can see the image is the one that got built from our &lt;code&gt;git push&lt;/code&gt; and everything is working as expected.&lt;/p&gt;

&lt;p&gt;And that&amp;rsquo;s it for now, I think this tool has a lot of potential, it&amp;rsquo;s simple, nice and fast.&lt;/p&gt;

&lt;h3 id=&#34;errata&#34;&gt;Errata&lt;/h3&gt;

&lt;p&gt;If you spot any error or have any suggestion, please send me a message so it gets fixed.&lt;/p&gt;

&lt;p&gt;Also, you can check the source code and changes in the &lt;a href=&#34;https://github.com/kainlite/kainlite.github.io&#34;&gt;generated code&lt;/a&gt; and the &lt;a href=&#34;https://github.com/kainlite/blog&#34;&gt;sources here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
