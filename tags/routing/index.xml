<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Routing on Kubernetes, CI/CD, Git, Linux, Containers, Golang... and more</title>
    <link>https://techsquad.rocks/tags/routing/</link>
    <description>Recent content in Routing on Kubernetes, CI/CD, Git, Linux, Containers, Golang... and more</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 10 Jan 2019 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://techsquad.rocks/tags/routing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Exploring some Istio features</title>
      <link>https://techsquad.rocks/blog/exploring_some_istio_features/</link>
      <pubDate>Thu, 10 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://techsquad.rocks/blog/exploring_some_istio_features/</guid>
      <description>

&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;This article builds up on what we did in the &lt;a href=&#34;https://techsquad.rocks/blog/why_do_i_need_a_service_mesh/&#34;&gt;last article&lt;/a&gt;, so refer to that one before starting this one, if you are planing to follow the documentation examples you will find many similarities since I based this article on that.&lt;/p&gt;

&lt;p&gt;In this example I will be using &lt;a href=&#34;https://m.do.co/c/01d040b789de&#34;&gt;Digital Ocean&lt;/a&gt; (that&amp;rsquo;s my referral link), note that I do not have any association with Digital Ocean but they give you $100 to test their products for 60 days, if you spend $25 I get another $25.&lt;/p&gt;

&lt;h3 id=&#34;before-starting-a-few-concepts&#34;&gt;Before starting a few concepts&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;A VirtualService defines the rules that control how requests for a service are routed within an Istio service mesh.&lt;/li&gt;
&lt;li&gt;A DestinationRule configures the set of policies to be applied to a request after VirtualService routing has occurred.&lt;/li&gt;
&lt;li&gt;A ServiceEntry is commonly used to enable requests to services outside of an Istio service mesh.&lt;/li&gt;
&lt;li&gt;A Gateway configures a load balancer for HTTP/TCP traffic, most commonly operating at the edge of the mesh to enable ingress traffic for an application.
These basic concepts will help you understand the manifest that we are going to see.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;let-s-get-started&#34;&gt;Let&amp;rsquo;s get started&lt;/h3&gt;

&lt;p&gt;We already have the bookinfo project deployed and using all three versions of the service (ratings) but we will need to make some changes to test route based on user identity, you can check the configuration with:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;$ kubectl get destinationrules -o yaml
apiVersion: v1
items:
- apiVersion: networking.istio.io/v1alpha3
  kind: DestinationRule
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: &lt;span style=&#34;color:#e6db74&#34;&gt;|
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {&amp;#34;apiVersion&amp;#34;:&amp;#34;networking.istio.io/v1alpha3&amp;#34;,&amp;#34;kind&amp;#34;:&amp;#34;DestinationRule&amp;#34;,&amp;#34;metadata&amp;#34;:{&amp;#34;annotations&amp;#34;:{},&amp;#34;name&amp;#34;:&amp;#34;details&amp;#34;,&amp;#34;namespace&amp;#34;:&amp;#34;default&amp;#34;},&amp;#34;spec&amp;#34;:{&amp;#34;host&amp;#34;:&amp;#34;details&amp;#34;,&amp;#34;subsets&amp;#34;:[{&amp;#34;labels&amp;#34;:{&amp;#34;version&amp;#34;:&amp;#34;v1&amp;#34;},&amp;#34;name&amp;#34;:&amp;#34;v1&amp;#34;},{&amp;#34;labels&amp;#34;:{&amp;#34;version&amp;#34;:&amp;#34;v2&amp;#34;},&amp;#34;name&amp;#34;:&amp;#34;v2&amp;#34;}]}}&lt;/span&gt;
    creationTimestamp: &lt;span style=&#34;color:#e6db74&#34;&gt;2019-01-11T00:58:54Z&lt;/span&gt;
    generation: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    name: details
    namespace: default
    resourceVersion: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;921688&amp;#34;&lt;/span&gt;
    selfLink: /apis/networking.istio.io/v1alpha3/namespaces/default/destinationrules/details
    uid: &lt;span style=&#34;color:#ae81ff&#34;&gt;11490656&lt;/span&gt;-153c-&lt;span style=&#34;color:#ae81ff&#34;&gt;11e9&lt;/span&gt;-9eda-6a85233ec1d5
  spec:
    host: details
    subsets:
    - labels:
        version: v1
      name: v1
    - labels:
        version: v2
      name: v2
- apiVersion: networking.istio.io/v1alpha3
  kind: DestinationRule
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: &lt;span style=&#34;color:#e6db74&#34;&gt;|
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {&amp;#34;apiVersion&amp;#34;:&amp;#34;networking.istio.io/v1alpha3&amp;#34;,&amp;#34;kind&amp;#34;:&amp;#34;DestinationRule&amp;#34;,&amp;#34;metadata&amp;#34;:{&amp;#34;annotations&amp;#34;:{},&amp;#34;name&amp;#34;:&amp;#34;productpage&amp;#34;,&amp;#34;namespace&amp;#34;:&amp;#34;default&amp;#34;},&amp;#34;spec&amp;#34;:{&amp;#34;host&amp;#34;:&amp;#34;productpage&amp;#34;,&amp;#34;subsets&amp;#34;:[{&amp;#34;labels&amp;#34;:{&amp;#34;version&amp;#34;:&amp;#34;v1&amp;#34;},&amp;#34;name&amp;#34;:&amp;#34;v1&amp;#34;}]}}&lt;/span&gt;
    creationTimestamp: &lt;span style=&#34;color:#e6db74&#34;&gt;2019-01-11T00:58:53Z&lt;/span&gt;
    generation: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    name: productpage
    namespace: default
    resourceVersion: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;921684&amp;#34;&lt;/span&gt;
    selfLink: /apis/networking.istio.io/v1alpha3/namespaces/default/destinationrules/productpage
    uid: 10a42a24-153c-&lt;span style=&#34;color:#ae81ff&#34;&gt;11e9&lt;/span&gt;-9eda-6a85233ec1d5
  spec:
    host: productpage
    subsets:
    - labels:
        version: v1
      name: v1
- apiVersion: networking.istio.io/v1alpha3
  kind: DestinationRule
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: &lt;span style=&#34;color:#e6db74&#34;&gt;|
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {&amp;#34;apiVersion&amp;#34;:&amp;#34;networking.istio.io/v1alpha3&amp;#34;,&amp;#34;kind&amp;#34;:&amp;#34;DestinationRule&amp;#34;,&amp;#34;metadata&amp;#34;:{&amp;#34;annotations&amp;#34;:{},&amp;#34;name&amp;#34;:&amp;#34;ratings&amp;#34;,&amp;#34;namespace&amp;#34;:&amp;#34;default&amp;#34;},&amp;#34;spec&amp;#34;:{&amp;#34;host&amp;#34;:&amp;#34;ratings&amp;#34;,&amp;#34;subsets&amp;#34;:[{&amp;#34;labels&amp;#34;:{&amp;#34;version&amp;#34;:&amp;#34;v1&amp;#34;},&amp;#34;name&amp;#34;:&amp;#34;v1&amp;#34;},{&amp;#34;labels&amp;#34;:{&amp;#34;version&amp;#34;:&amp;#34;v2&amp;#34;},&amp;#34;name&amp;#34;:&amp;#34;v2&amp;#34;},{&amp;#34;labels&amp;#34;:{&amp;#34;version&amp;#34;:&amp;#34;v2-mysql&amp;#34;},&amp;#34;name&amp;#34;:&amp;#34;v2-mysql&amp;#34;},{&amp;#34;labels&amp;#34;:{&amp;#34;version&amp;#34;:&amp;#34;v2-mysql-vm&amp;#34;},&amp;#34;name&amp;#34;:&amp;#34;v2-mysql-vm&amp;#34;}]}}&lt;/span&gt;
    creationTimestamp: &lt;span style=&#34;color:#e6db74&#34;&gt;2019-01-11T00:58:54Z&lt;/span&gt;
    generation: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    name: ratings
    namespace: default
    resourceVersion: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;921686&amp;#34;&lt;/span&gt;
    selfLink: /apis/networking.istio.io/v1alpha3/namespaces/default/destinationrules/ratings
    uid: &lt;span style=&#34;color:#ae81ff&#34;&gt;111299e1&lt;/span&gt;-153c-&lt;span style=&#34;color:#ae81ff&#34;&gt;11e9&lt;/span&gt;-9eda-6a85233ec1d5
  spec:
    host: ratings
    subsets:
    - labels:
        version: v1
      name: v1
    - labels:
        version: v2
      name: v2
    - labels:
        version: v2-mysql
      name: v2-mysql
    - labels:
        version: v2-mysql-vm
      name: v2-mysql-vm
- apiVersion: networking.istio.io/v1alpha3
  kind: DestinationRule
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: &lt;span style=&#34;color:#e6db74&#34;&gt;|
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {&amp;#34;apiVersion&amp;#34;:&amp;#34;networking.istio.io/v1alpha3&amp;#34;,&amp;#34;kind&amp;#34;:&amp;#34;DestinationRule&amp;#34;,&amp;#34;metadata&amp;#34;:{&amp;#34;annotations&amp;#34;:{},&amp;#34;name&amp;#34;:&amp;#34;reviews&amp;#34;,&amp;#34;namespace&amp;#34;:&amp;#34;default&amp;#34;},&amp;#34;spec&amp;#34;:{&amp;#34;host&amp;#34;:&amp;#34;reviews&amp;#34;,&amp;#34;subsets&amp;#34;:[{&amp;#34;labels&amp;#34;:{&amp;#34;version&amp;#34;:&amp;#34;v1&amp;#34;},&amp;#34;name&amp;#34;:&amp;#34;v1&amp;#34;},{&amp;#34;labels&amp;#34;:{&amp;#34;version&amp;#34;:&amp;#34;v2&amp;#34;},&amp;#34;name&amp;#34;:&amp;#34;v2&amp;#34;},{&amp;#34;labels&amp;#34;:{&amp;#34;version&amp;#34;:&amp;#34;v3&amp;#34;},&amp;#34;name&amp;#34;:&amp;#34;v3&amp;#34;}]}}&lt;/span&gt;
    creationTimestamp: &lt;span style=&#34;color:#e6db74&#34;&gt;2019-01-11T00:58:53Z&lt;/span&gt;
    generation: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    name: reviews
    namespace: default
    resourceVersion: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;921685&amp;#34;&lt;/span&gt;
    selfLink: /apis/networking.istio.io/v1alpha3/namespaces/default/destinationrules/reviews
    uid: 10db9ee2-153c-&lt;span style=&#34;color:#ae81ff&#34;&gt;11e9&lt;/span&gt;-9eda-6a85233ec1d5
  spec:
    host: reviews
    subsets:
    - labels:
        version: v1
      name: v1
    - labels:
        version: v2
      name: v2
    - labels:
        version: v3
      name: v3
kind: List
metadata:
  resourceVersion: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
  selfLink: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
There we have all the destination rules, and now we need to apply the new manifest that will send everything to the version 1 and the user &lt;em&gt;jason&lt;/em&gt; to the version 2 of the reviews microservice.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;istio-&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;/samples/bookinfo $ kubectl apply -f networking/virtual-service-reviews-test-v2.yaml
virtualservice.networking.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;reviews&amp;#34;&lt;/span&gt; created

$ kubectl get virtualservice reviews -o yaml
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: &lt;span style=&#34;color:#e6db74&#34;&gt;|
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      {&amp;#34;apiVersion&amp;#34;:&amp;#34;networking.istio.io/v1alpha3&amp;#34;,&amp;#34;kind&amp;#34;:&amp;#34;VirtualService&amp;#34;,&amp;#34;metadata&amp;#34;:{&amp;#34;annotations&amp;#34;:{},&amp;#34;name&amp;#34;:&amp;#34;reviews&amp;#34;,&amp;#34;namespace&amp;#34;:&amp;#34;default&amp;#34;},&amp;#34;spec&amp;#34;:{&amp;#34;hosts&amp;#34;:[&amp;#34;reviews&amp;#34;],&amp;#34;http&amp;#34;:[{&amp;#34;match&amp;#34;:[{&amp;#34;headers&amp;#34;:{&amp;#34;end-user&amp;#34;:{&amp;#34;exact&amp;#34;:&amp;#34;jason&amp;#34;}}}],&amp;#34;route&amp;#34;:[{&amp;#34;destination&amp;#34;:{&amp;#34;host&amp;#34;:&amp;#34;reviews&amp;#34;,&amp;#34;subset&amp;#34;:&amp;#34;v2&amp;#34;}}]},{&amp;#34;route&amp;#34;:[{&amp;#34;destination&amp;#34;:{&amp;#34;host&amp;#34;:&amp;#34;reviews&amp;#34;,&amp;#34;subset&amp;#34;:&amp;#34;v1&amp;#34;}}]}]}}&lt;/span&gt;
  creationTimestamp: &lt;span style=&#34;color:#e6db74&#34;&gt;2019-01-11T02:30:35Z&lt;/span&gt;
  generation: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
  name: reviews
  namespace: default
  resourceVersion: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;930577&amp;#34;&lt;/span&gt;
  selfLink: /apis/networking.istio.io/v1alpha3/namespaces/default/virtualservices/reviews
  uid: e0701f0d-&lt;span style=&#34;color:#ae81ff&#34;&gt;1548&lt;/span&gt;-&lt;span style=&#34;color:#ae81ff&#34;&gt;11e9&lt;/span&gt;-9eda-6a85233ec1d5
spec:
  hosts:
  - reviews
  http:
  - match:
    - headers:
        end-user:
          exact: jason
    route:
    - destination:
        host: reviews
        subset: v2
  - route:
    - destination:
        host: reviews
        subset: v1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
What&amp;rsquo;s going on here, how Istio knows what user is logged in?, well, the app adds a header called end-user and value &lt;em&gt;jason&lt;/em&gt; then the route will be used, it&amp;rsquo;s a nifty trick.&lt;/p&gt;

&lt;p&gt;Not jason:
&lt;figure&gt;
    &lt;img src=&#34;https://techsquad.rocks/img/istio-servicev1.png&#34; width=&#34;100%&#34;/&gt; 
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;jason:
&lt;figure&gt;
    &lt;img src=&#34;https://techsquad.rocks/img/istio-servicev2.png&#34; width=&#34;100%&#34;/&gt; 
&lt;/figure&gt;

As you can see the difference in the v1 and v2 of the app are the stars below the reviews, but that is more than enough to indicate that it works, this is really nice for beta testers you don&amp;rsquo;t need or have to complicate your code but just add a header.&lt;/p&gt;

&lt;h3 id=&#34;injecting-an-http-abort-fault&#34;&gt;Injecting an HTTP abort fault:&lt;/h3&gt;

&lt;p&gt;This time we will inject a failure for our friend &lt;em&gt;jason&lt;/em&gt;:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;istio-&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;/samples/bookinfo $ kubectl apply -f networking/virtual-service-ratings-test-abort.yaml
virtualservice.networking.istio.io &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ratings&amp;#34;&lt;/span&gt; created

$ kubectl get virtualservice ratings -o yaml
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: &lt;span style=&#34;color:#e6db74&#34;&gt;|
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      {&amp;#34;apiVersion&amp;#34;:&amp;#34;networking.istio.io/v1alpha3&amp;#34;,&amp;#34;kind&amp;#34;:&amp;#34;VirtualService&amp;#34;,&amp;#34;metadata&amp;#34;:{&amp;#34;annotations&amp;#34;:{},&amp;#34;name&amp;#34;:&amp;#34;ratings&amp;#34;,&amp;#34;namespace&amp;#34;:&amp;#34;default&amp;#34;},&amp;#34;spec&amp;#34;:{&amp;#34;hosts&amp;#34;:[&amp;#34;ratings&amp;#34;],&amp;#34;http&amp;#34;:[{&amp;#34;fault&amp;#34;:{&amp;#34;abort&amp;#34;:{&amp;#34;httpStatus&amp;#34;:500,&amp;#34;percent&amp;#34;:100}},&amp;#34;match&amp;#34;:[{&amp;#34;headers&amp;#34;:{&amp;#34;end-user&amp;#34;:{&amp;#34;exact&amp;#34;:&amp;#34;jason&amp;#34;}}}],&amp;#34;route&amp;#34;:[{&amp;#34;destination&amp;#34;:{&amp;#34;host&amp;#34;:&amp;#34;ratings&amp;#34;,&amp;#34;subset&amp;#34;:&amp;#34;v1&amp;#34;}}]},{&amp;#34;route&amp;#34;:[{&amp;#34;destination&amp;#34;:{&amp;#34;host&amp;#34;:&amp;#34;ratings&amp;#34;,&amp;#34;subset&amp;#34;:&amp;#34;v1&amp;#34;}}]}]}}&lt;/span&gt;
  creationTimestamp: &lt;span style=&#34;color:#e6db74&#34;&gt;2019-01-11T02:50:59Z&lt;/span&gt;
  generation: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
  name: ratings
  namespace: default
  resourceVersion: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;932552&amp;#34;&lt;/span&gt;
  selfLink: /apis/networking.istio.io/v1alpha3/namespaces/default/virtualservices/ratings
  uid: b98799b0-154b-&lt;span style=&#34;color:#ae81ff&#34;&gt;11e9&lt;/span&gt;-9eda-6a85233ec1d5
spec:
  hosts:
  - ratings
  http:
  - fault:
      abort:
        httpStatus: &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;
        percent: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;
    match:
    - headers:
        end-user:
          exact: jason
    route:
    - destination:
        host: ratings
        subset: v1
  - route:
    - destination:
        host: ratings
        subset: v1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;So he decided to check the book reviews again and boom, the ratings service was not available but everything else works just fine, this only applies for &lt;em&gt;jason&lt;/em&gt; everyone else will see the version without stars or the error message.
&lt;figure&gt;
    &lt;img src=&#34;https://techsquad.rocks/img/istio-servicev3.png&#34; width=&#34;100%&#34;/&gt; 
&lt;/figure&gt;
&lt;/p&gt;

&lt;h3 id=&#34;notes&#34;&gt;Notes&lt;/h3&gt;

&lt;p&gt;Istio seems an it is indeed really powerful, there many more features like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Traffic shifting.&lt;/li&gt;
&lt;li&gt;Requests timeouts.&lt;/li&gt;
&lt;li&gt;Circuit breaking.&lt;/li&gt;
&lt;li&gt;Mirroring.&lt;/li&gt;
&lt;li&gt;And a lot more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I left aside Policies, Telemetry and Security, if you want to learn more about Istio I highly recommend you to try the examples yourself and read on the &lt;a href=&#34;https://istio.io/docs/tasks/traffic-management/#collapse24&#34;&gt;official documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I also spent some time improving the navigation of the blog and some other minor details, but I wanted to keep the articles going so that&amp;rsquo;s why this one is so simple and similar to the documentation.&lt;/p&gt;

&lt;h3 id=&#34;upcoming-topics-and-ideas&#34;&gt;Upcoming topics and ideas&lt;/h3&gt;

&lt;p&gt;I Want to start creating series of content on different topics, brief articles that can get you started with some new technology or maybe give you an idea of how it works, let me know if you are interested in that kind of content in the comments or via twitter 🐦 (it&amp;rsquo;s a bird, in case you cannot see unicode characters).&lt;/p&gt;

&lt;h3 id=&#34;errata&#34;&gt;Errata&lt;/h3&gt;

&lt;p&gt;If you spot any error or have any suggestion, please send me a message so it gets fixed.&lt;/p&gt;

&lt;p&gt;Also, you can check the source code and changes in the &lt;a href=&#34;https://github.com/kainlite/kainlite.github.io&#34;&gt;generated code&lt;/a&gt; and the &lt;a href=&#34;https://github.com/kainlite/blog&#34;&gt;sources here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
